{"version":3,"file":"app.d6ee356cd701e09ed0fb.js","mappings":"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","sources":["webpack://masternodeapp/app/components/AutoComplete.vue","webpack://masternodeapp/app/App.vue","webpack://masternodeapp/app/components/Chart.vue","webpack://masternodeapp/app/components/candidates/List.vue","webpack://masternodeapp/app/components/candidates/Apply.vue","webpack://masternodeapp/app/components/candidates/Resign.vue","webpack://masternodeapp/app/components/candidates/Withdraw.vue","webpack://masternodeapp/app/components/candidates/Update.vue","webpack://masternodeapp/app/components/voters/EstimateReward.vue","webpack://masternodeapp/app/components/voters/Voting.vue","webpack://masternodeapp/app/components/voters/Unvoting.vue","webpack://masternodeapp/app/components/Setting.vue","webpack://masternodeapp/./app/components/AutoComplete.vue?0180","webpack://masternodeapp/./app/components/AutoComplete.vue?1003","webpack://masternodeapp/./app/components/AutoComplete.vue","webpack://masternodeapp/./app/App.vue?d9d7","webpack://masternodeapp/./app/App.vue?9ad1","webpack://masternodeapp/./app/App.vue","webpack://masternodeapp/./app/components/Chart.vue?de6b","webpack://masternodeapp/./app/components/Chart.vue?9b32","webpack://masternodeapp/./app/components/Chart.vue","webpack://masternodeapp/app/components/candidates/View.vue","webpack://masternodeapp/./app/components/candidates/View.vue?0bb6","webpack://masternodeapp/./app/components/candidates/View.vue?1dc5","webpack://masternodeapp/./app/components/candidates/View.vue","webpack://masternodeapp/./app/components/candidates/List.vue?4481","webpack://masternodeapp/./app/components/candidates/List.vue?e66f","webpack://masternodeapp/./app/components/candidates/List.vue","webpack://masternodeapp/./app/components/NumberInput.vue?601e","webpack://masternodeapp/app/components/NumberInput.vue","webpack://masternodeapp/./app/components/NumberInput.vue?9ee3","webpack://masternodeapp/./app/components/NumberInput.vue","webpack://masternodeapp/./app/components/candidates/Apply.vue?c168","webpack://masternodeapp/./app/components/candidates/Apply.vue?fa21","webpack://masternodeapp/./app/components/candidates/Apply.vue","webpack://masternodeapp/./app/components/candidates/Resign.vue?4dce","webpack://masternodeapp/./app/components/candidates/Resign.vue?4758","webpack://masternodeapp/./app/components/candidates/Resign.vue","webpack://masternodeapp/./app/components/candidates/Withdraw.vue?f0b0","webpack://masternodeapp/./app/components/candidates/Withdraw.vue?999f","webpack://masternodeapp/./app/components/candidates/Withdraw.vue","webpack://masternodeapp/./app/components/candidates/Update.vue?4c16","webpack://masternodeapp/./app/components/candidates/Update.vue?5279","webpack://masternodeapp/./app/components/candidates/Update.vue","webpack://masternodeapp/app/components/voters/View.vue","webpack://masternodeapp/./app/components/voters/View.vue?1717","webpack://masternodeapp/./app/components/voters/View.vue?8f8f","webpack://masternodeapp/./app/components/voters/View.vue","webpack://masternodeapp/./app/components/voters/EstimateReward.vue?b2d0","webpack://masternodeapp/./app/components/voters/EstimateReward.vue?9a32","webpack://masternodeapp/./app/components/voters/EstimateReward.vue","webpack://masternodeapp/./app/components/voters/Voting.vue?906e","webpack://masternodeapp/./app/components/voters/Voting.vue?3081","webpack://masternodeapp/./app/components/voters/Voting.vue","webpack://masternodeapp/./app/components/voters/Unvoting.vue?ef0f","webpack://masternodeapp/./app/components/voters/Unvoting.vue?0e8e","webpack://masternodeapp/./app/components/voters/Unvoting.vue","webpack://masternodeapp/app/components/voters/Confirm.vue","webpack://masternodeapp/./app/components/voters/Confirm.vue?41e8","webpack://masternodeapp/./app/components/voters/Confirm.vue?a0eb","webpack://masternodeapp/./app/components/voters/Confirm.vue","webpack://masternodeapp/./app/utils.js","webpack://masternodeapp/./app/components/Setting.vue?afd8","webpack://masternodeapp/./app/routes.js","webpack://masternodeapp/./app/components/Setting.vue?dbb2","webpack://masternodeapp/./app/components/Setting.vue","webpack://masternodeapp/./app/components/PrivacyPolicy.vue?ba3b","webpack://masternodeapp/app/components/PrivacyPolicy.vue","webpack://masternodeapp/./app/components/PrivacyPolicy.vue","webpack://masternodeapp/./app/components/TermsOfService.vue?194f","webpack://masternodeapp/./app/components/TermsOfService.vue","webpack://masternodeapp/./app/app.js","webpack://masternodeapp/./helpers.js","webpack://masternodeapp/./validators/coinbaseAddress.js","webpack://masternodeapp/./node_modules/moment/locale/ sync ^\\.\\/.*$"],"sourcesContent":["<template>\n    <div class=\"autocomplete\">\n        <input\n            id=\"search-input\"\n            v-model=\"search\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"Search Candidate / Voter\"\n            @input=\"onChange\"\n            @focus=\"onChange\"\n            @keydown.enter=\"onEnter\"\n            @keydown.esc=\"onEsc\"\n            @keydown.down=\"onArrowDown\"\n            @keydown.up=\"onArrowUp\" >\n        <ul\n            v-if=\"results.length > 0\"\n            v-show=\"isOpen\"\n            id=\"autocomplete-results\"\n            class=\"autocomplete-results\">\n            <li\n                v-for=\"(result, i) in results\"\n                :key=\"i\"\n                :class=\"{ 'is-active': i === arrowCounter }\"\n                class=\"autocomplete-result\"\n                @click=\"setResult(result)\">\n                <p\n                    class=\"XDC-list__text\">\n                    <span>{{ result.rank ? result.rank + '. ' : '' }} {{ result.name || 'XDC.Network' }} -\n                        {{ result.status }}\n                    </span>\n                    <small>{{ result.candidate }}</small>\n                    <!-- <span v-html=\"formatResult(result.name)\" />\n                    <small v-html=\"formatResult(result.candidate)\" /> -->\n                </p>\n            </li>\n        </ul>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n    name: 'AutoComplete',\n\n    props: {\n        items: {\n            type: Array,\n            required: false,\n            default: () => []\n        },\n        isAsync: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data () {\n        return {\n            isOpen: false,\n            results: [],\n            search: '',\n            arrowCounter: 0\n        }\n    },\n    watch: {\n        search: async function (newValue, oldValue) {\n            if (newValue !== '') {\n                this.doSearch()\n            } else {\n                this.results = []\n            }\n        }\n    },\n    mounted () {\n        document.addEventListener('click', this.handleClickOutside)\n        // document.addEventListener('keyup', this.focusSearchInput)\n    },\n    destroyed () {\n        document.removeEventListener('click', this.handleClickOutside)\n        // document.removeEventListener('click', this.focusSearchInput)\n    },\n    methods: {\n        // focusSearchInput (evt) {\n        //     if (evt.key === 's' || evt.key === '/') {\n        //         document.getElementById('search-input').focus()\n        //     }\n        // },\n        onChange () {\n            // Let's warn the parent that a change was made\n            this.$emit('input', this.search)\n\n            // Is the data given by an outside ajax request?\n            if (this.isAsync) {\n                this.isLoading = true\n            } else {\n                // Let's  our flat array\n                this.filterResults()\n                if (this.results.length > 0) {\n                    this.isOpen = true\n                    this.arrowCounter = 0\n                }\n            }\n        },\n        filterResults () {\n            // first uncapitalize all the things\n            if (this.search) {\n                this.results = this.items.filter((item) => {\n                    // search by name\n                    let found = item.name.toLowerCase().indexOf(this.search.toLowerCase()) > -1\n\n                    // search by address\n                    if (!found) {\n                        found = item.candidate.toLowerCase().indexOf(this.search.toLowerCase()) > -1\n                    }\n\n                    return found\n                })\n                this.results = this.results.slice(0, 5)\n            }\n        },\n        formatResult (str) {\n            if (!str) {\n                return this.search\n            }\n\n            if (!this.search) {\n                return str\n            }\n\n            return str.replace(new RegExp(this.search, 'gi'), (match) => {\n                return `<mark>${match}</mark>`\n            })\n        },\n        setResult (result) {\n            this.search = ''\n            this.isOpen = false\n            this.$router.push({\n                path: `/candidate/${result.candidate}`\n            })\n        },\n        onArrowDown () {\n            if (this.arrowCounter < this.results.length - 1) {\n                this.arrowCounter++\n            }\n        },\n        onArrowUp () {\n            if (this.arrowCounter > 0) {\n                this.arrowCounter--\n            }\n        },\n        onEnter () {\n            let result = this.results[this.arrowCounter]\n\n            if (result) {\n                this.search = ''\n                this.isOpen = false\n                this.arrowCounter = -1\n                this.$router.push({\n                    path: `/candidate/${result.candidate}`\n                })\n                document.getElementById('search-input').blur()\n            }\n        },\n        onEsc () {\n            this.isOpen = false\n            this.arrowCounter = -1\n            document.getElementById('search-input').blur()\n        },\n        handleClickOutside (evt) {\n            if (!this.$el.contains(evt.target)) {\n                this.isOpen = false\n                this.arrowCounter = -1\n            }\n        },\n        async doSearch () {\n            const { data } = await axios.get('/api/candidates/search?page=1&limit=4&query=' + this.search || '')\n            this.results = data.items\n            this.isOpen = true\n        }\n    }\n}\n</script>\n","<template>\n    <div id=\"app\">\n        <div class=\"page-layout\">\n            <b-navbar\n                toggleable=\"lg\"\n                type=\"dark\">\n                <div class=\"container\">\n                    <b-navbar-brand to=\"/\">\n                        <img src=\"/app/assets/img/logo.svg\" >\n                    </b-navbar-brand>\n                    <b-navbar-toggle\n                        target=\"nav-collapse\"\n                        class=\"btn-menu-sp\"/>\n                    <b-collapse\n                        id=\"nav-collapse\"\n                        is-nav>\n                        <!-- Right aligned nav items -->\n                        <b-navbar-nav class=\"ml-auto \">\n                            <b-nav-form class=\"search-form\">\n                                <auto-complete\n                                    v-model=\"search\"\n                                    :items=\"items\"/>\n                                <b-button\n                                    variant=\"outline-success\"\n                                    type=\"submit\"\n                                    @click=\"searchCandidate\">Search</b-button>\n                            </b-nav-form>\n                        </b-navbar-nav>\n                        <b-navbar-nav class=\"ml-auto navbar-buttons\">\n                            <b-button\n                                v-if=\"!isXDCnet\"\n                                id=\"btn-become-candidate\"\n                                to=\"/setting\"\n                                variant=\"primary\">Login</b-button>\n                            <b-button\n                                v-else\n                                id=\"btn-become-candidate\"\n                                to=\"/apply\"\n                                variant=\"primary\">Become a candidate</b-button>\n                            <b-dropdown\n                                v-if=\"isXDCnet\"\n                                class=\"dd-setting ml-1\"\n                                right\n                                offset=\"25\"\n                                no-caret\n                                variant=\"primary\">\n                                <template\n                                    slot=\"button-content\">\n                                    <i class=\"tm-cog icon-2x\"/>\n                                </template>\n                                <b-dropdown-item\n                                    :to=\"`/voter/${account}`\"\n                                    class=\"dd-address\">\n                                    {{ truncate(account, 20) }}\n                                </b-dropdown-item>\n                                <b-dropdown-divider />\n                                <b-dropdown-item\n                                    target=\"_bank\"\n                                    href=\"https://howto.xinfin.org/\">Help</b-dropdown-item>\n                                <b-dropdown-item to=\"/setting\">Settings/Withdraws</b-dropdown-item>\n                                <b-dropdown-divider />\n                                <b-dropdown-item\n                                    v-if=\"!mobileCheck && isXDCnet\"\n                                    href=\"/\"\n                                    @click=\"signOut\">Sign out</b-dropdown-item>\n                            </b-dropdown>\n                        </b-navbar-nav>\n                    </b-collapse>\n                </div>\n            </b-navbar>\n            <div>\n                <router-view/>\n            </div>\n            <footer\n                class=\"XDC-footer\">\n                <div class=\"container\">\n                    <div class=\"row\">\n                        <div class=\"col-md-8\">\n                            <!-- <div class=\"XDC-footer__links\">\n                                <ul class=\"list-inline\">\n                                    <li class=\"list-inline-item\">\n                                        <a\n                                            :href=\"needHelpLink\"\n                                            target=\"_blank\">Need help?</a>\n                                    </li>|\n                                    <li class=\"list-inline-item\">\n                                        <a\n                                            target=\"_blank\"\n                                            href=\"https://docs.xinfin.network/legal/privacy\">Privacy Policy</a>\n                                    </li>|\n                                    <li class=\"list-inline-item\">\n                                        <a\n                                            target=\"_blank\"\n                                            href=\"https://docs.xinfin.network/legal/terms-of-use\">Terms of Use</a>\n                                    </li>|\n                                    <li class=\"list-inline-item\">\n                                        <a\n                                            target=\"_blank\"\n                                            href=\"/api-docs\">API Documentation</a>\n                                    </li>\n                                </ul>\n                            </div> -->\n                            <div class=\"XDC-footer__copyright\">\n                                &copy; {{ (new Date()).getFullYear() }} XDC.Network All rights reserved.\n                            </div>\n                        </div>\n                        <div class=\"col-md-4 XDC-footer__social\">\n                            <ul class=\"list-inline\">\n                                <li class=\"list-inline-item\">\n                                    <a\n                                        href=\"https://t.me/xinfintalk\"\n                                        target=\"_blank\">\n                                        <i class=\"tm-telegram\" />\n                                    </a>\n                                </li>\n                                <li class=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.facebook.com/XinFinHybridBlockchain/\"\n                                        target=\"_blank\">\n                                        <i class=\"tm-facebook\" />\n                                    </a>\n                                </li>\n                                <li class=\"list-inline-item\">\n                                    <a\n                                        href=\"https://twitter.com/XinFin_Official\"\n                                        target=\"_blank\">\n                                        <i class=\"tm-twitter\" />\n                                    </a>\n                                </li>\n                                <li class=\"list-inline-item\">\n                                    <a\n                                        href=\"https://github.com/XinFinOrg\"\n                                        target=\"_blank\">\n                                        <i class=\"tm-github\" />\n                                    </a>\n                                </li>\n                                <li class=\"list-inline-item\">\n                                    <a\n                                        href=\"https://www.reddit.com/r/xinfin\"\n                                        target=\"_blank\">\n                                        <i class=\"tm-reddit\" />\n                                    </a>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport store from 'store'\nimport moment from 'moment'\nimport pkg from '../package.json'\nimport AutoComplete from './components/AutoComplete.vue'\nexport default {\n    name: 'App',\n    metaInfo: {\n        title: 'XDC Network Governance DApp ',\n        meta: [\n            { name: 'description', content: 'Providing a professional UI which allows coin-holders to stake for masternodes, decentralized governance and explore masternode performance statistics' } // eslint-disable-line\n        ]\n    },\n    components: {\n        AutoComplete\n    },\n    data () {\n        return {\n            isReady: !!this.web3,\n            showProgressBar: false,\n            selectedCandidate: null,\n            search: null,\n            isXDCnet: false,\n            version: pkg.version,\n            account: '',\n            items: [],\n            statusClass: '',\n            interval: '',\n            notifications: [],\n            readNoti: 0,\n            needHelpLink: 'https://docs.xinfin.network/faq/products/xdcchain-applications/masternodeapp'\n        }\n    },\n    computed: {\n        mobileCheck: () => {\n            const isAndroid = navigator.userAgent.match(/Android/i)\n            const isIOS = navigator.userAgent.match(/iPhone|iPad|iPod/i)\n            return (isAndroid || isIOS)\n        }\n    },\n    async updated () {\n        await this.checkNetworkAndLogin()\n    },\n    destroyed () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    created: async function () {\n        let self = this\n\n        try {\n            if (!self.isReady && self.NetworkProvider === 'metamask') {\n                throw Error('Web3 is not properly detected. Have you installed MetaMask extension?')\n            }\n            self.$bus.$on('logged', async () => {\n                await self.checkNetworkAndLogin()\n                setTimeout(async () => {\n                    await self.getNotification()\n                }, 500)\n            })\n            // const candidates = await axios.get('/api/candidates')\n            // const map = candidates.data.items.map((c) => {\n            //     return {\n            //         name: c.name ? c.name : 'XDC.Network',\n            //         address: c.candidate\n            //     }\n            // })\n            // const mapping = await Promise.all(map)\n            // self.items = mapping\n            setTimeout(async () => {\n                await self.getNotification()\n            }, 500)\n            if (this.isXDCnet) {\n                this.interval = setInterval(async () => {\n                    await this.getNotification()\n                }, 40000)\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    methods: {\n        searchCandidate (e) {\n            e.preventDefault()\n            const regexpAddr = /^(0x)?[0-9a-fA-F]{40}$/\n\n            let to = null\n            let search = (this.search || '').trim()\n            if (regexpAddr.test(search)) {\n                axios.get(`/api/search/${search}`)\n                    .then((response) => {\n                        const data = response.data\n                        if (Object.keys(data.candidate).length > 0) {\n                            to = { path: `/candidate/${data.candidate.candidate}` }\n                        } else if (Object.keys(data.voter).length > 0) {\n                            to = { path: `/voter/${search}` }\n                        } else {\n                            this.$toasted.show('Not found')\n                        }\n                        if (!to) {\n                            return false\n                        }\n                        this.search = ''\n                        return this.$router.push(to)\n                    }).catch(e => console.log(e))\n            }\n        },\n        goPage: function (s) {\n            this.$router.push({ path: `/candidate/${s}` })\n        },\n        async checkNetworkAndLogin () {\n            let self = this\n            setTimeout(async () => {\n                try {\n                    let contract// = await self.getXDCValidatorInstance()\n                    contract = self.XDCValidator\n                    self.account = store.get('address') ||\n                        self.$store.state.address || await self.getAccount()\n                    if (self.account.substring(0, 2) === '0x') {\n                        self.account = 'xdc' + self.account.substring(2)\n                    }\n                    if (self.account && contract) {\n                        self.isXDCnet = true\n                    }\n                } catch (error) {}\n            }, 0)\n        },\n        signOut () {\n            store.clearAll()\n            Object.assign(this.$store.state, this.getDefaultState())\n            // this.$store.state.address = null\n\n            this.$router.go({\n                path: '/'\n            })\n        },\n        async readClick () {\n            this.statusClass = 'display: none;'\n        },\n        async getNotification () {\n            try {\n                const self = this\n                if (self.account && self.isXDCnet) {\n                    const { data } = await axios.get('/api/voters/' + self.account.toLowerCase() + '/getNotification')\n                    if (data.length > 0) {\n                        let items = []\n                        let readNoti = 0\n                        data.map(d => {\n                            if (!d.isRead) {\n                                readNoti++\n                            }\n                            items.push({\n                                event: d.event,\n                                createdAt: moment(d.createdAt).fromNow(),\n                                name: d.candidateName,\n                                candidate: d.candidate,\n                                isRead: d.isRead\n                            })\n                        })\n                        self.readNoti = readNoti\n                        self.notifications = items\n                    }\n                }\n            } catch (error) {\n                console.log(error)\n            }\n        },\n        async markReadAll () {\n            // mark read all\n            this.readNoti = 0\n            await axios.get('/api/voters/' + this.account.toLowerCase() + '/markReadAll')\n            this.notifications = this.notifications.map(n => {\n                n.isRead = true\n                return n\n            })\n        }\n    }\n}\n</script>\n","<template>\n    <highcharts :options=\"chartOptions\" />\n</template>\n<script>\nimport axios from 'axios'\nimport lodashGet from 'lodash/get'\n\nexport default {\n    props: {\n        host: {\n            type: String,\n            default: ''\n        },\n        dataType: {\n            type: String,\n            default: ''\n        }\n    },\n    data () {\n        return {\n            config: {},\n            chartOptions: {\n                chart: {\n                    backgroundColor: {\n                        linearGradient: {\n                            x1: '100%',\n                            x2: 0,\n                            y2: '100%'\n                        },\n                        stops: [\n                            [0, '#2e2e4b'],\n                            [1, '#323252']\n                        ]\n                    },\n                    borderRadius: 8,\n                    resetZoomButton: {\n                        theme: {\n                            fill: '#678be0',\n                            stroke: '#678be0',\n                            style: {\n                                color: '#fff'\n                            },\n                            states: {\n                                hover: {\n                                    fill: '#739dff'\n                                }\n                            }\n                        },\n                        relativeTo: 'chart'\n                    },\n                    spacing: [40, 35, 25, 30],\n                    type: 'areaspline',\n                    zoomType: 'x'\n                },\n                credits: {\n                    enabled: false\n                },\n                title: {\n                    text: '',\n                    style: {\n                        color: '#7573a6'\n                    }\n                },\n                xAxis: {\n                    crosshair: {\n                        color: '#7270a0'\n                    },\n                    gridLineColor: '#4b497a',\n                    gridLineWidth: 1,\n                    labels: {\n                        style: {\n                            color: '#7371a2'\n                        }\n                    },\n                    lineColor: '#4b497a',\n                    tickWidth: 0,\n                    type: 'datetime'\n                },\n                yAxis: {\n                    gridLineColor: '#4b497a',\n                    gridLineWidth: 1,\n                    labels: {\n                        style: {\n                            color: '#7371a2'\n                        }\n                    },\n                    max: 100,\n                    tickInterval: 20,\n                    title: ''\n                },\n                plotOptions: {\n                    areaspline: {\n                        marker: {\n                            radius: 1\n                        },\n                        states: {\n                            hover: {\n                                lineWidth: 3\n                            }\n                        },\n                        lineWidth: 3,\n                        threshold: 0\n                    }\n                },\n                tooltip: {\n                    crosshairs: true,\n                    shared: true\n                },\n                series: []\n            },\n            title: '',\n            series: []\n        }\n    },\n    watch: {\n        title (newValue) {\n            this.chartOptions.title.text = newValue\n        },\n        series (newValue) {\n            this.chartOptions.series = newValue\n        },\n        host: async function (newValue, oldValue) {\n            this.host = newValue\n            // rebuild CPUs\n            let query = this.buildQuery()\n\n            let data = await this.fetchData('telegraf', query, 'ms')\n            this.series = this.bindDataToChart(data, this.colors, this.fillColor)\n        }\n    },\n    mounted: async function () {\n        // console.log(this.host)\n        this.config = await this.appConfig()\n        this.colors = [\n            {\n                linearGradient: {\n                    x1: '50%',\n                    y1: '50%',\n                    x2: '100%',\n                    y2: '0%'\n                },\n                stops: [\n                    [0, '#ea7587'],\n                    [0.5, '#e6b888'],\n                    [1, '#e6b888']\n                ]\n            },\n            {\n                linearGradient: {\n                    x1: '50%',\n                    y1: '50%',\n                    x2: '100%',\n                    y2: '0%'\n                },\n                stops: [\n                    [0, '#6362db'],\n                    [0.5, '#9e4bdd'],\n                    [1, '#9e4bdd']\n                ]\n            }\n        ]\n\n        this.fillColor = {\n            linearGradient: {\n                x1: '50%',\n                y1: '100%',\n                x2: '50%'\n            },\n            stops: [\n                [0, 'rgba(50, 50, 86, .7)'],\n                [0.63, 'rgba(59, 54, 88, .7)']\n            ]\n        }\n\n        // CPUs\n        let query = this.buildQuery()\n\n        let data = await this.fetchData('telegraf', query, 'ms')\n        if (data) {\n            if (this.dataType === 'cpu' && !lodashGet(data, ['0', 'series'])) {\n                this.$bus.$emit('CPUResult', false)\n            }\n            if (this.dataType === 'memory' && !lodashGet(data, ['0', 'series'])) {\n                this.$bus.$emit('MEMResult', false)\n            }\n        }\n\n        this.series = this.bindDataToChart(data, this.colors, this.fillColor)\n    },\n    methods: {\n        fetchData: async function (db, query, epoch) {\n            let chartData = []\n            try {\n                this.chartLoading = true\n\n                // eslint-disable-next-line max-len\n                let { data } = await axios.get(`/api/monitor?db=${db}&q=${query}&epoch=${epoch}`)\n\n                this.chartLoading = false\n                chartData = data\n            } catch (e) {\n                this.chartLoading = false\n                if (typeof e.response !== 'undefined' && e.response.data.error) {\n                    console.log(e.response.data.error)\n                } else {\n                    console.log(e)\n                }\n            }\n\n            return chartData\n        },\n        bindDataToChart: function (data, colors, fillColor) {\n            let chartSeries = []\n            if (typeof data.results !== 'undefined') {\n                let zIndex = 5\n                data.results.map((r, idx) => {\n                    let series = {}\n                    if (r.series.length) {\n                        let columns = r.series[0].columns\n                        let data = r.series[0].values\n\n                        series.name = typeof columns[1] !== 'undefined' ? columns[1] : ''\n                        series.data = data\n\n                        if (typeof colors[idx] !== 'undefined') {\n                            series.color = colors[idx]\n                        }\n\n                        series.fillColor = fillColor\n                        series.zIndex = --zIndex\n                    }\n\n                    chartSeries.push(series)\n                })\n            }\n\n            return chartSeries\n        },\n        buildQuery () {\n            let host = this.host\n            let alias = []\n            let query = ''\n\n            if (this.dataType === 'cpu') {\n                alias = [ `${host}_cpu_user`, `${host}_cpu_idle` ]\n                // eslint-disable-next-line max-len\n                query = `SELECT mean(\"usage_user\") AS \"${alias[0]}\" FROM \"cpu\" WHERE (\"cpu\" = 'cpu-total' AND \"host\" = '${host}') AND time >= now() - 6h GROUP BY time(60s) fill(null);SELECT mean(\"usage_idle\") AS \"${alias[1]}\"  FROM \"cpu\" WHERE (\"cpu\" = 'cpu-total' AND \"host\" = '${host}') AND time >= now() - 6h GROUP BY time(60s) fill(null)`\n                query = encodeURI(query).replace('=', '%3D').replace(';', '%3B')\n            }\n\n            if (this.dataType === 'memory') {\n                alias = `${host}_memory_usage`\n                // eslint-disable-next-line max-len\n                query = `SELECT mean(\"used_percent\") AS \"${alias}\" FROM \"mem\" WHERE (\"host\" = '${host}') AND time >= now() - 6h GROUP BY time(60s) fill(null)`\n                query = encodeURI(query).replace('=', '%3D').replace(';', '%3B')\n            }\n            return query\n        }\n    }\n}\n</script>\n","<template>\n    <div class=\"main-content\">\n        <div\n            class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <h4 class=\"h4 text-center mb-4\">XDC Staking</h4>\n                </div>\n                <div class=\"col-md-6 col-lg-4\">\n                    <b-card class=\"XDC-card\">\n                        <h6 class=\"XDC-card__title\">MasterNode / Total Nodes</h6>\n                        <p class=\"XDC-card__text\">\n                            {{ activeCandidates }}/{{ activeCandidates+totalProposedNodes }}\n                        </p>\n                    </b-card>\n                </div>\n                <div class=\"col-md-6 col-lg-4\">\n                    <b-card class=\"XDC-card XDC-card\">\n                        <h6 class=\"XDC-card__title\">Staked Amount</h6>\n                        <p class=\"XDC-card__text\">\n                            {{ formatCurrencySymbol(formatBigNumber(toXDCNumber(chainConfig.XDCStakeAmount),2)) }}\n                        </p>\n                    </b-card>\n                </div>\n                <div class=\"col-md-6 col-lg-4\">\n                    <b-card class=\"XDC-card XDC-card\">\n                        <h6 class=\"XDC-card__title\">Epoch / Block Number</h6>\n                        <p class=\"XDC-card__text\">\n                            {{ Math.floor(chainConfig.blockNumber / chainConfig.epoch) + 1 }} / {{ chainConfig.blockNumber }}</p>\n                    </b-card>\n                </div>\n                <!--<div\n                    class=\"col-md-6 col-lg-3\">\n                    <b-card class=\"XDC-card XDC-card\">\n                        <h6 class=\"XDC-card__title\">Avg. Staking ROI</h6>\n                        <p class=\"XDC-card__text\">\n                            {{ averageStakingROI ? averageStakingROI + '%' : '-&#45;&#45;' }}</p>\n                    </b-card>\n                </div>\n                <div\n                    class=\"col-md-6 col-lg-3\">\n                    <b-card class=\"XDC-card XDC-card\">\n                        <h6 class=\"XDC-card__title\">Avg. Owner ROI</h6>\n                        <p class=\"XDC-card__text\">\n                            &lt;!&ndash; eslint-disable-next-line max-len &ndash;&gt;\n                            {{ averageOwnerROI ? averageOwnerROI + '%' : '-&#45;&#45;' }}</p>\n                    </b-card>\n                </div>-->\n            </div>\n        </div>\n\n        <div\n            v-if=\"candidates.length <= 0\"\n            class=\"XDC-loading\"/>\n        <div\n            v-else\n            class=\"container\">\n            <b-card class=\"XDC-card xdc-p-none\">\n                <div class=\"XDC-custom-tab p-4\">\n                    <ul>\n                        <li\n                            v-if=\"activeCandidates !== 0\"\n                            :class=\"currentTable === 'masternodes' ? 'active' : ''\"\n                            @click=\"changeTable('masternodes')\">Masternodes ({{ activeCandidates }})</li>\n                        <li\n                            v-if=\"slashedMN !== 0\"\n                            :class=\"currentTable === 'slashed' ? 'active' : ''\"\n                            @click=\"changeTable('slashed')\">Slashed MNs ({{ slashedMN }})</li>\n                        <li\n                            v-if=\"totalProposedNodes !== 0\"\n                            :class=\"currentTable === 'proposed' ? 'active' : ''\"\n                            @click=\"changeTable('proposed')\">Standby Nodes ({{ totalProposedNodes }})</li>\n                        <li\n                            v-if=\"resignedMN !== 0\"\n                            :class=\"currentTable === 'resigned' ? 'active' : ''\"\n                            @click=\"changeTable('resigned')\">Resigned Nodes ({{ resignedMN }})</li>\n                    </ul>\n                </div>\n\n                <b-pagination\n                    v-if=\"mobileCheck && totalRows > 0 && totalRows > perPage\"\n                    :total-rows=\"totalRows\"\n                    :per-page=\"perPage\"\n                    v-model=\"currentPage\"\n                    align=\"center\"\n                    class=\"XDC-pagination\"\n                    @change=\"pageChange\"/>\n                <b-table\n                    :items=\"candidates\"\n                    :fields=\"fields\"\n                    :per-page=\"perPage\"\n                    :class=\"'XDC-table XDC-table--candidates ' + tableCssClass\"\n                    empty-text=\"There are no candidates to show\"\n                    stacked=\"lg\"\n                    @sort-changed=\"sortingChange\" >\n\n                    <template\n                        slot=\"address\"\n                        slot-scope=\"data\">\n                        <router-link\n                            :to=\"'/candidate/' + data.item.address\">\n                            {{ truncate(data.item.address, 18) }}\n                        </router-link>\n                    </template>\n\n                    <template\n                        slot=\"name\"\n                        slot-scope=\"data\">\n                        <div\n                            :id=\"`name_${data.index}`\"\n                            class=\"text-truncate\">\n                            {{ data.item.name }}\n                        </div>\n                        <b-tooltip\n                            v-if=\"data.item.name.length > 20\"\n                            :target=\"`name_${data.index}`\">\n                            {{ data.item.name }}\n                        </b-tooltip>\n                    </template>\n\n                    <template\n                        slot=\"capacity\"\n                        slot-scope=\"data\">{{ formatCurrencySymbol(formatBigNumber(data.item.cap, 2)) }}\n                    </template>\n\n                    <template\n                        slot=\"latestSignedBlock\"\n                        slot-scope=\"data\">\n                        <div>\n                            <span\n                                :class=\"`float-left mr-2 ${(data.item.status !== 'STANDBY')\n                                    ? ` XDC-status-dot XDC-status-dot--${getColor(\n                                data.item.latestSignedBlock || '', currentBlock)}` : '' }`\">\n                                {{ data.item.latestSignedBlock }}\n                            </span>\n                        </div>\n                    </template>\n\n                    <template\n                        slot=\"status\"\n                        slot-scope=\"data\">\n                        <div class=\"mt-2 mt-lg-0\">\n                            <span\n                                :class=\"'XDC-chip '\n                                    + (data.item.status === 'STANDBY' || data.item.status === 'MASTERNODE' ?\n                                'XDC-chip--primary' : 'XDC-chip--accent') \">\n                                {{ data.item.status.toUpperCase() }}\n                            </span>\n                        </div>\n                    </template>\n\n                    <!--<template\n                        slot=\"action\"\n                        slot-scope=\"data\">\n                        <b-button\n                            v-if=\"data.item.status === 'STANDBY' || data.item.status === 'MASTERNODE'\"\n                            variant=\"primary\"\n                            class=\"mt-3 mt-lg-0 vote-btn\"\n                            @click=\"onRowClick(data.item.address)\">Vote</b-button>\n                    </template>-->\n                </b-table>\n                <b-pagination\n                    v-if=\"totalRows > 0 && totalRows > perPage\"\n                    :total-rows=\"totalRows\"\n                    :per-page=\"perPage\"\n                    v-model=\"currentPage\"\n                    align=\"center\"\n                    class=\"XDC-pagination\"\n                    @change=\"pageChange\"/>\n            </b-card>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport BigNumber from 'bignumber.js'\nimport store from 'store'\nimport Web3 from 'xdc3'\n\nexport default {\n    name: 'App',\n    data () {\n        return {\n            chainConfig: {},\n            fields: [\n                // { key: 'rank', label: 'Rank' },\n                { key: 'address', label: 'Address', sortable: false },\n                { key: 'name', label: 'Name', sortable: false },\n                { key: 'capacity', label: 'Capacity', sortable: true },\n                { key: 'latestSignedBlock', label: 'Latest Signed Block', sortable: true },\n                { key: 'status', label: 'Status', sortable: false }\n            ],\n            sortBy: 'capacity',\n            sortDesc: true,\n            isReady: false,\n            account: '',\n            voteActive: false,\n            voteValue: 1,\n            candidates: [],\n            currentPage: this.$store.state.currentPage || 1,\n            perPage: 30,\n            totalRows: 0,\n            tableCssClass: '',\n            loading: false,\n            hasProposed: false,\n            hasResigned: false,\n            isXDCnet: false,\n            activeCandidates: 0,\n            resignedMN: 0,\n            slashedMN: 0,\n            totalProposedNodes: 0,\n            currentTable: 'masternodes',\n            averageStakingROI: '',\n            averageOwnerROI: '',\n            currentBlock: ''\n        }\n    },\n    computed: {\n        mobileCheck: () => {\n            const isAndroid = navigator.userAgent.match(/Android/i)\n            const isIOS = navigator.userAgent.match(/iPhone|iPad|iPod/i)\n            return (isAndroid || isIOS)\n        }\n    },\n    watch: {},\n    updated () {},\n    created: async function () {\n        let self = this\n        self.isReady = !!self.web3\n        const config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = config.blockchain\n        self.currentBlock = self.chainConfig.blockNumber\n        console.log(self.chainConfig.XDCStakeAmount, 'chainConfig.XDCStakeAmountchainConfig.XDCStakeAmountchainConfig.XDCStakeAmount')\n\n        try {\n            if (self.isReady || window.web3) {\n                if (window.web3 && window.web3.currentProvider &&\n                    window.web3.currentProvider.isXDCWallet) {\n                    const wjs = new Web3(window.web3.currentProvider)\n                    await self.setupProvider('XDCwalletDapp', wjs)\n                    self.account = await self.getAccount()\n                    if (self.account.substring(0, 2) === '0x') {\n                        self.account = 'xdc' + self.account.substring(2)\n                    }\n                    if (self.account) {\n                        self.$store.state.address = self.account\n                        store.set('address', self.account.toLowerCase())\n                        store.set('network', 'XDCwalletDapp')\n                        self.$bus.$emit('logged', 'user logged')\n                    }\n                } else {\n                    self.account = store.get('address') ||\n                    self.$store.state.address || await self.getAccount()\n                }\n                let contract\n                contract = self.XDCValidator\n                if (self.account && contract) {\n                    self.isXDCnet = true\n                }\n            }\n        } catch (error) {\n            console.log(error)\n        }\n        self.getDataFromApi()\n        // self.averageroi()\n    },\n    mounted () { },\n    methods: {\n        watch: async function () {\n            let contract = await self.getXDCValidatorInstance()\n            contract = self.XDCValidator\n            const allEvents = contract.allEvents({\n                fromBlock: self.blockNumber,\n                toBlock: 'latest'\n            })\n\n            allEvents.watch((err, res) => {\n                if (err || !(res || {}).args) {\n                    console.error(err, res)\n                } else {\n                    console.log(res)\n                }\n            })\n        },\n        getTableCssClass: function () {\n            let cssClass = ''\n\n            if (!this.candidates.length) {\n                cssClass += ' XDC-table--candidates-empty'\n            }\n\n            cssClass += this.loading ? ' XDC-table--loading' : ''\n\n            this.tableCssClass = cssClass\n        },\n        onRowClick (address) {\n            if (this.isXDCnet) {\n                this.$router.push({ path: `/voting/${address}` })\n            } else {\n                const toastMessage = 'You can not vote at the moment. Please log in first.'\n                this.$toasted.show(toastMessage, {\n                    type: 'info',\n                    delay: '5000'\n                })\n            }\n        },\n        getColor (latestSignedBlock, currentBlock) {\n            let result\n            switch (true) {\n            case latestSignedBlock >= (currentBlock - 100):\n                result = 'cyan'\n                break\n            case latestSignedBlock < (currentBlock - 100) &&\n                latestSignedBlock >= (currentBlock - 200):\n                result = 'yellow'\n                break\n            case latestSignedBlock < (currentBlock - 200):\n                result = 'pink'\n                break\n            default:\n                result = ''\n            }\n            return result\n        },\n\n        toXDCNumber: (wei) => {\n            BigNumber.config({ EXPONENTIAL_AT: [-100, 100] })\n\n            const weiNumber = new BigNumber(wei.toString())\n            const divided = 10 ** 18\n            return weiNumber.dividedBy(divided)\n            // web3.utils.fromWei(wei, 'ether')\n        },\n        async getDataFromApi () {\n            const self = this\n            try {\n                self.loading = true\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                }\n                const query = self.serializeQuery(params)\n\n                let candidates = await axios.get('/api/candidates/masternodes' + '?' + query)\n                let items = []\n\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || 'XDC.Network',\n                        cap: new BigNumber(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: candidate.latestSignedBlock || 0,\n                        rank: candidate.rank\n                    })\n                })\n                self.candidates = items\n\n                self.activeCandidates = candidates.data.activeCandidates\n                self.totalRows = candidates.data.activeCandidates\n                self.resignedMN = candidates.data.totalResigned\n                self.totalProposedNodes = candidates.data.totalProposed\n                self.slashedMN = candidates.data.totalSlashed\n\n                self.loading = false\n                self.getTableCssClass()\n            } catch (e) {\n                self.loading = false\n                console.log(e)\n            }\n        },\n        pageChange (page) {\n            this.$store.state.currentPage = page\n            this.currentPage = page\n            this.loadDataTables(this.currentTable)\n            window.scrollTo(0, 320)\n        },\n        sortingChange (obj) {\n            this.sortBy = obj.sortBy\n            this.sortDesc = obj.sortDesc\n            this.loadDataTables(this.currentTable)\n        },\n        async getSlashedMNs () {\n            const self = this\n            try {\n                self.loading = true\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                }\n                const query = self.serializeQuery(params)\n\n                let candidates = await axios.get('/api/candidates/slashedMNs' + '?' + query)\n                let items = []\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || 'XDC.Network',\n                        cap: new BigNumber(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: candidate.latestSignedBlock || 0\n                    })\n                })\n                self.candidates = items\n\n                self.totalRows = candidates.data.total\n\n                self.loading = false\n                self.getTableCssClass()\n            } catch (e) {\n                self.loading = false\n                console.log(e)\n            }\n        },\n        async getProposedMNs () {\n            const self = this\n            try {\n                self.loading = true\n\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                }\n                const query = self.serializeQuery(params)\n\n                let candidates = await axios.get('/api/candidates/proposedMNs' + '?' + query)\n                let items = []\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || 'XDC.Network',\n                        cap: new BigNumber(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: '---' // candidate.latestSignedBlock\n                    })\n                })\n                self.candidates = items\n\n                self.totalRows = candidates.data.total\n\n                self.loading = false\n                self.getTableCssClass()\n            } catch (e) {\n                self.loading = false\n                console.log(e)\n            }\n        },\n        async getResignedMNs () {\n            const self = this\n            try {\n                self.loading = true\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                }\n                const query = self.serializeQuery(params)\n\n                let candidates = await axios.get('/api/candidates/resignedMNs' + '?' + query)\n                let items = []\n                candidates.data.items.map(async (candidate, index) => {\n                    items.push({\n                        address: candidate.candidate,\n                        owner: candidate.owner.toLowerCase(),\n                        status: candidate.status,\n                        isMasternode: candidate.isMasternode,\n                        isPenalty: candidate.isPenalty,\n                        name: candidate.name || 'XDC.Network',\n                        cap: new BigNumber(candidate.capacity).div(10 ** 18).toNumber(),\n                        latestSignedBlock: candidate.latestSignedBlock || 0\n                    })\n                })\n                self.candidates = items\n\n                self.totalRows = candidates.data.total\n\n                self.loading = false\n                self.getTableCssClass()\n            } catch (e) {\n                self.loading = false\n                console.log(e)\n            }\n        },\n        changeTable (tableName) {\n            this.currentPage = 1\n            this.$store.state.currentPage = 1\n            if (this.currentTable !== tableName) {\n                this.currentTable = tableName\n                this.loadDataTables(tableName)\n            }\n        },\n        loadDataTables (tableName) {\n            switch (tableName) {\n            case 'masternodes':\n                this.getDataFromApi()\n                break\n            case 'slashed':\n                this.getSlashedMNs()\n                break\n            case 'proposed':\n                this.getProposedMNs()\n                break\n            case 'resigned':\n                this.getResignedMNs()\n                break\n            default:\n                this.getDataFromApi()\n                break\n            }\n        },\n        async averageroi () {\n            axios.get('/api/voters/averageroi')\n                .then(result => {\n                    if (result.data && result.data.averageStakingROI) {\n                        this.averageStakingROI = result.data.averageStakingROI.toFixed(2)\n                        this.averageOwnerROI = result.data.averageOwnerROI.toFixed(2)\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.$toasted.show(error, { type: 'error' })\n                })\n        }\n    }\n}\n</script>\n","<template>\n    <div>\n        <div\n            class=\"XDC-header\">\n            <div class=\"container\">\n                <div class=\"XDC-header-block\">\n                    <div class=\"XDC-header-block-left\">\n                        <div>\n                            <i class=\"tm-wallet XDC-header__icon\" />\n                        </div>\n                        <div>\n                            <h4 class=\"h4 color-black\">Become a MasterNode</h4>\n                            <p>\n                                Become a MasterNode and upload the Know Your Community (KYC) certificate in PDF format.\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"main-content container\">\n            <b-row\n                class=\"m-0\">\n                <div class=\"col-12 col-md-6 col-lg-6\">\n                    <b-card\n                        :class=\"'XDC-card XDC-card--lighter'\n                        + (loading ? ' XDC-loading' : '')\">\n                        <h4 class=\"h4 color-black XDC-card__title\"><strong>Become a MasterNode</strong></h4>\n                        <template v-if=\"!KYC.status\">\n                            <ul class=\"XDC-list list-unstyled\">\n                                <li class=\"XDC-list__item\">\n                                    <!-- <i class=\"tm-XDC XDC-list__icon\" /> -->\n                                    <div class=\"XDC-list__text\">\n                                        <p class=\"graf graf--p graf-after--figure\"><strong class=\"markup--strong markup--p-strong\"> Become a MasterNode </strong>and upload the <strong class=\"markup--strong markup--p-strong\">Know Your Community (KYC) certificate</strong> in PDF format.</p>\n                                        <p class=\"graf graf--p graf-after--p\">This KYC certificate needs to be signed by one of the following personnel:</p>\n                                        <ul class=\"postList\"><li>Company Secretary,</li><li>A Notary Public,</li><li>Chartered Secretary,</li><li >Consulate, or</li><li>A lawyer with Seal.</li></ul>\n                                        <p class=\"graf graf--p graf-after--li\">For <strong class=\"markup--strong markup--p-strong\">INDIVIDUAL format</strong>, <a href=\"https://docs.google.com/document/d/1Us9chjXEDYrDOpfuwWITxaQOSEYxYIpJpwWuYK0TyXY\" ><strong class=\"markup--strong markup--p-strong\">click here</strong></a>.</p>\n                                        <p>For <strong class=\"markup--strong markup--p-strong\">ORGANIZATION format</strong>, <a href=\"https://docs.google.com/document/d/1eyjFp3DXhrpLscngELocmXFwJ_Y8H9si6n8Z2SLADhg\"><strong class=\"markup--strong markup--p-strong\">click here</strong></a>.</p>\n                                        <p><em class=\"markup--em markup--p-em\">Note: It’s mandatory to upload the certificate in a </em><strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">PDF format</em></strong><em class=\"markup--em markup--p-em\">.</em></p>\n                                    </div>\n                                </li>\n                                <!-- <li class=\"XDC-list__item\">\n                                    <i class=\"tm-lock XDC-list__icon\" />\n                                    <span class=\"XDC-list__text\">Create PDF file with mention Certify KYC document.</span>\n                                </li> -->\n                                <!-- <li class=\"XDC-list__item\">\n                                    <i class=\"tm-arrow-up XDC-list__icon\" />\n                                    <span class=\"XDC-list__text\">\n                                        Coin holders are able to vote for you to become a masternode</span>\n                                </li> -->\n                            </ul>\n                        </template>\n                        <template v-else>\n                            <ul class=\"XDC-list list-unstyled\">\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-XDC XDC-list__icon\" />\n                                    <span class=\"XDC-list__text\">You have to deposit at least 10,000,000 XDC</span>\n                                </li>\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-lock XDC-list__icon\" />\n                                    <span class=\"XDC-list__text\">Your deposit will be locked</span>\n                                </li>\n                            </ul>\n\n                            <b-form\n                                class=\"XDC-form XDC-form--apply\"\n                                novalidate\n                                @submit.prevent=\"validate()\">\n                                <b-form-group\n                                    :description=\"`How much XDC do you want to deposit? TX fee: ${txFee} XDC`\"\n                                    label=\"Stake\"\n                                    label-for=\"apply-value\">\n                                    <b-input-group>\n                                        <p class=\"form-control\">{{ applyValue }}</p>\n                                        <!--<number-input\n                                            :class=\"getValidationClass('applyValue')\"\n                                            :min=\"0.1\"\n                                            :step=\"0.1\"\n                                            v-model=\"applyValue\"\n                                            name=\"apply-value\"/>-->\n                                        <b-input-group-append>\n                                            <i class=\"tm-XDC\" />\n                                        </b-input-group-append>\n                                        <span\n                                            v-if=\"$v.applyValue.$dirty && !$v.applyValue.required\"\n                                            class=\"text-danger\">Required field</span>\n                                        <span\n                                            v-else-if=\"$v.applyValue.$dirty && !$v.applyValue.minValue\"\n                                            class=\"text-danger\">Must be greater than 10,000,000 XDC</span>\n                                    </b-input-group>\n                                </b-form-group>\n                                <b-form-group\n                                    label=\"Coinbase Address\"\n                                    label-for=\"coinbase\"\n                                    description=\"What is your node coinbase address?\">\n                                    <b-form-input\n                                        :class=\"getValidationClass('coinbase')\"\n                                        v-model=\"coinbase\"\n                                        name=\"coinbase\"\n                                        autocomplete=\"off\"\n                                        type=\"text\"/>\n                                    <span\n                                        v-if=\"$v.coinbase.$dirty && !$v.coinbase.required\"\n                                        class=\"text-danger\">Required field</span>\n                                    <span\n                                        v-else-if=\"!$v.coinbase.coinbaseAddress\"\n                                        class=\"text-danger\">Wrong coinbase address format</span>\n                                    <span\n                                        v-else-if=\"coinbaseError\"\n                                        class=\"text-danger\">\n                                        The masternode candidate account should be different from the depositing account.\n                                    </span>\n                                    <span\n                                        v-else-if=\"candidateError\"\n                                        class=\"text-danger\">\n                                        This coinbase address is already a candidate\n                                    </span>\n                                </b-form-group>\n                                <!--b-form-group\n                                    label=\"Node URL\"\n                                label-for=\"nodeurl\"\n                                description=\"What is your node url?\">\n                                <b-form-input\n                                    :class=\"getValidationClass('nodeUrl')\"\n                                    v-model=\"nodeUrl\"\n                                    name=\"coinbase\"\n                                    type=\"text\"/>\n                                <span\n                                    v-if=\"$v.nodeUrl.$dirty && !$v.nodeUrl.required\"\n                                    class=\"text-danger\">Required field</span>\n                                <span\n                                    v-else-if=\"$v.nodeUrl.$dirty && !$v.nodeUrl.nodeUrl\"\n                                    class=\"text-danger\">Wrong node URL format</span>\n                            </b-form-group-->\n                                <div class=\"buttons text-right\">\n                                    <b-button\n                                        type=\"button\"\n                                        variant=\"secondary\"\n                                        @click=\"$router.go(-1)\">Cancel</b-button>\n                                    <b-button\n                                        type=\"submit\"\n                                        variant=\"primary\">Apply</b-button>\n                                </div>\n                            </b-form>\n                        </template>\n                    </b-card>\n                </div>\n                <div\n                    v-if=\"!KYC.status\"\n                    class=\"col-12 col-md-6 col-lg-6\">\n                    <b-card\n                        :class=\"'XDC-card XDC-card--lighter'\n                        + (loading ? ' XDC-loading' : '')\">\n                        <h4 class=\"h4 color-black XDC-card__title\"><strong>Upload KYC Document</strong></h4>\n                        <template>\n                            <b-form\n                                class=\"XDC-form XDC-form--apply\"\n                                novalidate\n                                enctype=\"multipart/form-data\"\n                                @submit.prevent=\"uploadKYC()\">\n                                <!--<vue-dropzone\n                                    id=\"dropzone\"\n                                    ref=\"myVueDropzone\"\n                                    :options=\"dropzoneOptions\"/>-->\n                                <b-form-file\n                                    v-model=\"KYC.file\"\n                                    :state=\"Boolean(KYC.file)\"\n                                    class=\"z-index-0 XDC-upload\"\n                                    accept=\"application/pdf\"\n                                    placeholder=\"Choose a file...\"\n                                    required\n                                />\n                                <span\n                                    v-if=\"KYC && !KYC.file\"\n                                    class=\"text-danger\">Required field (only *.pdf allowed)</span>\n                                <div class=\"buttons text-right\">\n                                    <b-button\n                                        type=\"submit\"\n                                        variant=\"primary\">Upload KYC</b-button>\n                                </div>\n                            </b-form>\n                        </template>\n                    </b-card>\n                </div>\n            </b-row>\n            <b-modal\n                ref=\"applyModal\"\n                class=\"XDC-modal\"\n                centered\n                title=\"Scan this QR code by xdcwallet\"\n                hide-footer>\n                <div\n                    v-if=\"provider === 'xdcwallet'\"\n                    style=\"text-align: center\">\n                    <vue-qrcode\n                        :value=\"qrCode\"\n                        :options=\"{size: 200 }\"\n                        class=\"img-fluid text-center text-lg-right\"/>\n                </div>\n                <b-btn\n                    class=\"mt-3\"\n                    variant=\"outline-danger\"\n                    block\n                    @click=\"hideModal\">Close</b-btn>\n            </b-modal>\n        </div>\n    </div>\n</template>\n<script>\nimport { validationMixin } from 'vuelidate'\nimport {\n    required,\n    minValue\n} from 'vuelidate/lib/validators'\nimport coinbaseAddress from '../../../validators/coinbaseAddress.js'\n// import nodeUrl from '../../../validators/nodeUrl.js'\nimport NumberInput from '../NumberInput.vue'\nimport BigNumber from 'bignumber.js'\nimport store from 'store'\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport axios from 'axios'\nimport vue2Dropzone from 'vue2-dropzone'\n\nexport default {\n    name: 'App',\n    components: {\n        NumberInput,\n        VueQrcode,\n        vueDropzone: vue2Dropzone\n    },\n    mixins: [validationMixin],\n    data () {\n        return {\n            account: '',\n            isReady: !!this.web3,\n            applyValue: '10000000',\n            coinbase: '',\n            // nodeUrl: '',\n            loading: false,\n            coinbaseError: false,\n            provider: this.NetworkProvider || store.get('network') || null,\n            showQR: true,\n            qrCode: 'text',\n            interval: null,\n            candidateError: false,\n            balance: 0,\n            txFee: 0,\n            gasPrice: null,\n            transactionHash: '',\n            toastMessage: 'You have successfully applied!',\n            toastMessageError: 'An error occurred while applying, please try again',\n            KYC: {\n                file: '',\n                status: false\n            },\n            dropzoneOptions: {\n                url: 'https://httpbin.org/post',\n                acceptedFiles: 'application/pdf'\n            }\n        }\n    },\n    validations: {\n        applyValue: {\n            required,\n            minValue: minValue(10000000)\n        },\n        coinbase: {\n            required,\n            coinbaseAddress\n        }\n        /*\n        nodeUrl: {\n            required,\n            nodeUrl\n        },\n        */\n    },\n    computed: { },\n    watch: {},\n    updated () {},\n    beforeDestroy () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    created: async function () {\n        const self = this\n        self.config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = self.config.blockchain || {}\n        try {\n            self.isReady = !!self.web3\n            self.gasPrice = await self.web3.eth.getGasPrice()\n            self.txFee = new BigNumber(this.chainConfig.gas * self.gasPrice).div(10 ** 18).toString(10)\n            if (!self.web3 && self.NetworkProvider === 'metamask') {\n                throw Error('Web3 is not properly detected. Have you installed MetaMask extension?')\n            }\n            self.account = store.get('address') ||\n                self.$store.state.address || await self.getAccount()\n            if (self.account.substring(0, 2) === '0x') {\n                self.account = 'xdc' + self.account.substring(2)\n            }\n            await self.getKYCStatus(self.account)\n        } catch (e) {\n            self.$toasted.show(`You need login your account before voting`,\n                {\n                    type : 'default',\n                    duration: 5000,\n                    action : [\n                        {\n                            text : 'Login',\n                            onClick : (e, toastObject) => {\n                                self.$router.push({ path: '/setting' })\n                            }\n                        }\n                    ]\n                })\n            self.$router.push({ path: '/setting' })\n            console.log(e)\n        }\n    },\n    mounted () {\n    },\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName]\n\n            if (field) {\n                return {\n                    'is-invalid': field.$error\n                }\n            }\n        },\n        validate: async function () {\n            this.$v.$touch()\n            this.coinbaseError = false\n\n            if (!this.$v.$invalid) {\n                if (this.coinbase.toLowerCase() === this.account.toLowerCase()) {\n                    this.coinbaseError = true\n                } else {\n                    // Check balance\n                    const balanc = await this.web3.eth.getBalance(this.account)\n                    this.balance = new BigNumber(balanc).div(10 ** 18)\n                    const convertedAmount = new BigNumber(this.applyValue)\n\n                    if (this.balance.isLessThan(convertedAmount)) {\n                        this.$toasted.show(`Not enough XDC`, {\n                            type: 'error'\n                        })\n                        return false\n                    }\n                    if (this.coinbase.substring(0, 3) === 'xdc') {\n                        this.coinbase = '0x' + this.coinbase.substring(3)\n                    }\n                    const { data } = await axios.get('/api/candidates/' + this.coinbase + '/isCandidate')\n                    if (data) {\n                        this.candidateError = true\n                    } else {\n                        this.candidateError = false\n                        if (this.provider !== 'xdcwallet') {\n                            await this.apply()\n                        } else {\n                            if (this.interval) {\n                                clearInterval(this.interval)\n                            }\n                            await this.generateQR()\n                            this.$refs.applyModal.show()\n                        }\n                    }\n                }\n            }\n        },\n        apply: async function () {\n            let self = this\n            let value = this.applyValue\n            let coinbase = this.coinbase.toLowerCase()\n            // let nodeUrl = this.nodeUrl\n\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: '/setting' })\n                    throw Error('Web3 is not properly detected.')\n                }\n\n                self.loading = true\n\n                let contract// = await self.getXDCValidatorInstance()\n                contract = self.XDCValidator\n                const account = (await self.getAccount() || '').toLowerCase()\n                let txParams = {\n                    from : account,\n                    value: self.web3.utils.toHex(new BigNumber(value).multipliedBy(10 ** 18).toString(10)),\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                }\n                if (self.NetworkProvider === 'ledger' ||\n                    self.NetworkProvider === 'trezor') {\n                    let nonce = await self.web3.eth.getTransactionCount(account)\n                    // let dataTx = contract.propose.request(coinbase).params[0]\n                    const data = await contract.methods.propose(coinbase).encodeABI()\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    }\n                    Object.assign(\n                        dataTx,\n                        dataTx,\n                        txParams,\n                        {\n                            nonce: self.web3.utils.toHex(nonce)\n                        }\n                    )\n                    let signature = await self.signTransaction(dataTx)\n                    const txHash = await self.sendSignedTransaction(dataTx, signature)\n                    if (txHash) {\n                        self.transactionHash = txHash\n                        let check = true\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                            if (receipt) {\n                                check = false\n                                self.$toasted.show(self.toastMessage)\n                                if (coinbase.substring(0, 2) === '0x') {\n                                    coinbase = 'xdc' + coinbase.substring(2)\n                                }\n                                setTimeout(() => {\n                                    self.loading = false\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/candidate/${coinbase}` })\n                                    }\n                                }, 2000)\n                            }\n                        }\n                    }\n                } else {\n                    // rs = await contract.propose(coinbase, txParams)\n                    contract.methods.propose(coinbase).send(txParams)\n                        .on('transactionHash', async (txHash) => {\n                            self.transactionHash = txHash\n                            let check = true\n                            while (check) {\n                                const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                                if (receipt) {\n                                    check = false\n                                    self.$toasted.show(self.toastMessage)\n                                    setTimeout(() => {\n                                        self.loading = false\n                                        if (self.transactionHash) {\n                                            self.$router.push({ path: `/candidate/${coinbase}` })\n                                        }\n                                    }, 2000)\n                                }\n                            }\n                        }).catch(e => {\n                            console.log(e)\n                            self.loading = false\n                            self.$toasted.show(self.toastMessageError + e, { type: 'error' })\n                        })\n                }\n            } catch (e) {\n                self.loading = false\n                self.$toasted.show(`An error occurred while applying, please fix it and try again: ${String(e)}`, {\n                    type: 'error'\n                })\n                console.log(e)\n                if (self.interval) {\n                    clearInterval(self.interval)\n                }\n            }\n        },\n        hideModal () {\n            this.$refs.applyModal.hide()\n        },\n        async generateQR () {\n            const self = this\n            const coinbase = self.coinbase.toLowerCase()\n\n            if (self.interval) {\n                clearInterval(self.interval)\n            }\n\n            try {\n                const amount = new BigNumber(self.applyValue).toString(10)\n                const body = {\n                    action: 'propose',\n                    voter: self.account.toLowerCase(),\n                    candidate: coinbase,\n                    amount\n                }\n                // call api to generate qr code\n                const { data } = await axios.post(`/api/voters/generateQR`, body)\n\n                self.message = data.message\n                self.id = data.id\n                self.qrCode = encodeURI(\n                    'masternode-app:propose?amount=' + amount +\n                    '&candidate=' + coinbase +\n                    '&submitURL=' + data.url\n                )\n\n                // set interval\n                self.interval = setInterval(async () => {\n                    self.verifyScannedQR()\n                }, 3000)\n            } catch (e) {\n                console.log(e)\n            }\n        },\n        async verifyScannedQR () {\n            let self = this\n            let coinbase = this.coinbase.toLowerCase()\n            try {\n                let { data } = await axios.get('/api/voters/getScanningResult?action=propose&id=' + self.id)\n\n                if (!data.error) {\n                    self.hideModal()\n                    self.loading = true\n                    if (data.tx) {\n                        clearInterval(self.interval)\n                        let toastMessage = data.tx ? 'You have successfully applied!'\n                            : 'An error occurred while applying, please try again'\n                        self.$toasted.show(toastMessage)\n                        setTimeout(() => {\n                            if (data.tx) {\n                                self.loading = false\n                                self.$router.push({ path: `/candidate/${coinbase}` })\n                            }\n                        }, 3000)\n                    }\n                }\n            } catch (e) {\n                console.log(e)\n                self.$toasted.show(`An error occurred while excuting. ${String(e)}`, {\n                    type: 'error'\n                })\n                clearInterval(self.interval)\n            }\n        },\n        async getKYCStatus (account) {\n            // let contract = await this.getXDCValidatorInstance()\n            let contract = this.XDCValidator\n            if (contract) {\n                console.log('getKYC')\n                const isHashFound = await contract.methods.getHashCount(account).call()\n                if (new BigNumber(isHashFound).toNumber()) {\n                    const getKYC = await contract.methods.getLatestKYC(account).call()\n                    // const KYCString = await contract.KYCString.call(account)\n                    console.log(getKYC, 'getKYC')\n                    this.KYC.status = getKYC\n                }\n            } else {\n                console.log('1111')\n            }\n        },\n        async uploadKYC () {\n            try {\n                let self = this\n                if (this.KYC && !!this.KYC.file) {\n                    if (this.KYC.file.type !== 'application/pdf') {\n                        this.KYC.file = null\n                        return false\n                    }\n\n                    this.loading = true\n                    const formData = new FormData()\n                    formData.append('filename', this.KYC.file, this.KYC.file.name)\n                    const { data } = await axios.post('/api/ipfs/addKYC', formData)\n                    let contract// = await self.getXDCValidatorInstance()\n                    contract = self.XDCValidator\n                    const gasPrice = await this.web3.eth.getGasPrice() * 1.40\n                    let txParams = {\n                        from : this.account,\n                        gasPrice: this.web3.utils.toHex(gasPrice),\n                        gasLimit: this.web3.utils.toHex(3000000)\n                    }\n                    console.log(`>>>>>>>>>>>>TxParams ${txParams}`)\n                    console.log(`>>>>>>>>>>>>HASH${data.hash}`)\n                    console.log(`>>>>>>>>>>>>Before`)\n                    // console.log(`>>>>>>>>>>>>${contract.mgetCandidates()}`)\n                    await contract.methods.uploadKYC(data.hash).send(txParams)\n                    // await contract.propose(coinbase, txParams)\n                    // console.log(`>>>>>>>${rs}`)\n                    // await contract.getCandidates()\n                    this.KYC.status = true\n                    this.loading = false\n                    this.$toasted.show('KYC uploaded successfully')\n                }\n            } catch (e) {\n                console.log(e)\n                this.loading = false\n                this.$toasted.show(`An error occurred while excuting. ${String(e)}`, {\n                    type: 'error'\n                })\n            }\n        }\n    }\n}\n</script>\n","<template>\n    <div>\n        <div class=\"container\">\n            <b-row\n                align-v=\"center\"\n                align-h=\"center\"\n                class=\"m-0\">\n                <b-card\n                    :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--animated p-0'\n                    + (loading ? ' XDC-loading' : '')\">\n                    <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Resign</h4>\n                    <ul class=\"XDC-list list-unstyled\">\n                        <li class=\"XDC-list__item\">\n                            <i class=\"tm-wallet XDC-list__icon\" />\n                            <p class=\"XDC-list__text\">\n                                <span>{{ coinbase }}</span>\n                                <span>Coinbase Address</span>\n                            </p>\n                        </li>\n                    </ul>\n                    <b-card-footer class=\"text-right\">\n                        <p v-if=\"owner !== account\">\n                            <i class=\"tm-notice\"/>\n                            You are not an owner of this candidate\n                        </p>\n                        <!-- <b-button\n                            v-b-modal.confirmResignModal\n                            v-if=\"owner === account\"\n                            :disabled=\"loading || owner !== account\"\n                            variant=\"secondary\"\n                            @click=\"resignActive = true;\">Resign</b-button> -->\n                        <b-button\n                            v-b-modal.confirmResignModal\n                            v-if=\"owner === account\"\n                            :disabled=\"loading || owner !== account\"\n                            variant=\"secondary\"\n                            @click=\"resignActive = true;\">Resign</b-button>\n                    </b-card-footer>\n                </b-card>\n            </b-row>\n        </div>\n        <b-modal\n            id=\"confirmResignModal\"\n            class=\"XDC-modal\"\n            centered\n            title=\"Do you want to resign?\"\n            ok-title=\"Yes\"\n            cancel-title=\"No\"\n            @ok=\"resignValidation()\">\n            <p>If you resign, you will be able to withdraw all your deposit after around 30 days.</p>\n        </b-modal>\n        <b-modal\n            ref=\"resignModal\"\n            class=\"XDC-modal\"\n            centered\n            title=\"Scan this QR code by XDCWallet\"\n            hide-footer>\n            <div\n                v-if=\"provider === 'XDCwallet'\"\n                style=\"text-align: center\">\n                <vue-qrcode\n                    :value=\"qrCode\"\n                    :options=\"{size: 200 }\"\n                    class=\"img-fluid text-center text-lg-right\"/>\n            </div>\n            <b-btn\n                class=\"mt-3\"\n                variant=\"outline-danger\"\n                block\n                @click=\"hideModal\">Close</b-btn>\n        </b-modal>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport store from 'store'\nexport default {\n    name: 'App',\n    components: {\n        VueQrcode\n    },\n    data () {\n        return {\n            isReady: !!this.web3,\n            account: '',\n            owner: '',\n            resignActive: false,\n            loading: false,\n            coinbase: this.$route.params.address,\n            provider: this.NetworkProvider || store.get('network') || null,\n            qrCode: 'text',\n            interval: null,\n            gasPrice: null,\n            transactionHash: '',\n            toastMessage: 'You have successfully resigned!',\n            toastMessageError: 'An error occurred while retiring, please try again'\n        }\n    },\n    computed: { },\n    watch: {},\n    updated () {},\n    created: async function () {\n        let self = this\n        self.config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = self.config.blockchain || {}\n        self.isReady = !!self.web3\n        self.gasPrice = await self.web3.eth.getGasPrice()\n        try {\n            if (self.isReady) {\n                self.account = store.get('address') ||\n                    self.$store.state.address || await self.getAccount()\n                if (self.account.substring(0, 2) === '0x') {\n                    self.account = 'xdc' + self.account.substring(2)\n                }\n            }\n\n            let candidate = await axios.get(`/api/candidates/${self.coinbase}`)\n            self.owner = (candidate.data.owner || '').toLowerCase()\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    mounted () {\n    },\n    methods: {\n        resign: async function () {\n            let self = this\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: '/setting' })\n                }\n\n                self.loading = true\n\n                const account = (await self.getAccount() || '').toLowerCase()\n                let contract// = await self.getXDCValidatorInstance()\n                contract = self.XDCValidator\n                let coinbase = self.coinbase\n                let txParams = {\n                    from: account,\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                }\n                if (self.NetworkProvider === 'ledger' ||\n                    self.NetworkProvider === 'trezor') {\n                    let nonce = await self.web3.eth.getTransactionCount(account)\n                    // let dataTx = contract.resign.request(coinbase).params[0]\n                    let data = await contract.methods.resign(coinbase).encodeABI()\n\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    }\n\n                    if (self.NetworkProvider === 'trezor') {\n                        txParams.value = self.web3.utils.toHex(0)\n                    }\n                    Object.assign(\n                        dataTx,\n                        dataTx,\n                        txParams,\n                        {\n                            nonce: self.web3.utils.toHex(nonce)\n                        }\n                    )\n                    let signature = await self.signTransaction(dataTx)\n                    const txHash = await self.sendSignedTransaction(dataTx, signature)\n                    if (txHash) {\n                        self.transactionHash = txHash\n                        let check = true\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                            if (receipt) {\n                                check = false\n                                self.$toasted.show(self.toastMessage)\n                                setTimeout(() => {\n                                    self.loading = false\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: '/' })\n                                    }\n                                }, 2000)\n                            }\n                        }\n                    }\n                } else {\n                    // rs = await contract.resign(coinbase, txParams)\n                    contract.methods.resign(coinbase).send(txParams)\n                        .on('transactionHash', async (txHash) => {\n                            self.transactionHash = txHash\n                            let check = true\n                            while (check) {\n                                const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                                if (receipt) {\n                                    check = false\n                                    self.$toasted.show(self.toastMessage)\n                                    setTimeout(() => {\n                                        self.loading = false\n                                        if (self.transactionHash) {\n                                            self.$router.push({ path: '/' })\n                                        }\n                                    }, 2000)\n                                }\n                            }\n                        }).catch(e => {\n                            console.log(e)\n                            self.loading = false\n                            self.$toasted.show(self.toastMessageError + e, { type: 'error' })\n                        })\n                }\n            } catch (e) {\n                self.loading = false\n                self.$toasted.show('An error occurred while retiring, please try again', {\n                    type: 'error'\n                })\n                console.log(e)\n            }\n        },\n        hideModal () {\n            this.$refs.resignModal.hide()\n        },\n        async resignValidation () {\n            const self = this\n            try {\n                if (self.provider === 'XDCwallet') {\n                    if (self.interval) {\n                        clearInterval(self.interval)\n                    }\n                    const data = {\n                        voter: self.account,\n                        candidate: self.coinbase,\n                        amount: self.voteValue || 0,\n                        action: 'resign'\n                    }\n                    // call api to generate qr code\n                    const generatedMess = await axios.post(`/api/voters/generateQR`, data)\n\n                    self.id = generatedMess.data.id\n\n                    self.qrCode = encodeURI(\n                        'xdcchain:resign?candidate=' + self.coinbase +\n                        '&submitURL=' + generatedMess.data.url\n                    )\n                    self.$refs.resignModal.show()\n                    // set interval\n                    self.interval = setInterval(async () => {\n                        self.verifyScannedQR()\n                    }, 3000)\n                } else {\n                    await self.resign()\n                }\n            } catch (error) {\n                console.log(error)\n                self.$toasted.show('An error occurred while retiring, please try again', {\n                    type: 'error'\n                })\n            }\n        },\n        async verifyScannedQR () {\n            let self = this\n            let { data } = await axios.get('/api/voters/getScanningResult?action=resign&id=' + self.id)\n\n            if (!data.error) {\n                self.hideModal()\n                self.loading = true\n                if (data.tx) {\n                    clearInterval(self.interval)\n                    let toastMessage = (data.tx && data.status) ? 'You have successfully resigned!'\n                        : 'An error occurred while voting, please try again'\n                    self.$toasted.show(toastMessage)\n                    setTimeout(() => {\n                        self.loading = false\n                        if (data.tx) {\n                            self.$router.push({ path: '/' })\n                        }\n                    }, 2000)\n                }\n            }\n        }\n    }\n}\n</script>\n","<template>\n    <div>\n        <div class=\"container\">\n            <div>\n                <b-row\n                    align-v=\"center\"\n                    align-h=\"center\"\n                    class=\"m-0\">\n                    <b-card\n                        :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--animated p-0'\n                        + (loading ? ' XDC-loading' : '')\">\n                        <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Withdrawal Confirmation</h4>\n\n                        <ul class=\"XDC-list list-unstyled\">\n                            <li class=\"XDC-list__item\">\n                                <i class=\"tm-wallet XDC-list__icon\" />\n                                <p class=\"XDC-list__text\">\n                                    <span>{{ coinbase }}</span>\n                                    <span>Coinbase Address</span>\n                                </p>\n                            </li>\n                            <li class=\"XDC-list__item\">\n                                <i class=\"tm-XDC2 XDC-list__icon\" />\n                                <p class=\"XDC-list__text\">\n                                    <span> {{ formatCurrencySymbol(formatNumber(capacity)) }}</span>\n                                    <span>Capacity</span>\n                                </p>\n                            </li>\n                            <li class=\"XDC-list__item\">\n                                <i class=\"tm-XDC2 XDC-list__icon\" />\n                                <p class=\"XDC-list__text\">\n                                    <span> {{ blockNumber }}</span>\n                                    <span>Block Number</span>\n                                </p>\n                            </li>\n                        </ul>\n                        <div\n                            style=\"margin-top: 20px\">\n                            <div\n                                class=\"wrapper\">\n                                <div>\n                                    <div\n                                        class=\"pull-right\"\n                                        style=\"margin-right: -7px; float: right\">\n                                        <!-- <button\n                                            class=\"btn btn-primary\"\n                                            variant=\"primary\"\n                                            @click=\"vote\">Withdraw</button> -->\n                                    </div>\n                                </div>\n                                <div>\n                                    <div\n                                        v-if=\"provider === 'XDCwallet'\"\n                                        style=\"text-align: center; margin-top: 10px\">\n                                        <vue-qrcode\n                                            :value=\"qrCode\"\n                                            :options=\"{size: 250 }\"\n                                            class=\"img-fluid text-center text-lg-right\"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <b-card-footer class=\"mt-3 text-right\">\n                            <b-button\n                                :disabled=\"loading\"\n                                :to=\"'/setting'\"\n                                variant=\"secondary\">Back</b-button>\n                            <!-- <b-button\n                                v-b-modal.resignModal\n                                :disabled=\"loading\"\n                                variant=\"secondary\"\n                                @click=\"resignActive = true;\">Withdraw</b-button> -->\n                            <button\n                                v-if=\"provider !== 'XDCwallet'\"\n                                class=\"btn btn-primary\"\n                                variant=\"primary\"\n                                @click=\"withdraw(blockNumber, index)\">Withdraw</button>\n                        </b-card-footer>\n                    </b-card>\n                </b-row>\n            </div>\n        </div>\n        <b-modal\n            id=\"resignModal\"\n            class=\"XDC-modal\"\n            centered\n            title=\"Do you want to withdraw?\"\n            ok-title=\"Yes\"\n            cancel-title=\"No\"\n            @ok=\"withdraw()\">\n            <p>If you withdraw, you will receive all your deposit.</p>\n        </b-modal>\n    </div>\n</template>\n<script>\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport axios from 'axios'\nimport store from 'store'\nimport BigNumber from 'bignumber.js'\nexport default {\n    name: 'App',\n    components: {\n        VueQrcode\n    },\n    data () {\n        return {\n            isReady: !!this.web3,\n            withdrawActive: false,\n            coinbase: this.$route.params.address,\n            blockNumber: this.$route.params.blockNumber,\n            capacity: this.$route.params.capacity || 0,\n            loading: false,\n            index: this.$route.params.index,\n            interval: null,\n            qrCode: 'text',\n            processing: true,\n            id: '',\n            provider: this.Networkprovider || store.get('network') || null,\n            gasPrice: null,\n            transactionHash: '',\n            toastMessage: 'You have successfully withdrawn!',\n            toastMessageError: 'An error occurred while withdrawing, please try again'\n        }\n    },\n    computed: { },\n    watch: {},\n    async updated () {\n        if (!this.coinbase) {\n            if (this.interval) {\n                clearInterval(this.interval)\n            }\n            self.$router.push({ path: '/' })\n        }\n    },\n    created: function () {\n    },\n    beforeDestroy () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    destroyed () {\n    },\n    async mounted () {\n        const self = this\n        self.config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = self.config.blockchain || {}\n        self.isReady = !!this.web3\n        if (!self.coinbase) {\n            self.$router.push({ path: '/' })\n        } else {\n            self.gasPrice = await self.web3.eth.getGasPrice()\n            let amount = new BigNumber(self.capacity.replace(/,/g, '')).toString(10)\n            const data = {\n                action: 'withdraw',\n                amount,\n                voter: self.coinbase,\n                candidate: 'no-candidate'\n            }\n            // call api to generate qr code\n            const generatedMess = await axios.post(`/api/voters/generateQR`, data)\n\n            self.id = generatedMess.data.id\n\n            self.qrCode = encodeURI(\n                'xdcchain:withdraw?amount=' + amount + '&' + 'block=' + self.blockNumber +\n                '&index=' + self.index +\n                '&submitURL=' + generatedMess.data.url\n            )\n\n            if (self.processing && generatedMess.data && self.provider === 'XDCwallet') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR()\n                }, 3000)\n            }\n        }\n    },\n    methods: {\n        withdraw: async function (blockNumber, index) {\n            let self = this\n            let contract// = await self.getXDCValidatorInstance()\n            contract = self.XDCValidator\n            const account = (await self.getAccount() || '').toLowerCase()\n            self.loading = true\n            try {\n                // console.log('==>', blockNumber, index)\n                let txParams = {\n                    from: account,\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                }\n                if (self.NetworkProvider === 'ledger' ||\n                    self.NetworkProvider === 'trezor') {\n                    let nonce = await self.web3.eth.getTransactionCount(account)\n                    // let dataTx = contract.withdraw.request(String(blockNumber), String(index)).params[0]\n                    const data = await contract.methods.withdraw(blockNumber, index).encodeABI()\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    }\n                    if (self.NetworkProvider === 'trezor') {\n                        txParams.value = self.web3.utils.toHex(0)\n                    }\n                    Object.assign(\n                        dataTx,\n                        dataTx,\n                        txParams,\n                        {\n                            nonce: self.web3.utils.toHex(nonce)\n                        }\n                    )\n                    let signature = await self.signTransaction(dataTx)\n                    const txHash = await self.sendSignedTransaction(dataTx, signature)\n                    if (txHash) {\n                        self.transactionHash = txHash\n                        let check = true\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                            if (receipt && receipt.status) {\n                                check = false\n                                self.$toasted.show(self.toastMessage)\n                                setTimeout(() => {\n                                    self.loading = false\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/setting` })\n                                    }\n                                }, 2000)\n                            }\n                        }\n                    }\n                } else {\n                    // wd = await contract.withdraw(String(blockNumber), String(index), txParams)\n                    contract.methods.withdraw(blockNumber, index).send(txParams)\n                        .on('transactionHash', async (txHash) => {\n                            self.transactionHash = txHash\n                            let check = true\n                            while (check) {\n                                const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                                if (receipt) {\n                                    check = false\n                                    self.$toasted.show(self.toastMessage)\n                                    setTimeout(() => {\n                                        self.loading = false\n                                        if (self.transactionHash) {\n                                            self.$router.push({ path: `/setting` })\n                                        }\n                                    }, 2000)\n                                }\n                            }\n                        }).catch(e => {\n                            console.log(e)\n                            self.loading = false\n                            self.$toasted.show(self.toastMessageError + e, { type: 'error' })\n                        })\n                }\n            } catch (e) {\n                console.log(e)\n                self.loading = false\n                self.$toasted.show('An error occurred while withdrawing, please try again', {\n                    type: 'error'\n                })\n            }\n        },\n        onChangeWithdraw (event) {\n            const checking = event.target.checked\n            if (checking) {\n                this.interval = setInterval(async () => {\n                    await this.verifyScannedQR()\n                }, 3000)\n            } else {\n                if (this.interval) {\n                    clearInterval(this.interval)\n                }\n            }\n        },\n        async verifyScannedQR () {\n            let self = this\n            let { data } = await axios.get('/api/voters/getScanningResult?action=withdraw&id=' + self.id)\n\n            if (!data.error) {\n                self.loading = true\n                if (data.tx) {\n                    clearInterval(self.interval)\n                    let toastMessage = (data.tx && data.status) ? 'You have successfully withdrawn!'\n                        : 'An error occurred while voting, please try again'\n                    self.$toasted.show(toastMessage)\n                    setTimeout(() => {\n                        if (data.tx) {\n                            self.loading = false\n                            self.processing = false\n                            self.$router.push({ path: `/setting` })\n                        }\n                    }, 3000)\n                }\n            }\n        }\n    }\n}\n</script>\n","<template>\n    <div class=\"main-content container\">\n        <b-row\n            v-if=\"step === 1\"\n            align-v=\"center\"\n            align-h=\"center\"\n            class=\"m-0\">\n            <b-card\n                :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                + (loading ? ' XDC-loading' : '')\">\n                <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Update Candidate Information</h4>\n                <b-form\n                    class=\"XDC-form XDC-form--vote\"\n                    novalidate\n                    @submit.prevent=\"validate()\">\n                    <b-form-group\n                        label=\"Name\"\n                        label-for=\"name-value\">\n                        <b-form-input\n                            v-model=\"name\"\n                            name=\"name-value\"/>\n                        <span\n                            v-if=\"$v.name.$dirty && !$v.name.required\"\n                            class=\"text-danger\">Name is required</span>\n                        <span\n                            v-if=\"$v.name.$dirty && (!$v.name.minLength || !$v.name.maxLength)\"\n                            class=\"text-danger\">Name must be 3 - 30 chars long</span>\n                    </b-form-group>\n                    <b-form-group\n                        label=\"Hardware\"\n                        label-for=\"hardware-value\">\n                        <b-form-input\n                            v-model=\"hardware\"\n                            name=\"hardware-value\"/>\n                        <span\n                            v-if=\"$v.hardware.$dirty && (!$v.hardware.minLength || !$v.hardware.maxLength)\"\n                            class=\"text-danger\">Hardware must be 3 - 30 chars long</span>\n                    </b-form-group>\n                    <div class=\"row\">\n                        <b-form-group\n                            class=\"col-md-6\"\n                            label=\"Data Center Name\"\n                            label-for=\"dcName-value\">\n                            <b-form-input\n                                v-model=\"dcName\"\n                                name=\"dcName-value\"/>\n                            <span\n                                v-if=\"$v.dcName.$dirty && (!$v.dcName.minLength || !$v.dcName.maxLength)\"\n                                class=\"text-danger\">Data Center Name must be 2 - 30 chars long</span>\n                        </b-form-group>\n                        <b-form-group\n                            class=\"col-md-6\"\n                            label=\"Data Center Location\"\n                            label-for=\"dcLocation-value\">\n                            <b-form-input\n                                v-model=\"dcLocation\"\n                                name=\"dcLocation-value\"/>\n                            <span\n                                v-if=\"$v.dcLocation.$dirty && (!$v.dcLocation.minLength || !$v.dcLocation.maxLength)\"\n                                class=\"text-danger\">Data Canter Location must be 2 - 30 chars long</span>\n                        </b-form-group>\n                    </div>\n                    <div class=\"row\">\n                        <b-form-group\n                            class=\"col-md-6\"\n                            label=\"Website\"\n                            label-for=\"website-value\">\n                            <b-form-input\n                                v-model=\"website\"\n                                name=\"website-value\"\n                                placeholder=\"https://example.com\"/>\n                            <span\n                                v-if=\"$v.website.$dirty && !$v.website.url\"\n                                class=\"text-danger\">Not a url</span>\n\n                        </b-form-group>\n                        <b-form-group\n                            class=\"col-md-6\"\n                            label=\"Telegram\"\n                            label-for=\"telegram-value\">\n                            <b-form-input\n                                v-model=\"telegram\"\n                                name=\"telegram-value\"\n                                placeholder=\"https://t.me/example\"/>\n                            <span\n                                v-if=\"$v.telegram.$dirty && !$v.telegram.url\"\n                                class=\"text-danger\">Not a url</span>\n\n                        </b-form-group>\n                    </div>\n                    <div class=\"buttons text-right\">\n                        <b-button\n                            type=\"button\"\n                            variant=\"secondary\"\n                            @click=\"$router.go(-1)\">Cancel</b-button>\n                        <b-button\n                            type=\"submit\"\n                            variant=\"primary\">Next</b-button>\n                    </div>\n                </b-form>\n            </b-card>\n        </b-row>\n        <b-row\n            v-if=\"step === 2\"\n            align-v=\"center\"\n            align-h=\"center\"\n            class=\"m-0\">\n            <b-card\n                :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                + (loading ? ' XDC-loading' : '')\">\n                <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Confirmation</h4>\n                <div>\n                    <div\n                        class=\"wrapper\">\n                        <div\n                            id=\"one\">\n                            <div>\n                                <textarea\n                                    :value=\"candidateNewInfor\"\n                                    class=\"sign-message\"\n                                    type=\"text\"\n                                    readonly\n                                    cols=\"100\"\n                                    rows=\"6\"\n                                    style=\"width: 100%\"/>\n                            </div>\n                        </div>\n                        <div\n                            style=\"margin-top: 20px\">\n                            <div\n                                v-if=\"provider === 'XDCwallet'\"\n                                style=\"text-align: center\">\n                                <vue-qrcode\n                                    :value=\"qrCode\"\n                                    :options=\"{size: 200 }\"\n                                    tag=\"img\"\n                                    class=\"img-fluid text-center text-lg-right\"/>\n                                <div\n                                    class=\"mt-1\">\n                                    <span\n                                        class=\"text-danger\"><b>{{ signHashError }}</b></span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        style=\"margin-top: 10px\"\n                        class=\"buttons text-right\">\n                        <b-button\n                            type=\"button\"\n                            variant=\"secondary\"\n                            @click=\"backStep\">Back</b-button>\n                        <button\n                            v-if=\"provider !== 'XDCwallet'\"\n                            class=\"btn btn-primary\"\n                            variant=\"primary\"\n                            @click=\"update\">Submit</button>\n                    </div>\n                </div>\n            </b-card>\n        </b-row>\n    </div>\n</template>\n<script>\n// import Web3 from 'xdc3'\nimport { validationMixin } from 'vuelidate'\nimport {\n    required,\n    minLength,\n    maxLength,\n    url\n} from 'vuelidate/lib/validators'\nimport axios from 'axios'\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport store from 'store'\nexport default {\n    name: 'App',\n    components: {\n        VueQrcode\n    },\n    mixins: [validationMixin],\n    data () {\n        return {\n            isReady: !!this.web3,\n            address: this.$route.params.address.toLowerCase(),\n            name: '',\n            hardware: '',\n            dcName: '',\n            dcLocation: '',\n            loading: false,\n            step: 1,\n            provider: this.NetworkProvider || store.get('network') || null,\n            qrCode: 'text',\n            message: '',\n            signHash: '',\n            signHashError: '',\n            id: '',\n            interval: null,\n            account: '',\n            website: '',\n            telegram: ''\n        }\n    },\n    validations: {\n        name: {\n            required,\n            maxLength: maxLength(30),\n            minLength: minLength(3)\n        },\n        hardware: {\n            maxLength: maxLength(30),\n            minLength: minLength(3)\n        },\n        dcName: {\n            maxLength: maxLength(30),\n            minLength: minLength(2)\n        },\n        dcLocation: {\n            maxLength: maxLength(30),\n            minLength: minLength(2)\n        },\n        website: { url },\n        telegram: { url }\n    },\n    beforeDestroy () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    async created () {\n        let self = this\n        self.isReady = !!self.web3\n        try {\n            if (!self.isReady) {\n                self.$router.push({ path: '/setting' })\n                throw Error('Web3 is not properly detected.')\n            }\n            self.account = store.get('address') ||\n                self.$store.state.address || await self.getAccount()\n            if (self.account.substring(0, 2) === '0x') {\n                self.account = 'xdc' + self.account.substring(2)\n            }\n            const { data } = await axios.get(`/api/candidates/${self.address}`)\n            if (data) {\n                if (data.owner !== self.account) {\n                    self.$toasted.show(`You need log the owner of candidate account in before updating`)\n                    setTimeout(() => {\n                        self.$router.push({ path: '/setting' })\n                    }, 1000)\n                } else {\n                    self.name = data.name ? data.name : 'XDC.Network'\n                    self.hardware = data.hardware || 'N/A'\n                    self.dcName = (data.dataCenter || {}).name || 'N/A'\n                    self.dcLocation = (data.dataCenter || {}).location || 'N/A'\n                    self.website = (data.socials || {}).website || ''\n                    self.telegram = (data.socials || {}).telegram || ''\n                }\n            }\n        } catch (e) {\n            console.log(e)\n            self.$toasted.show(e, {\n                type : 'error'\n            })\n        }\n    },\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName]\n\n            if (field) {\n                return {\n                    'is-invalid': field.$error\n                }\n            }\n        },\n        validate: function () {\n            this.$v.$touch()\n\n            if (!this.$v.$invalid) {\n                this.nextStep()\n                // this.update()\n            }\n        },\n        update: async function () {\n            let self = this\n            try {\n                self.loading = true\n                switch (self.provider) {\n                case 'custom':\n                    self.signHash = await self.web3.eth.sign(self.message, self.account)\n                    break\n                case 'metamask':\n                case 'xinpay':\n                    self.signHash = await self.web3.eth.personal.sign(self.message, self.account, '')\n                    break\n                case 'trezor':\n                case 'ledger':\n                    self.signHash = await self.signMessage(self.message)\n                    break\n                default:\n                    self.loading = false\n                    self.$toasted.show(`An error occurred while updating.`, {\n                        type: 'error'\n                    })\n                    break\n                }\n                // calling update api\n                await self.updateCandidateInfo()\n            } catch (e) {\n                console.log(e)\n                self.loading = false\n                self.$toasted.show(`An error occurred while updating.`, {\n                    type: 'error'\n                })\n            }\n        },\n        async nextStep () {\n            const self = this\n            self.candidateNewInfor = 'Name: ' + self.name +\n                '\\nHardware: ' + self.hardware +\n            '\\nData Center Name: ' + self.dcName +\n            '\\nData Center Location: ' + self.dcLocation +\n            '\\nWebsite: ' + self.website +\n            '\\nTelegram: ' + self.telegram\n            if (self.provider !== 'custom') {\n                const { data } = await axios.post(\n                    '/api/candidates/' + self.address + '/generateMessage',\n                    {\n                        account: self.account\n                    }\n                )\n\n                self.message = data.message\n                self.id = data.id\n                self.qrCode = encodeURI(\n                    'xdcchain:sign?message=' + self.message +\n                    '&submitURL=' + data.url\n                )\n            }\n            self.step++\n            if (self.step === 2 && self.provider === 'XDCwallet') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR()\n                }, 3000)\n            }\n        },\n        backStep () {\n            this.step--\n        },\n        copyTextArea () {\n            this.$refs.text.select()\n            document.execCommand('copy')\n        },\n        async updateCandidateInfo () {\n            let self = this\n            // calling update api\n            try {\n                const body = {\n                    candidate: self.address,\n                    name: self.name,\n                    message: self.message,\n                    signedMessage: self.signHash\n                }\n                body.hardware = self.hardware || ''\n                if (self.dcName !== '') {\n                    body.dcName = self.dcName\n                }\n                if (self.dcLocation !== '') {\n                    body.dcLocation = self.dcLocation\n                }\n\n                body.website = self.website\n                body.telegram = self.telegram\n\n                const { data } = await axios.put(\n                    '/api/candidates/update',\n                    body\n                )\n                if (!data.error) {\n                    self.loading = true\n                    setTimeout(() => {\n                        self.loading = false\n                        self.signHashError = ''\n                        self.signHash = ''\n                        self.$router.push({ path: `/candidate/${self.address}` }, () => {\n                            self.$toasted.show('Candidate\\'s information updated successfully ')\n                        })\n                    }, 3000)\n                } else {\n                    self.loading = false\n                    self.signHashError = ''\n                    self.signHash = ''\n                    if (self.provider === 'XDCwallet') {\n                        self.signHashError = data.error.message\n                        return false\n                    } else {\n                        self.signHashError = ''\n                        self.$toasted.show(data.error.message, {\n                            type: 'error'\n                        })\n                    }\n                }\n            } catch (e) {\n                console.log(e)\n                self.loading = false\n                self.$toasted.show(`An error occurred while updating.`, {\n                    type: 'error'\n                })\n            }\n        },\n        async verifyScannedQR () {\n            const self = this\n            try {\n                // 1. Get msg, signature\n                const signData = await axios.get(\n                    '/api/candidates/' + self.address + '/getSignature?id=' + self.id\n                )\n                if (!signData.data.error) {\n                    clearInterval(self.interval)\n                    self.signHash = signData.data.signature\n                    // 2. Then call update func\n                    await self.updateCandidateInfo()\n                }\n            } catch (e) {\n                console.log(e)\n                self.$toasted.show(`An error occurred while updating.`, {\n                    type: 'error'\n                })\n            }\n        }\n    }\n}\n</script>\n","<template>\n    <div\n        v-if=\"estimatedReward !== 'N/A'\"\n        class=\"float-left\">\n        Est. Daily Reward: {{ estimatedReward }} XDC\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n    props: {\n        value: {\n            type: String,\n            default: ''\n        },\n        candidate: {\n            type: String,\n            default: ''\n        }\n    },\n    data: () => {\n        return {\n            estimatedReward: 'N/A'\n        }\n    },\n    watch: {\n        value: async function (newVal, oldVal) {\n            if (newVal !== oldVal) {\n                await this.calculateRewards()\n            }\n        }\n    },\n    async created () {\n        await this.calculateRewards()\n    },\n    methods: {\n        async calculateRewards () {\n            const self = this\n            const params = {\n                candidate: self.candidate,\n                amount: self.value\n            }\n            const query = self.serializeQuery(params)\n            const { data } = await axios.get('/api/voters/calculatingReward1Day' + '?' + query)\n\n            self.estimatedReward = data !== 'N/A' ? data.toFixed(3) : data\n        }\n    }\n}\n</script>\n","<template>\n    <div class=\"container\">\n        <div\n            v-if=\"step === 1\">\n            <b-row\n                align-v=\"center\"\n                align-h=\"center\"\n                class=\"m-0\">\n                <b-card\n                    :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                    + (loading ? ' XDC-loading' : '')\">\n                    <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Vote</h4>\n                    <ul class=\"XDC-list list-unstyled\">\n                        <li class=\"XDC-list__item\">\n                            <i class=\"tm-XDC2 XDC-list__icon\" />\n                            <p class=\"XDC-list__text\">\n                                <span><router-link :to=\"`/voter/${voter}`\">{{ voter }}</router-link></span>\n                                <span>Voter</span>\n                            </p>\n                        </li>\n                        <li class=\"XDC-list__item\">\n                            <i class=\"tm-profile XDC-list__icon\" />\n                            <p class=\"XDC-list__text\">\n                                <span><router-link :to=\"`/candidate/${candidate}`\">{{ candidate }}</router-link></span>\n                                <span>Candidate</span>\n                            </p>\n                        </li>\n                        <li class=\"XDC-list__item\">\n                            <i class=\"tm-XDC2 XDC-list__icon\" />\n                            <p class=\"XDC-list__text\">\n                                <span> {{ formatCurrencySymbol(formatNumber(balance)) }}</span>\n                                <span>Balance</span>\n                            </p>\n                        </li>\n                    </ul>\n\n                    <b-form\n                        class=\"XDC-form XDC-form--vote\"\n                        novalidate\n                        @submit.prevent=\"validate()\">\n                        <b-form-group\n                            :description=\"`How much XDC would you like to vote for this candidate?\n                            TX fee: ${txFee} XDC`\"\n                            label=\"Vote\"\n                            label-for=\"vote-value\">\n                            <b-input-group>\n                                <number-input\n                                    :class=\"getValidationClass('voteValue')\"\n                                    :min=\"10\"\n                                    :step=\"10\"\n                                    v-model=\"voteValue\"\n                                    name=\"vote-value\"/>\n                                <b-input-group-append>\n                                    <i class=\"tm-XDC2\" />\n                                </b-input-group-append>\n                                <span\n                                    v-if=\"$v.voteValue.$dirty && !$v.voteValue.required\"\n                                    class=\"text-danger\">Required field</span>\n                                <span\n                                    v-else-if=\"$v.voteValue.$dirty && !$v.voteValue.minValue\"\n                                    class=\"text-danger\">Minimum of voting is 100 XDC</span>\n                                <span\n                                    v-else-if=\"votingError\"\n                                    class=\"text-danger\">Not enough XDC</span>\n                            </b-input-group>\n                        </b-form-group>\n                        <div>\n                            <div\n                                class=\"row float-left col-12 mb-2\">\n                                <estimate-reward\n                                    :value=\"voteValue\"\n                                    :candidate=\"candidate\"\n                                    class=\"estimate-reward\"/>\n                            </div>\n                            <div class=\"buttons text-right\">\n                                <b-button\n                                    type=\"button\"\n                                    variant=\"secondary\"\n                                    @click=\"$router.go(-1)\">Cancel</b-button>\n                                <b-button\n                                    type=\"submit\"\n                                    variant=\"primary\">Next</b-button>\n                            </div>\n                        </div>\n                    </b-form>\n                </b-card>\n            </b-row>\n        </div>\n        <div\n            v-if=\"step === 2\">\n            <b-row\n                align-v=\"center\"\n                align-h=\"center\">\n                <b-card\n                    :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                    + (loading ? ' XDC-loading' : '')\">\n                    <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Confirmation</h4>\n                    <!-- <div>\n                        <strong>Using XDC wallet to execute the action\n                        </strong>\n                    </div> -->\n                    <div\n                        style=\"margin-top: 20px\">\n                        <div\n                            class=\"wrapper\">\n                            <div\n                                id=\"one\">\n                                <label>\n                                    <b>Voting information</b>\n                                </label>\n                                <label style=\"margin-top: 5px\">\n                                    <textarea\n                                        :value=\"message\"\n                                        class=\"sign-message\"\n                                        type=\"text\"\n                                        disabled\n                                        cols=\"100\"\n                                        rows=\"4\"\n                                        style=\"width: 100%\"/>\n                                </label>\n                            </div>\n                            <div>\n                                <div\n                                    class=\"pull-right\"\n                                    style=\"margin-right: -7px; float: right\">\n                                    <!-- <button\n                                        class=\"btn btn-primary\"\n                                        variant=\"primary\"\n                                        @click=\"vote\">Submit</button> -->\n                                </div>\n                            </div>\n                            <div>\n                                <div\n                                    v-if=\"provider === 'XDCwallet'\"\n                                    style=\"text-align: center; margin-top: 10px\">\n                                    <vue-qrcode\n                                        :value=\"qrCode\"\n                                        :options=\"{size: 250 }\"\n                                        class=\"img-fluid text-center text-lg-right\"/>\n                                </div>\n                            </div>\n                        </div>\n                        <div\n                            style=\"margin-top: 5px\"\n                            class=\"buttons text-right\">\n                            <b-button\n                                type=\"button\"\n                                variant=\"secondary\"\n                                @click=\"backStep\">Back</b-button>\n                            <button\n                                v-if=\"provider !== 'XDCwallet'\"\n                                class=\"btn btn-primary\"\n                                variant=\"primary\"\n                                @click=\"vote\">Submit</button>\n                        </div>\n                    </div>\n                </b-card>\n            </b-row>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { validationMixin } from 'vuelidate'\nimport {\n    required,\n    minValue\n} from 'vuelidate/lib/validators'\nimport NumberInput from '../NumberInput.vue'\nimport BigNumber from 'bignumber.js'\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport store from 'store'\nimport EstimateReward from './EstimateReward.vue'\n\nexport default {\n    name: 'App',\n    components: {\n        NumberInput,\n        VueQrcode,\n        EstimateReward\n    },\n    mixins: [validationMixin],\n    data () {\n        return {\n            isReady: !!this.web3,\n            voter: 'Unknown',\n            candidate: this.$route.params.candidate,\n            voteValue: '100',\n            loading: false,\n            step: 1,\n            message: '',\n            qrCode: '',\n            processing: true,\n            id: '',\n            interval: null,\n            balance: 0,\n            provider: this.NetworkProvider || store.get('network') || null,\n            votingError: false,\n            txFee: 0,\n            gasPrice: null,\n            transactionHash: '',\n            toastMessageError: 'An error occurred while voting, please try again',\n            toastMessage: 'You have successfully voted!'\n        }\n    },\n    validations: {\n        voteValue: {\n            required,\n            minValue: minValue(100)\n        }\n    },\n    computed: {\n        estimatedReward: function () {\n            return this.voteValue\n        }\n    },\n    watch: {},\n    updated () {},\n    created: async function () {\n        let self = this\n        self.config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = self.config.blockchain || {}\n        self.isReady = !!self.web3\n        self.gasPrice = await self.web3.eth.getGasPrice()\n        self.txFee = new BigNumber(this.chainConfig.gas * self.gasPrice).div(10 ** 18).toString(10)\n        try {\n            if (!self.isReady && self.NetworkProvider === 'metamask') {\n                throw Error('Web3 is not properly detected. Have you installed MetaMask extension?')\n            }\n            self.voter = store.get('address') ||\n                self.$store.state.address || await self.getAccount()\n            self.web3.eth.getBalance(self.voter, function (a, b) {\n                self.balance = new BigNumber(b).div(10 ** 18)\n                if (a) {\n                    console.log('got an error', a)\n                }\n            })\n        } catch (e) {\n            self.$toasted.show(`You need login your account before voting`,\n                {\n                    type : 'default',\n                    duration: 5000,\n                    action : [\n                        {\n                            text : 'Login',\n                            onClick : (e, toastObject) => {\n                                self.$router.push({ path: '/setting' })\n                            }\n                        }\n                    ]\n                })\n            console.log(e)\n        }\n    },\n    destroyed () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    async mounted () {\n    },\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName]\n\n            if (field) {\n                return {\n                    'is-invalid': field.$error\n                }\n            }\n        },\n        validate: function () {\n            this.voteValue = this.voteValue.replace(/,/g, '')\n            this.$v.$touch()\n\n            if (!this.$v.$invalid) {\n                if ((new BigNumber(this.voteValue)).isGreaterThanOrEqualTo(this.balance)) {\n                    this.votingError = true\n                } else {\n                    this.votingError = false\n                    this.nextStep()\n                }\n            }\n        },\n        vote: async function () {\n            let self = this\n\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: '/setting' })\n                    throw Error('Web3 is not properly detected.')\n                }\n                self.loading = true\n                const account = (await self.getAccount() || '').toLowerCase()\n                let contract// = await self.getXDCValidatorInstance()\n                contract = self.XDCValidator\n                let txParams = {\n                    from: account,\n                    value: self.web3.utils.toHex(new BigNumber(this.voteValue).multipliedBy(10 ** 18).toString(10)),\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                }\n                if (self.NetworkProvider === 'ledger' ||\n                    self.NetworkProvider === 'trezor') {\n                    // check if network provider is hardware wallet\n                    // sign transaction using hardwarewallet before sending to chain\n\n                    // https://bit.ly/2KEXzQe\n                    // signing and sending processes\n                    //\n                    //\n                    // login device\n                    // sign transaction with function and parameter to get signature\n                    // attach txParams and signature then sendSignedTransaction\n                    let nonce = await self.web3.eth.getTransactionCount(account)\n                    // let dataTx = contract.vote.request(self.candidate).params[0]\n                    let data = await contract.methods.vote(self.candidate).encodeABI()\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    }\n                    Object.assign(\n                        dataTx,\n                        dataTx,\n                        txParams,\n                        {\n                            nonce: self.web3.utils.toHex(nonce)\n                        }\n                    )\n                    let signature = await self.signTransaction(dataTx)\n                    const txHash = await self.sendSignedTransaction(dataTx, signature)\n                    if (txHash) {\n                        self.transactionHash = txHash\n                        let check = true\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                            if (receipt) {\n                                check = false\n                                self.$toasted.show(self.toastMessage)\n                                setTimeout(() => {\n                                    self.loading = false\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/confirm/${self.transactionHash}` })\n                                    }\n                                }, 2000)\n                            }\n                        }\n                    }\n                } else {\n                    // rs = await contract.vote(self.candidate, txParams)\n                    contract.methods.vote(self.candidate).send(txParams)\n                        .on('transactionHash', async (txHash) => {\n                            self.transactionHash = txHash\n                            let check = true\n                            while (check) {\n                                const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                                if (receipt) {\n                                    check = false\n                                    self.$toasted.show(self.toastMessage)\n                                    setTimeout(() => {\n                                        self.loading = false\n                                        if (self.transactionHash) {\n                                            self.$router.push({ path: `/confirm/${self.transactionHash}` })\n                                        }\n                                    }, 2000)\n                                }\n                            }\n                        }).catch(e => {\n                            console.log(e)\n                            self.loading = false\n                            self.$toasted.show(self.toastMessageError + e, { type: 'error' })\n                        })\n                }\n            } catch (e) {\n                self.loading = false\n                self.$toasted.show(`An error occurred while voting. ${String(e)}`, {\n                    type : 'error'\n                })\n                console.log(e)\n            }\n        },\n        onSuccess () {\n            this.$toasted.show('Copied')\n        },\n        async nextStep () {\n            const self = this\n            const amount = new BigNumber(self.voteValue).toString(10)\n            const data = {\n                voter: self.voter,\n                candidate: self.candidate,\n                amount,\n                action: 'vote'\n            }\n            // call api to generate qr code\n            const generatedMess = await axios.post(`/api/voters/generateQR`, data)\n\n            self.message = generatedMess.data.message\n            self.id = generatedMess.data.id\n\n            self.qrCode = encodeURI(\n                'xdcchain:vote?amount=' + amount + '&' + 'candidate=' + self.candidate +\n                '&name=' + generatedMess.data.candidateName +\n                '&submitURL=' + generatedMess.data.url\n            )\n            self.step++\n\n            if (self.step === 2 && self.processing && self.provider === 'XDCwallet') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR()\n                }, 3000)\n            }\n        },\n        backStep () {\n            if (this.interval) {\n                clearInterval(this.interval)\n            }\n            this.step--\n        },\n        async verifyScannedQR () {\n            let self = this\n            let { data } = await axios.get('/api/voters/getScanningResult?action=vote&id=' + self.id)\n\n            if (!data.error) {\n                self.loading = true\n                if (data.tx) {\n                    clearInterval(self.interval)\n                    let toastMessage = (data.tx && data.status) ? 'You have successfully voted!'\n                        : 'An error occurred while voting, please try again'\n                    self.$toasted.show(toastMessage)\n                    setTimeout(() => {\n                        if (data.tx) {\n                            self.loading = false\n                            self.processing = false\n                            self.step = 0\n                            self.$router.push({ path: `/confirm/${data.tx}` })\n                        }\n                    }, 2000)\n                }\n            }\n        },\n        onChangeVoting (event) {\n            const checking = event.target.checked\n            if (checking) {\n                this.interval = setInterval(async () => {\n                    await this.verifyScannedQR()\n                }, 3000)\n            } else {\n                if (this.interval) {\n                    clearInterval(this.interval)\n                }\n            }\n        }\n    }\n}\n</script>\n","<template>\n    <div\n        v-if=\"loadingPage\"\n        class=\"XDC-loading\" />\n    <div v-else>\n        <div class=\"container\">\n            <div\n                v-if=\"voted === 0\"\n                class=\"row\">\n                <div\n                    class=\"XDC-empty col-12\">\n                    <i class=\"tm-notice XDC-empty__icon\"/>\n                    <p class=\"XDC-empty__description\">You have not voted for this candidate, so you can't unvote.</p>\n                    <b-button\n                        :to=\"`/voting/${candidate}`\"\n                        variant=\"primary\">Vote</b-button>\n                </div>\n            </div>\n            <div\n                v-else>\n                <div\n                    v-if=\"step === 1\">\n                    <b-row\n                        v-if=\"voted\"\n                        align-v=\"center\"\n                        align-h=\"center\"\n                        class=\"m-0\">\n                        <b-card\n                            :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                            + (loading ? ' XDC-loading' : '')\">\n                            <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Unvote\n                                <span\n                                    class=\"XDC-card__subtitle\">\n                                    Your XDC will be locked in a duration after unvoting</span>\n                            </h4>\n                            <ul class=\"XDC-list list-unstyled\">\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-wallet XDC-list__icon\" />\n                                    <p class=\"XDC-list__text\">\n                                        <span><router-link :to=\"`/voter/${voter}`\">{{ voter }}</router-link></span>\n                                        <span>Voter</span>\n                                    </p>\n                                </li>\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-profile XDC-list__icon\" />\n                                    <p class=\"XDC-list__text\">\n                                        <span>\n                                            <router-link :to=\"`/candidate/${candidate}`\">\n                                                {{ candidate }}\n                                            </router-link>\n                                        </span>\n                                        <span>Candidate</span>\n                                    </p>\n                                </li>\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-XDC2 XDC-list__icon\" />\n                                    <p class=\"XDC-list__text\">\n                                        <span> {{ formatCurrencySymbol(formatNumber(voted)) }}\n                                            - <a\n                                                href=\"javascript:\"\n                                                @click=\"unvoteAll\">All</a></span>\n                                        <span>You voted</span>\n                                    </p>\n                                </li>\n                            </ul>\n\n                            <b-form\n                                class=\"XDC-form XDC-form--unvote\"\n                                novalidate\n                                @submit.prevent=\"validate()\">\n                                <b-form-group\n                                    :description=\"`The amount of XDC to unvote. TX fee: ${txFee} XDC`\"\n                                    label=\"Amount\"\n                                    label-for=\"unvote-value\">\n                                    <b-input-group>\n                                        <number-input\n                                            :class=\"getValidationClass('unvoteValue')\"\n                                            :min=\"10\"\n                                            :step=\"10\"\n                                            v-model=\"unvoteValue\"\n                                            name=\"vote-value\"\n                                            @input=\"onChange\"/>\n                                        <b-input-group-append>\n                                            <i class=\"tm-XDC2\" />\n                                        </b-input-group-append>\n                                        <span\n                                            v-if=\"$v.unvoteValue.$dirty && !$v.unvoteValue.required\"\n                                            class=\"text-danger\">Required field </span>\n                                        <span\n                                            v-else-if=\"!isNumeric\"\n                                            class=\"text-danger\">Must be number </span>\n                                        <!-- <span\n                                            v-else-if=\"isMin\"\n                                            class=\"text-danger\">Minimum of unvoting is 100 XDC </span> -->\n                                        <span\n                                            v-else-if=\"isMax\"\n                                            class=\"text-danger\">\n                                            Must be less than {{ limitedUnvote }} XDC </span>\n                                        <span\n                                            v-else-if=\"!isEnoughXDC\"\n                                            class=\"text-danger\">Voted amount left should not less than 100 XDC </span>\n                                    </b-input-group>\n                                </b-form-group>\n                                <div class=\"buttons text-right\">\n                                    <b-button\n                                        type=\"button\"\n                                        variant=\"secondary\"\n                                        @click=\"$router.go(-1)\">Cancel</b-button>\n                                    <!-- <b-button\n                                        type=\"submit\"\n                                        variant=\"primary\">Submit</b-button> -->\n                                    <b-button\n                                        id=\"nextBtn\"\n                                        type=\"submit\"\n                                        variant=\"primary\">Next</b-button>\n                                </div>\n                            </b-form>\n                        </b-card>\n                    </b-row>\n                </div>\n                <div\n                    v-if=\"step === 2\">\n                    <b-row\n                        align-v=\"center\"\n                        align-h=\"center\">\n                        <b-card\n                            :class=\"'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                            + (loading ? ' XDC-loading' : '')\">\n                            <h4 class=\" color-white XDC-card__title XDC-card__title--big\">Confirmation</h4>\n                            <!-- <div>\n                                <strong>Using XDC wallet to execute the action\n                                </strong>\n                            </div> -->\n                            <div\n                                style=\"margin-top: 20px\">\n                                <div\n                                    class=\"wrapper\">\n                                    <div\n                                        id=\"one\">\n                                        <label>\n                                            <b>Unvoting information</b>\n                                        </label>\n                                        <label style=\"margin-top: 5px\">\n                                            <textarea\n                                                :value=\"message\"\n                                                class=\"sign-message\"\n                                                type=\"text\"\n                                                disabled\n                                                cols=\"100\"\n                                                rows=\"4\"\n                                                style=\"width: 100%\"/>\n                                        </label>\n                                    </div>\n                                    <div>\n                                        <div\n                                            class=\"pull-right\"\n                                            style=\"margin-right: -7px; float: right\">\n                                            <!-- <button\n                                                class=\"btn btn-primary\"\n                                                variant=\"primary\"\n                                                @click=\"vote\">Submit</button> -->\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <div\n                                            v-if=\"provider === 'XDCwallet'\"\n                                            style=\"text-align: center; margin-top: 10px\">\n                                            <vue-qrcode\n                                                :value=\"qrCode\"\n                                                :options=\"{size: 250 }\"\n                                                class=\"img-fluid text-center text-lg-right\"/>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div\n                                    style=\"margin-top: 5px\"\n                                    class=\"buttons text-right\">\n                                    <b-button\n                                        type=\"button\"\n                                        variant=\"secondary\"\n                                        @click=\"backStep\">Back</b-button>\n                                    <button\n                                        v-if=\"provider !== 'XDCwallet'\"\n                                        class=\"btn btn-primary\"\n                                        variant=\"primary\"\n                                        @click=\"unvote\">Submit</button>\n                                </div>\n                            </div>\n                        </b-card>\n                    </b-row>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport { validationMixin } from 'vuelidate'\nimport {\n    required\n    // minValue,\n    // maxValue\n} from 'vuelidate/lib/validators'\nimport NumberInput from '../NumberInput.vue'\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport store from 'store'\nimport BigNumber from 'bignumber.js'\nexport default {\n    name: 'App',\n    components: {\n        NumberInput,\n        VueQrcode\n    },\n    mixins: [validationMixin],\n    data () {\n        return {\n            isReady: !!this.web3,\n            voter: '',\n            candidate: this.$route.params.candidate,\n            voted: 0,\n            unvoteValue: '100',\n            loading: false,\n            loadingPage: false,\n            step: 1,\n            interval: null,\n            processing: true,\n            provider: this.NeworkProvider || store.get('network') || null,\n            isMin: false,\n            isMax: false,\n            isNumeric: true,\n            isEnoughXDC: true,\n            minValue: new BigNumber(100),\n            maxValue: new BigNumber(this.voted),\n            converted: null,\n            txFee: 0,\n            gasPrice: null,\n            isOwner: false,\n            limitedUnvote: 0,\n            transactionHash: '',\n            toastMessage: 'You have successfully unvoted!',\n            toastMessageError: 'An error occurred while unvoting, please try again'\n        }\n    },\n    validations () {\n        return {\n            unvoteValue: {\n                required\n                // minValue: minValue(10 ** -18),\n                // maxValue: maxValue(this.voted)\n            }\n        }\n    },\n    watch: {},\n    updated () {},\n    destroyed () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    created: async function () {\n        let self = this\n        let candidate = self.candidate\n        self.loadingPage = true\n        self.config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = self.config.blockchain || {}\n        self.gasPrice = await self.web3.eth.getGasPrice()\n        self.txFee = new BigNumber(this.chainConfig.gas * self.gasPrice).div(10 ** 18).toString(10)\n\n        try {\n            self.isReady = !!self.web3\n            self.voter = store.get('address') ||\n                self.$store.state.address || await self.getAccount()\n\n            const isOwnerPromise = axios.get(`/api/candidates/${candidate}/${self.voter}/isOwner`)\n\n            let contract// = await self.getXDCValidatorInstance()\n            contract = self.XDCValidator\n            // let votedCap = await contract.getVoterCap(candidate, account)\n            let votedCap = await contract.methods.getVoterCap(candidate, self.voter).call()\n\n            self.voted = new BigNumber(votedCap).div(10 ** 18).toString(10)\n            const isOwner = (await isOwnerPromise).data || false\n            self.isOwner = Boolean(isOwner)\n            self.loadingPage = false\n        } catch (e) {\n            console.log(e)\n        }\n    },\n    mounted () {},\n    methods: {\n        getValidationClass: function (fieldName) {\n            const field = this.$v[fieldName]\n\n            if (field) {\n                return {\n                    'is-invalid': field.$error\n                }\n            }\n        },\n        validate: function () {\n            this.unvoteValue = this.unvoteValue.replace(/,/g, '')\n            // check minValue\n            // this.isMin = this.validateMinAmount(this.unvoteValue)\n            // check maxValue\n            this.isMax = this.validateMaxAmount(this.unvoteValue)\n            // check numeric\n            this.isNumeric = this.validateNumeric(this.unvoteValue)\n            // check voted amount left\n            this.isEnoughXDC = this.validateXDCLeft(this.unvoteValue)\n\n            if (this.isNumeric && !this.isMax && this.isEnoughXDC) {\n                this.$v.$touch()\n                if (!this.$v.$invalid) {\n                    this.nextStep()\n                }\n            }\n        },\n        unvote: async function () {\n            let self = this\n            let candidate = this.candidate\n            let value = this.unvoteValue\n\n            try {\n                if (!self.isReady) {\n                    self.$router.push({ path: '/setting' })\n                }\n\n                self.loading = true\n                let unvoteValue = new BigNumber(value).multipliedBy(1e+18).toString(10)\n                const account = (await self.getAccount() || '').toLowerCase()\n                let contract// = await self.getXDCValidatorInstance()\n                contract = self.XDCValidator\n                let txParams = {\n                    from: account,\n                    gasPrice: self.web3.utils.toHex(self.gasPrice),\n                    gas: self.web3.utils.toHex(self.chainConfig.gas),\n                    gasLimit: self.web3.utils.toHex(self.chainConfig.gas),\n                    chainId: self.chainConfig.networkId\n                }\n                if (self.NetworkProvider === 'ledger' ||\n                    self.NetworkProvider === 'trezor') {\n                    // check if network provider is hardware wallet\n                    // sign transaction using hardwarewallet before sending to chain\n\n                    // https://bit.ly/2KEXzQe\n                    // signing and sending processes\n                    //\n                    //\n                    // login device\n                    // sign transaction with function and parameter to get signature\n                    // attach txParams and signature then sendSignedTransaction\n                    let nonce = await self.web3.eth.getTransactionCount(account)\n                    // let dataTx = contract.unvote.request(candidate, unvoteValue).params[0]\n                    let data = await contract.methods.unvote(candidate, unvoteValue).encodeABI()\n                    const dataTx = {\n                        data,\n                        to: self.chainConfig.validatorAddress\n                    }\n                    if (self.NetworkProvider === 'trezor') {\n                        txParams.value = self.web3.utils.toHex(0)\n                    }\n                    Object.assign(\n                        dataTx,\n                        dataTx,\n                        txParams,\n                        {\n                            nonce: self.web3.utils.toHex(nonce)\n                        }\n                    )\n                    let signature = await self.signTransaction(dataTx)\n                    const txHash = await self.sendSignedTransaction(dataTx, signature)\n                    if (txHash) {\n                        self.transactionHash = txHash\n                        let check = true\n                        while (check) {\n                            const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                            if (receipt) {\n                                check = false\n                                self.$toasted.show(self.toastMessage)\n                                setTimeout(() => {\n                                    self.loading = false\n                                    if (self.transactionHash) {\n                                        self.$router.push({ path: `/confirm/${self.transactionHash}` })\n                                    }\n                                }, 2000)\n                            }\n                        }\n                    }\n                } else {\n                    contract.methods.unvote(candidate, unvoteValue).send(txParams)\n                        .on('transactionHash', async (txHash) => {\n                            self.transactionHash = txHash\n                            let check = true\n                            while (check) {\n                                const receipt = await self.web3.eth.getTransactionReceipt(txHash)\n                                if (receipt) {\n                                    check = false\n                                    self.$toasted.show(self.toastMessage)\n                                    setTimeout(() => {\n                                        self.loading = false\n                                        if (self.transactionHash) {\n                                            self.$router.push({ path: `/confirm/${self.transactionHash}` })\n                                        }\n                                    }, 2000)\n                                }\n                            }\n                        }).catch(e => {\n                            console.log(e)\n                            self.loading = false\n                            self.$toasted.show(self.toastMessageError + e, { type: 'error' })\n                        })\n                }\n            } catch (e) {\n                self.loading = false\n                self.$toasted.show('An error occurred while unvoting, please try again', {\n                    type: 'error'\n                })\n                console.log(e)\n            }\n        },\n        async nextStep () {\n            const self = this\n            const amount = new BigNumber(self.unvoteValue).toString(10)\n            const data = {\n                action: 'unvote',\n                voter: self.voter,\n                candidate: self.candidate,\n                amount\n            }\n            // call api to generate qr code\n            const generatedMess = await axios.post(`/api/voters/generateQR`, data)\n\n            self.message = generatedMess.data.message\n            self.id = generatedMess.data.id\n\n            self.qrCode = encodeURI(\n                'xdcchain:unvote?amount=' + amount + '&' + 'candidate=' + self.candidate +\n                '&name=' + generatedMess.data.candidateName +\n                '&submitURL=' + generatedMess.data.url\n            )\n            this.step++\n            if (self.step === 2 && self.provider === 'XDCwallet') {\n                self.interval = setInterval(async () => {\n                    await this.verifyScannedQR()\n                }, 3000)\n            }\n        },\n        backStep () {\n            if (this.interval) {\n                clearInterval(this.interval)\n            }\n            this.step--\n        },\n        async verifyScannedQR () {\n            let self = this\n            let { data } = await axios.get('/api/voters/getScanningResult?action=unvote&id=' + self.id)\n\n            if (!data.error) {\n                self.loading = true\n                if (data.tx) {\n                    clearInterval(self.interval)\n                    let toastMessage = (data.tx && data.status) ? 'You have successfully unvoted!'\n                        : 'An error occurred while voting, please try again'\n                    self.$toasted.show(toastMessage)\n                    setTimeout(() => {\n                        if (data.tx) {\n                            self.loading = false\n                            self.processing = false\n                            self.step = 0\n                            self.$router.push({ path: `/confirm/${data.tx}` })\n                        }\n                    }, 2000)\n                }\n            }\n        },\n        validateMinAmount (value) {\n            this.converted = new BigNumber(value)\n            this.maxValue = new BigNumber(this.voted)\n            if (this.converted.isLessThan(this.minValue) &&\n                this.converted.isGreaterThanOrEqualTo(this.minValue)) {\n                return true\n            }\n            return false\n        },\n        validateMaxAmount (value) {\n            this.converted = new BigNumber(value)\n            const votedValue = new BigNumber(this.voted)\n            this.maxValue = (this.isOwner) ? votedValue.minus(new BigNumber(50000)) : votedValue\n            this.limitedUnvote = this.maxValue.toString(10)\n            if (this.converted.isGreaterThan(this.maxValue)) {\n                return true\n            }\n            return false\n        },\n        validateNumeric (value) {\n            this.converted = new BigNumber(value).toNumber()\n            // check numeric\n            if (isNaN(this.converted)) {\n                return false\n            }\n            return true\n        },\n        validateXDCLeft (value) {\n            this.converted = new BigNumber(value) // unvote value\n            this.maxValue = new BigNumber(this.voted)\n            const acceptedValue = this.maxValue.isGreaterThanOrEqualTo(this.converted)\n            const votedValueLeft = this.maxValue.minus(this.converted).isGreaterThanOrEqualTo(this.minValue)\n            const isUnvoteAll = this.converted.isEqualTo(this.maxValue)\n            if (acceptedValue && (votedValueLeft || isUnvoteAll)) {\n                return true\n            }\n            return false\n        },\n        async unvoteAll () {\n            if (this.isOwner) {\n                let voted = new BigNumber(this.voted)\n                if (voted.isGreaterThan(new BigNumber(50000))) {\n                    this.unvoteValue = voted.minus(new BigNumber(50000)).toString(10)\n                }\n            } else this.unvoteValue = this.voted.toString(10)\n        },\n        onChange (unvoteValue) {\n            // reset\n            this.isMin = false\n            this.isMax = false\n            this.isNumeric = true\n            this.isEnoughXDC = true\n            // check maxValue\n            this.isMax = this.validateMaxAmount(unvoteValue)\n            // check numeric\n            this.isNumeric = this.validateNumeric(unvoteValue)\n            // check voted amount left\n            this.isEnoughXDC = this.validateXDCLeft(unvoteValue)\n            const btn = document.getElementById('nextBtn')\n\n            if (!this.isNumeric || this.isMax || !this.isEnoughXDC) {\n                btn.disabled = true\n            } else {\n                btn.disabled = false\n            }\n        }\n    }\n}\n</script>\n","<template>\n    <div>\n        <div\n            v-if=\"address\"\n            class=\"XDC-header\">\n            <div class=\"container\">\n                <div class=\"XDC-header-block\">\n                    <div class=\"XDC-header-block-left\">\n                        <div>\n                            <i class=\"tm-wallet XDC-header__icon\" />\n                        </div>\n                        <div>\n                            <h4 class=\"h4 color-black\">Address</h4>\n                            <p>\n                                <router-link\n                                    :to=\"`/voter/xdc${address.substring(2)}`\"\n                                    class=\"text-truncate\">\n                                    {{ 'xdc' + address.substring(2) }}\n                                </router-link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"main-content container\">\n            <div\n                v-if=\"!address\">\n                <b-row\n                    class=\"m-0\">\n                    <div class=\"col-12 col-md-2 col-lg-2\"/>\n                    <b-card\n                        v-if=\"!address\"\n                        :class=\"'col-12 col-md-8 col-lg-8 XDC-card XDC-card--lighter'\n                        + (loading ? ' XDC-loading' : '')\">\n                        <h4 class=\"color-white XDC-card__title XDC-card__title--big\">Login</h4>\n                        <b-form\n                            class=\"XDC-form XDC-form--setting\"\n                            novalidate\n                            @submit.prevent=\"validate()\">\n                            <b-form-group\n                                class=\"mb-4\"\n                                label=\"Network Provider\"\n                                label-for=\"provider\">\n                                <b-input-group>\n                                    <b-form-select\n                                        id=\"provider\"\n                                        v-model=\"provider\"\n                                        class=\"form-control\"\n                                        @change=\"onChangeSelect\">\n                                        <option\n                                            v-if=\"!isElectron\"\n                                            value=\"metamask\">XDCPay</option>\n                                        <option value=\"connect-wallet\">WalletConnect v2</option>\n                                        <!-- <option\n                                            value=\"XDCwallet\">XDCWallet (Recommended)</option> -->\n                                        <option\n                                            value=\"custom\">PrivateKey/MNEMONIC</option>\n                                        <option\n                                            value=\"ledger\">Ledger Wallet</option>\n                                        <option\n                                            value=\"trezor\">Trezor Wallet</option>\n                                            <!-- <option\n                                                v-if=\"!isElectron\"\n                                                value=\"xinpay\">XinPay</option> -->\n                                    </b-form-select>\n                                    <small\n                                        v-if=\"provider !== 'metamask' && provider !== 'xinpay'\"\n                                        class=\"form-text text-muted\">Using node at {{ chainConfig.rpc }}.</small>\n                                </b-input-group>\n                            </b-form-group>\n                            <!-- <b-form-group\n                                v-if=\"provider === 'custom'\"\n                                class=\"mb-4\"\n                                label=\"Network URL\"\n                                label-for=\"networks-custom\">\n                                <b-form-input\n                                    :class=\"getValidationClass('custom')\"\n                                    v-model=\"networks.custom\"\n                                    type=\"text\" />\n                                <span\n                                    v-if=\"$v.networks.custom.$dirty && !$v.networks.custom.required\"\n                                    class=\"text-danger\">Required field</span>\n                                <span\n                                    v-else-if=\"$v.networks.custom.$dirty && !$v.networks.custom.localhostUrl\"\n                                    class=\"text-danger\">Wrong URL format</span>\n                            </b-form-group> -->\n                            <b-form-group\n                                v-if=\"provider === 'custom'\"\n                                class=\"mb-4\"\n                                label=\"Privatekey/MNEMONIC\"\n                                label-for=\"mnemonic\">\n                                <b-form-input\n                                    :class=\"getValidationClass('mnemonic')\"\n                                    v-model=\"mnemonic\"\n                                    autocomplete=\"off\"\n                                    type=\"text\" />\n                                <span\n                                    v-if=\"$v.mnemonic.$dirty && !$v.mnemonic.required\"\n                                    class=\"text-danger\">Required field</span>\n                            </b-form-group>\n                            <b-form-group\n                                v-if=\"provider === 'custom'\"\n                                class=\"mb-4\"\n                                label=\"Select HD derivation path(MNEMONIC)\"\n                                label-for=\"hdPath\">\n                                <b-form-input\n                                    :class=\"getValidationClass('hdPath')\"\n                                    :value=\"hdPath\"\n                                    v-model=\"hdPath\"\n                                    type=\"text\" />\n                                <span\n                                    v-if=\"$v.hdPath.$dirty && !$v.hdPath.required\"\n                                    class=\"text-danger\">Required field</span>\n                                <small\n                                    class=\"form-text text-muted\">To unlock the wallet, try paths\n                                    <code\n                                        class=\"hd-path\"\n                                        @click=\"changePath(`m/44'/60'/0'/0`)\">m/44'/60'/0'/0</code> or\n                                    <code\n                                        class=\"hd-path\"\n                                        @click=\"changePath(`m/44'/60'/0'`)\">m/44'/60'/0'</code> or\n                                    <code\n                                        class=\"hd-path\"\n                                        @click=\"changePath(`m/44'/551'/0'/0`)\">m/44'/551'/0'/0</code></small>\n                            </b-form-group>\n\n                            <b-form-group\n                                v-if=\"provider === 'XDCwallet'\"\n                                class=\"mb-4\"\n                                style=\"text-align: center\">\n                                <vue-qrcode\n                                    :options=\"{size: 250 }\"\n                                    :value=\"qrCode\"\n                                    class=\"img-fluid text-center text-lg-right\"/>\n                                <div\n                                    v-if=\"mobileCheck\">\n                                    <b-button\n                                        :href=\"qrCodeApp\"\n                                        variant=\"primary\">\n                                        Open in App\n                                    </b-button>\n                                </div>\n                                <div>\n                                    <b>In case you do not have XDCWallet, download here</b>\n                                </div>\n                                <div\n                                    style=\"margin-top: 5px\">\n                                    <a\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://goo.gl/MvE1GV\"\n                                        class=\"social-links__link\">\n                                        <img src=\"/app/assets/img/appstore.png\" >\n                                    </a>\n                                    <a\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                        href=\"https://goo.gl/4tFQzY\"\n                                        class=\"social-links__link\">\n                                        <img src=\"/app/assets/img/googleplay.png\" >\n                                    </a>\n                                </div>\n                            </b-form-group>\n                            <b-form-group\n                                v-if=\"provider === 'ledger'\"\n                                class=\"mb-4\"\n                                label=\"Select HD derivation path\"\n                                label-for=\"hdPath\">\n                                <b-form-input\n                                    :class=\"getValidationClass('hdPath')\"\n                                    :value=\"hdPath\"\n                                    v-model=\"hdPath\"\n                                    type=\"text\" />\n                                <span\n                                    v-if=\"$v.hdPath.$dirty && !$v.hdPath.required\"\n                                    class=\"text-danger\">Required field</span>\n                                <small\n                                    class=\"form-text text-muted\">To unlock the wallet, try paths\n                                    <code\n                                        class=\"hd-path\"\n                                        @click=\"changePath(`m/44'/60'/0'`)\">m/44'/60'/0'</code>\n                                    or <code\n                                        class=\"hd-path\"\n                                        @click=\"changePath(`m/44'/60'/0'/0`)\">m/44'/60'/0'/0</code>\n                                    with Ethereum App,<br>\n                                    or try path <code\n                                        class=\"hd-path\"\n                                        @click=\"changePath(`m/44'/551'/0'/0`)\">m/44'/551'/0'/0</code>\n                                    with XDC Network App (on Ledger).</small>\n                            </b-form-group>\n\n                            <b-form-group\n                                v-if=\"provider === 'trezor'\"\n                                class=\"mb-4\"\n                                label-for=\"hdPath\">\n                                <span>HD derivation path: </span>\n                                <label class=\"ml-1\"><b>m/44'/60'/0'/0</b></label>\n                                <!-- <b-form-input\n                                    :class=\"getValidationClass('hdPath')\"\n                                    :value=\"hdPath\"\n                                    v-model=\"hdPath\"\n                                    readonly\n                                    type=\"text\" /> -->\n                                <!-- <span\n                                    v-if=\"$v.hdPath.$dirty && !$v.hdPath.required\"\n                                    class=\"text-danger\">Required field</span> -->\n                            </b-form-group>\n\n                            <div\n                                v-if=\"!isReady && provider === 'metamask'\">\n                                <p>Please install &amp; login\n                                    <a\n                                        href=\"https://chrome.google.com/webstore/detail/xdcpay/bocpokimicclpaiekenaeelehdjllofo/\"\n                                        target=\"_blank\">XDCPay Extension</a>\n                                    then connect it to XDC Network Mainnet or Apothem Testnet.</p>\n                            </div>\n                            <div\n                                v-if=\"!isReady && provider === 'xinpay'\">\n                                <p>Please install &amp; login\n                                    <a\n                                        href=\"https://xinpay.io/\"\n                                        target=\"_blank\">XinPay Extension</a>\n                                    then connect it to XDC Network Mainnet or Testnet.</p>\n                            </div>\n                            <div class=\"buttons text-right\">\n                                <b-button\n                                    v-if=\"provider !== 'XDCwallet'\"\n                                    type=\"submit\"\n                                    variant=\"primary\">Save</b-button>\n                            </div>\n                        </b-form>\n                    </b-card>\n                    <div class=\"col-12 col-md-2 col-lg-2\"/>\n                </b-row>\n            </div>\n            <div\n                v-if=\"address\">\n                <b-row\n                    class=\"m-0\">\n                    <div\n                        class=\"col-12 col-md-6 col-lg-6\">\n                        <b-card\n                            v-if=\"address\"\n                            :class=\"'XDC-card XDC-card--lighter'\n                            + (loading ? ' XDC-loading' : '')\">\n                            <h4 class=\"h4 XDC-card__title color-black\">\n                                Account Information</h4>\n                            <ul class=\"XDC-list list-unstyled\">\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-wallet XDC-list__icon\" />\n                                    <p class=\"XDC-list__text\">\n                                        <router-link\n                                            :to=\"`/voter/xdc${address.substring(2)}`\"\n                                            class=\"text-truncate\">\n                                            {{ 'xdc' + address.substring(2) }}\n                                        </router-link>\n                                        <span>Address</span>\n                                    </p>\n                                </li>\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-XDC2 XDC-list__icon\" />\n                                    <div class=\"XDC-list__text\">\n                                        <p class=\"color-white mb-0\">{{ formatNumber(balance) }}\n                                        <span class=\"text-muted\">{{ getCurrencySymbol() }}</span></p>\n                                        <span>Balance</span>\n                                    </div>\n                                </li>\n                                <li class=\"XDC-list__item\">\n                                    <i class=\"tm-XDC XDC-list__icon\" />\n                                    <div class=\"XDC-list__text\">\n                                        <p class=\"color-white mb-0\">\n                                        <span class=\"text-muted\">{{ Boolean(KYCStatus) }}</span></p>\n                                        <span>KYC</span>\n                                    </div>\n                                </li>\n                                <li\n                                    v-if=\"KYCStatus\"\n                                    class=\"XDC-list__item\">\n                                    <i class=\"tm-XDC XDC-list__icon\" />\n                                    <div class=\"XDC-list__text\">\n                                        <p class=\"color-white mb-0\">\n                                            <span class=\"text-muted\">\n                                                <a\n                                                    :href=\"`https://kycdocs.xinfin.network/${KYCStatus}`\"\n                                                    target=\"_blank\">\n                                                    Check here\n                                                </a>\n                                            </span>\n                                        </p>\n                                        <span>KYC</span>\n                                    </div>\n                                </li>\n                            </ul>\n                        </b-card>\n                    </div>\n                    <div\n                        class=\"col-12 col-md-6 col-lg-6\">\n                        <b-card\n                            v-if=\"isReady && (aw || (wh.length > 0))\"\n                            :class=\"'XDC-card XDC-card--lighter'\n                            + (loading ? ' XDC-loading' : '')\">\n                            <h4 class=\"h4 XDC-card__title color-black\">\n                                Withdrawals</h4>\n                            <ul\n                                v-for=\"(w, k, index) in withdraws\"\n                                :key=\"index\"\n                                class=\"XDC-list list-unstyled\">\n                                <li\n                                    v-if=\"w.blockNumber !== '0' && w.cap !== '0'\"\n                                    class=\"XDC-list__item\">\n                                    <p class=\"XDC-list__text\">\n                                        <a :href=\"`${config.explorerUrl}/blocks/${w.blockNumber}`\">\n                                            {{ w.blockNumber }}</a>\n                                        <span>Withdrawal Block Number</span>\n                                    </p>\n                                    <!-- <div class=\"XDC-list__text\">\n                                        <p class=\"color-white mb-0\">\n                                            {{ w.estimatedTime }}</p>\n                                        <span>Estimated Time</span>\n                                    </div> -->\n                                    <div class=\"XDC-list__text\">\n                                        <p class=\"color-white mb-0\">{{ w.cap }}\n                                        <span class=\"text-muted\">{{ getCurrencySymbol() }}</span></p>\n                                        <span>Capacity</span>\n                                    </div>\n                                    <!-- <b-button\n                                        :disabled=\"w.blockNumber > chainConfig.blockNumber\"\n                                        variant=\"primary\"\n                                        @click=\"withdraw(w.blockNumber, k)\">Withdraw</b-button> -->\n                                    <div class=\"XDC-list__text\">\n                                        <b-button\n                                            :disabled=\"w.blockNumber > chainConfig.blockNumber\"\n                                            class=\"float-right\"\n                                            variant=\"primary\"\n                                            @click=\"changeView(w, k)\">Withdraw</b-button>\n                                    </div>\n                                </li>\n                            </ul>\n                            <ul\n                                v-for=\"(w, k, index) in wh\"\n                                :key=\"index\"\n                                class=\"XDC-list list-unstyled\">\n                                <li\n                                    class=\"XDC-list__item\">\n                                    <p class=\"XDC-list__text\">\n                                        <a :href=\"`${config.explorerUrl}/txs/${w.tx}`\">\n                                            {{ (w.tx || '').substring(0,8) }}</a>\n                                        <span>Transaction</span>\n                                    </p>\n                                    <div class=\"XDC-list__text\">\n                                        <p class=\"color-white mb-0\">{{ w.cap }}\n                                        <span class=\"text-muted\">{{ getCurrencySymbol() }}</span></p>\n                                        <span>Capacity</span>\n                                    </div>\n                                    <p class=\"XDC-list__text\"/>\n                                </li>\n                            </ul>\n                        </b-card>\n                    </div>\n                </b-row>\n            </div>\n            <div\n                id=\"hdwalletModal\"\n                class=\"XDC-modal-light\"\n                style=\"display: none;\">\n                <div\n                    class=\"modal-backdrop\">\n                    <div class=\"modal\" >\n                        <header class=\"modal-header\">\n                            <slot name=\"header\">\n                                Please select the address you would like to interact with\n                                <button\n                                    type=\"button\"\n                                    class=\"close\"\n                                    @click=\"closeModal\"\n                                >\n                                    x\n                                </button>\n                            </slot>\n                        </header>\n                        <section class=\"modal-body\">\n                            <slot name=\"hdAddress\">\n                                <div\n                                    v-for=\"(hdwallet, index) in hdWallets\"\n                                    :key=\"index\">\n                                    <label style=\"width: 100%; margin-bottom: 5px; line-height: 16px; cursor: pointer\">\n                                        <input\n                                            :value=\"index\"\n                                            name=\"hdWallet\"\n                                            type=\"radio\"\n                                            autocomplete=\"off\"\n                                            style=\"width: 5%; float: left\" >\n                                        <div style=\"width: 70%; float: left\">\n                                            {{ hdwallet.address }}\n                                        </div>\n                                        <div style=\"width: 20%; margin-left: 2%; float: left\">\n                                            {{ hdwallet.balance }} {{ getCurrencySymbol() }}\n                                        </div>\n                                    </label>\n                                </div>\n                                <div\n                                    id=\"moreHdAddresses\"\n                                    style=\"margin-top: 10px; cursor: pointer\"\n                                    @click=\"moreHdAddresses\">\n                                    More Addresses\n                                </div>\n                            </slot>\n                        </section>\n                        <footer class=\"modal-footer\">\n                            <slot name=\"footer\">\n                                <button\n                                    type=\"button\"\n                                    class=\"btn btn-secondary\"\n                                    @click=\"closeModal\"\n                                >\n                                    Cancel\n                                </button>\n\n                                <button\n                                    type=\"button\"\n                                    class=\"btn btn-primary\"\n                                    @click=\"setHdPath\"\n                                >\n                                    Unlock your wallet\n                                </button>\n                            </slot>\n                        </footer>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Web3 from 'xdc3'\nimport BigNumber from 'bignumber.js'\nimport { validationMixin } from 'vuelidate'\nimport axios from 'axios'\nimport {\n    required, minLength\n} from 'vuelidate/lib/validators'\n// import localhostUrl from '../../validators/localhostUrl.js'\nimport VueQrcode from '@chenfengyuan/vue-qrcode'\nimport store from 'store'\nimport Helper from '../utils'\n// const HDWalletProvider = require('truffle-hdwallet-provider')\nconst { HDWalletProvider } = require('../../helpers')\nconst PrivateKeyProvider = require('truffle-privatekey-provider')\nconst defaultWalletNumber = 10\nexport default {\n    name: 'App',\n    components: {\n        VueQrcode\n    },\n    mixins: [validationMixin],\n    data () {\n        return {\n            isReady: !!this.web3,\n            mnemonic: '',\n            hdPath: \"m/44'/551'/0'/0\", // HD DerivationPath of hardware wallet\n            hdWallets: {}, // list of addresses in hardware wallet\n            config: {},\n            provider: 'metamask',\n            address: '',\n            withdraws: [],\n            wh: [],\n            aw: false,\n            balance: 0,\n            chainConfig: {},\n            networks: {\n                // mainnet: 'https://core.xinfin.network',\n                rpc: 'https://testnet.xinfin.network',\n                XDCwallet: 'https://testnet.xinfin.network'\n            },\n            loading: false,\n            qrCode: 'text',\n            id: '',\n            interval: '',\n            qrCodeApp: '',\n            gasPrice: null,\n            KYCStatus: false\n        }\n    },\n    validations: {\n        networks: {\n            // custom: {\n            //     required,\n            //     localhostUrl\n            // }\n        },\n        mnemonic: {\n            required\n        },\n        hdPath: {\n            required,\n            minLength: minLength(12)\n        }\n    },\n    computed: {\n        mobileCheck: () => {\n            const isAndroid = navigator.userAgent.match(/Android/i)\n            const isIOS = navigator.userAgent.match(/iPhone|iPad|iPod/i)\n            return (isAndroid || isIOS)\n        }\n    },\n    watch: {},\n    updated () {},\n    beforeDestroy () {\n        if (this.interval) {\n            clearInterval(this.interval)\n        }\n    },\n    created: async function () {\n        if (this.NetworkProvider) {\n            this.provider = this.NetworkProvider\n        }\n        let self = this\n        self.hdWallets = self.hdWallets || {}\n        self.config = store.get('configMaster') || await self.appConfig()\n        self.chainConfig = self.config.blockchain || {}\n        self.networks.rpc = self.chainConfig.rpc\n\n        self.setupAccount = async () => {\n            let contract\n            let account\n            self.address = ''\n            try {\n                if (!self.web3 && self.NetworkProvider === 'metamask') {\n                    throw Error('Web3 is not properly detected. Have you installed MetaMask extension?')\n                }\n                if (!self.web3 && self.NetworkProvider === 'xinpay') {\n                    throw Error('Web3 is not properly detected. Have you installed XinPay extension?')\n                }\n                if (self.web3) {\n                    try {\n                        contract = self.XDCValidator\n                        self.gasPrice = await self.web3.eth.getGasPrice()\n                    } catch (error) {\n                        self.$toasted.show('Make sure you choose correct XDC Network network.')\n                    }\n                }\n\n                if (store.get('address') && self.isReady) {\n                    account = store.get('address').toLowerCase()\n                } else {\n                    account = this.$store.state.address\n                        ? this.$store.state.address : (self.web3 ? await self.getAccount() : false)\n                }\n\n                if (!account) {\n                    return false\n                    // if (store.get('address') && self.provider !== 'custom') {\n                    //     account = store.get('address')\n                    // } else return false\n                }\n\n                self.address = account\n                self.web3.eth.getBalance(self.address).then(balanceBN => {\n                    self.balance = new BigNumber(balanceBN).div(10 ** 18)\n                }).catch(e => {\n                    self.$toasted.show('Cannot load balance', { type: 'error' })\n                })\n\n                let whPromise = axios.get(`/api/owners/${self.address}/withdraws?limit=100`)\n                if (contract) {\n                    // let blksPromise = contract.getWithdrawBlockNumbers.call({ from: account })\n                    let blksPromise = contract.methods.getWithdrawBlockNumbers().call({ from: account })\n                    // let blks = await contract.getWithdrawBlockNumbers.call({ from: account })\n\n                    const blks = await blksPromise\n\n                    await Promise.all(blks.map(async (it, index) => {\n                        let blk = new BigNumber(it).toString()\n                        if (blk !== '0') {\n                            self.aw = true\n                        }\n                        console.log(blk, 'blk')\n                        let wd = {\n                            blockNumber: blk\n                        }\n                        wd.cap = new BigNumber(\n                            // await contract.getWithdrawCap.call(blk, { from: account })\n                            await contract.methods.getWithdrawCap(blk).call({ from: account })\n                        ).div(10 ** 18).toFormat()\n                        wd.estimatedTime = await self.getSecondsToHms(\n                            (wd.blockNumber - self.chainConfig.blockNumber)\n                        )\n                        self.withdraws[index] = wd\n                    }))\n                    await this.setKYCStatus(contract)\n                }\n\n                const wh = await whPromise\n\n                // let wh = await axios.get(`/api/owners/${self.address}/withdraws`)\n                self.wh = []\n                wh.data.forEach(w => {\n                    let it = {\n                        cap: new BigNumber(w.capacity).div(10 ** 18).toFormat(),\n                        tx: w.tx\n                    }\n                    self.wh.push(it)\n                })\n                self.isReady = true\n            } catch (e) {\n                console.log(e)\n                self.$toasted.show(e, {\n                    type : 'error'\n                })\n            }\n        }\n        if (self.provider === 'XDCwallet' && !self.address) {\n            const hasQRCOde = self.loginByQRCode()\n            if (await hasQRCOde) {\n                self.interval = setInterval(async () => {\n                    await this.getLoginResult()\n                }, 3000)\n            }\n        }\n        await self.setupAccount()\n    },\n    mounted () {},\n    methods: {\n        getValidationClass: function (fieldName) {\n            let field = this.$v[fieldName]\n            if (typeof this.$v.networks[fieldName] !== 'undefined') {\n                field = this.$v.networks[fieldName]\n            }\n            if (field) {\n                return {\n                    'is-invalid': field.$error\n                }\n            }\n        },\n        validate: function () {\n            if (this.provider === 'connect-wallet') {\n                this.save()\n            }\n            if (this.provider === 'metamask' || this.provider === 'xinpay') {\n                this.save()\n            }\n\n            this.$v.$touch()\n            if (this.provider === 'custom' && !this.$v.mnemonic.$invalid) {\n                this.save()\n            }\n            if (this.provider === 'ledger' && !this.$v.hdPath.$invalid) {\n                this.selectHdPath()\n            }\n            if (this.provider === 'trezor' && !this.$v.hdPath.$invalid) {\n                this.hdPath = \"m/44'/60'/0'/0\"\n                this.selectHdPath()\n            }\n        },\n        selectHdPath: async function (offset = 0, limit = defaultWalletNumber) {\n            let self = this\n            let wallets\n            try {\n                self.loading = true\n                store.set('hdDerivationPath', self.hdPath)\n                if (self.provider === 'trezor') {\n                    await self.unlockTrezor()\n                    wallets = await self.loadTrezorWallets(offset, limit)\n                } else {\n                    await self.unlockLedger()\n                    wallets = await self.loadMultipleLedgerWallets(offset, limit)\n                }\n                if (Object.keys(wallets).length > 0) {\n                    Object.assign(self.hdWallets, self.hdWallets, wallets)\n                    document.getElementById('hdwalletModal').style.display = 'block'\n                    self.loading = false\n                }\n            } catch (error) {\n                console.log(error.message)\n                self.loading = false\n                self.$toasted.show(error.message || error, {\n                    type : 'error'\n                })\n            }\n        },\n        save: async function () {\n            store.clearAll()\n            const self = this\n            self.address = ''\n            self.$store.state.address = null\n            // clear old data\n            self.withdraws = []\n            self.aw = []\n            self.wh = []\n            var wjs = false\n            self.loading = true\n            try {\n                let offset\n                switch (self.provider) {\n                case 'connect-wallet':\n                    let ethereumProvider = await this.walletConnectProvider(self.chainConfig)\n                    await ethereumProvider.connect()\n                    self.address = ethereumProvider.accounts[0]\n                    ethereumProvider.on('disconnect', (code, reason) => {\n                        store.clearAll()\n                        Object.assign(this.$store.state, Helper.getDefaultState())\n\n                        this.$router.go({\n                            path: '/'\n                        })\n                    })\n                    wjs = new Web3(ethereumProvider)\n                    break\n                case 'metamask':\n                    if (window.web3) {\n                        const p = window.web3.currentProvider\n                        wjs = new Web3(p)\n                    }\n                    break\n                case 'xinpay':\n                    if (window.XDCWeb3) {\n                        var pp = window.XDCWeb3.currentProvider\n                        wjs = new Web3(pp)\n                    }\n                    break\n                case 'ledger':\n                    // Object - HttpProvider\n                    wjs = new Web3(new Web3.providers.HttpProvider(self.networks.rpc))\n                    // Object - IpcProvider: The IPC provider is used node.js dapps when running a local node\n                    // import net from 'net'\n                    // wjs = new Web3(new Web3.providers.IpcProvider('~/.ethereum/geth.ipc', net))\n\n                    // Object - WebsocketProvider: The Websocket provider is the standard for usage in legacy browsers.\n                    // wjs = await ws.connect(self.networks.wss)\n                    // wjs = new Web3(new Web3.providers.WebsocketProvider(self.chainConfig.ws))\n                    // web3 version 0.2 haven't supported WebsocketProvider yet. (for web@1.0 only)\n                    offset = document.querySelector('input[name=\"hdWallet\"]:checked').value.toString()\n                    store.set('hdDerivationPath', self.hdPath + '/' + offset)\n                    break\n                case 'trezor':\n                    wjs = new Web3(new Web3.providers.HttpProvider(self.networks.rpc))\n                    offset = document.querySelector('input[name=\"hdWallet\"]:checked').value.toString()\n                    store.set('hdDerivationPath', self.hdPath + '/' + offset)\n                    store.set('offset', offset)\n                    break\n                default:\n                    self.mnemonic = self.mnemonic.trim()\n                    const walletProvider =\n                        (self.mnemonic.indexOf(' ') >= 0)\n                            ? new HDWalletProvider(\n                                self.mnemonic.trim(),\n                                self.chainConfig.rpc, 0, 1, self.hdPath)\n                            : new PrivateKeyProvider(self.mnemonic, self.chainConfig.rpc)\n                    wjs = new Web3(walletProvider)\n                    break\n                }\n                await self.setupProvider(this.provider, wjs)\n                await self.setupAccount()\n                self.loading = false\n\n                if (self.address) {\n                    self.$store.state.address = self.address.toLowerCase()\n                    if (self.provider === 'metamask' || self.provider === 'xinpay' || self.provider === 'connect-wallet') {\n                        store.set('address', self.address.toLowerCase())\n                        store.set('network', self.provider)\n                    }\n                    self.$bus.$emit('logged', 'user logged')\n                    self.$toasted.show('Network Provider was changed successfully')\n                }\n            } catch (e) {\n                self.loading = false\n                self.$toasted.show('There are some errors when changing the network provider', {\n                    type : 'error'\n                })\n                console.log(e)\n            }\n        },\n        async loginByQRCode () {\n            // generate qr code\n            const { data } = await axios.get('/api/auth/generateLoginQR')\n            this.id = data.id\n            this.qrCode = encodeURI(\n                'xdcchain:login?message=' + data.message +\n                '&submitURL=' + data.url\n            )\n            this.qrCodeApp = encodeURI(\n                'xdcchain://login?message=' + data.message +\n                '&submitURL=' + data.url\n            )\n            return true\n        },\n        async getLoginResult () {\n            // calling api every 2 seconds\n            const { data } = await axios.get('/api/auth/getLoginResult?id=' + this.id)\n\n            if (!data.error && data) {\n                this.loading = true\n                if (self.interval) {\n                    clearInterval(self.interval)\n                }\n                await this.getAccountInfo(data.user)\n            }\n        },\n        async onChangeSelect (event) {\n            switch (event) {\n            case 'XDCwallet':\n                await this.loginByQRCode()\n                this.interval = setInterval(async () => {\n                    await this.getLoginResult()\n                }, 3000)\n                break\n            case 'trezor':\n                this.hdPath = \"m/44'/60'/0'/0\"\n                break\n            case 'ledger':\n                this.hdPath = \"m/44'/551'/0'/0\"\n                break\n            default:\n                if (this.interval) {\n                    clearInterval(this.interval)\n                }\n                break\n            }\n        },\n        async getAccountInfo (account) {\n            const self = this\n            let contract\n            self.address = account\n            self.$store.state.address = account\n            const web3 = new Web3(new HDWalletProvider(\n                '',\n                self.chainConfig.rpc, 0, 1, self.hdPath))\n\n            await self.setupProvider(this.provider, web3)\n            try {\n                // contract = await self.getXDCValidatorInstance()\n                contract = self.XDCValidator\n            } catch (error) {\n                if (self.interval) {\n                    clearInterval(self.interval)\n                }\n                self.$toasted.show('Make sure you choose correct xdcchain network.', {\n                    type : 'error'\n                })\n            }\n\n            self.web3.eth.getBalance(self.address, function (a, b) {\n                self.balance = new BigNumber(b).div(10 ** 18).toFormat()\n                if (a) {\n                    console.log('got an error', a)\n                }\n            })\n            if (contract) {\n                // let blks = await contract.getWithdrawBlockNumbers.call({ from: account })\n                let blks = await contract.methods.getWithdrawBlockNumbers().call({ from: account })\n\n                await Promise.all(blks.map(async (it, index) => {\n                    let blk = new BigNumber(it).toString()\n                    if (blk !== '0') {\n                        self.aw = true\n                    }\n                    let wd = {\n                        blockNumber: blk\n                    }\n                    wd.cap = new BigNumber(\n                        // await contract.getWithdrawCap.call(blk, { from: account })\n                        await contract.methods.getWithdrawCap(blk).call({ from: account })\n                    ).div(10 ** 18).toFormat()\n                    wd.estimatedTime = await self.getSecondsToHms(\n                        (wd.blockNumber - self.chainConfig.blockNumber)\n                    )\n                    self.withdraws[index] = wd\n                }))\n            }\n\n            let wh = await axios.get(`/api/owners/${self.address}/withdraws?limit=100`)\n            self.wh = []\n            wh.data.forEach(w => {\n                let it = {\n                    cap: new BigNumber(w.capacity).div(10 ** 18).toFormat(),\n                    tx: w.tx\n                }\n                self.wh.push(it)\n            })\n            self.isReady = true\n            self.loading = false\n            store.set('address', account.toLowerCase())\n            store.set('network', self.provider)\n            self.$bus.$emit('logged', 'user logged')\n            self.$toasted.show('Network Provider was changed successfully')\n            if (this.interval) {\n                clearInterval(this.interval)\n            }\n        },\n        changeView (w, k) {\n            const txFee = new BigNumber(this.chainConfig.gas * this.gasPrice).div(10 ** 18)\n\n            if (this.balance.isGreaterThanOrEqualTo(txFee)) {\n                this.$router.push({ name: 'CandidateWithdraw',\n                    params: {\n                        address: this.address,\n                        blockNumber: w.blockNumber,\n                        capacity: w.cap,\n                        index: k\n                    }\n                })\n            } else {\n                this.$toasted.show('Not enough XDC for transaction fee', {\n                    type : 'info'\n                })\n            }\n        },\n        closeModal () {\n            document.getElementById('hdwalletModal').style.display = 'none'\n        },\n        async setHdPath () {\n            document.getElementById('hdwalletModal').style.display = 'none'\n            await this.save()\n        },\n        async moreHdAddresses () {\n            document.getElementById('moreHdAddresses').style.cursor = 'wait'\n            document.body.style.cursor = 'wait'\n            await this.selectHdPath(Object.keys(this.hdWallets).length, this.defaultWalletNumber)\n            document.getElementById('moreHdAddresses').style.cursor = 'pointer'\n            document.body.style.cursor = 'default'\n        },\n        async setKYCStatus (contract) {\n            // const isHashFound = await contract.methods.getHashCount().call({ from:this.address })\n            const isHashFound = await contract.methods.getHashCount(this.address).call()\n            console.log(isHashFound, 'isHashFound')\n            console.log(new BigNumber(isHashFound).toNumber(), 'KYC uploaded successfully')\n            if (new BigNumber(isHashFound).toNumber()) {\n                const getKYC = await contract.methods.getLatestKYC(this.address).call()\n                // const KYCString = await contract.KYCString.call(this.address)\n                this.KYCStatus = getKYC\n            }\n        },\n        changePath (path) {\n            this.hdPath = path\n        }\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutoComplete.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AutoComplete.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AutoComplete.vue?vue&type=template&id=e33e811a&\"\nimport script from \"./AutoComplete.vue?vue&type=script&lang=js&\"\nexport * from \"./AutoComplete.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"autocomplete\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.search),expression:\"search\"}],staticClass:\"form-control\",attrs:{\"id\":\"search-input\",\"type\":\"text\",\"placeholder\":\"Search Candidate / Voter\"},domProps:{\"value\":(_vm.search)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.search=$event.target.value},_vm.onChange],\"focus\":_vm.onChange,\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.onEnter.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"]))return null;return _vm.onEsc.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"]))return null;return _vm.onArrowDown.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"]))return null;return _vm.onArrowUp.apply(null, arguments)}]}}),_vm._v(\" \"),(_vm.results.length > 0)?_c('ul',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isOpen),expression:\"isOpen\"}],staticClass:\"autocomplete-results\",attrs:{\"id\":\"autocomplete-results\"}},_vm._l((_vm.results),function(result,i){return _c('li',{key:i,staticClass:\"autocomplete-result\",class:{ 'is-active': i === _vm.arrowCounter },on:{\"click\":function($event){return _vm.setResult(result)}}},[_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(_vm._s(result.rank ? result.rank + '. ' : '')+\" \"+_vm._s(result.name || 'XDC.Network')+\" -\\n                    \"+_vm._s(result.status)+\"\\n                \")]),_vm._v(\" \"),_c('small',[_vm._v(_vm._s(result.candidate))])])])}),0):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7fe1398c&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"page-layout\"},[_c('b-navbar',{attrs:{\"toggleable\":\"lg\",\"type\":\"dark\"}},[_c('div',{staticClass:\"container\"},[_c('b-navbar-brand',{attrs:{\"to\":\"/\"}},[_c('img',{attrs:{\"src\":\"/app/assets/img/logo.svg\"}})]),_vm._v(\" \"),_c('b-navbar-toggle',{staticClass:\"btn-menu-sp\",attrs:{\"target\":\"nav-collapse\"}}),_vm._v(\" \"),_c('b-collapse',{attrs:{\"id\":\"nav-collapse\",\"is-nav\":\"\"}},[_c('b-navbar-nav',{staticClass:\"ml-auto\"},[_c('b-nav-form',{staticClass:\"search-form\"},[_c('auto-complete',{attrs:{\"items\":_vm.items},model:{value:(_vm.search),callback:function ($$v) {_vm.search=$$v},expression:\"search\"}}),_vm._v(\" \"),_c('b-button',{attrs:{\"variant\":\"outline-success\",\"type\":\"submit\"},on:{\"click\":_vm.searchCandidate}},[_vm._v(\"Search\")])],1)],1),_vm._v(\" \"),_c('b-navbar-nav',{staticClass:\"ml-auto navbar-buttons\"},[(!_vm.isXDCnet)?_c('b-button',{attrs:{\"id\":\"btn-become-candidate\",\"to\":\"/setting\",\"variant\":\"primary\"}},[_vm._v(\"Login\")]):_c('b-button',{attrs:{\"id\":\"btn-become-candidate\",\"to\":\"/apply\",\"variant\":\"primary\"}},[_vm._v(\"Become a candidate\")]),_vm._v(\" \"),(_vm.isXDCnet)?_c('b-dropdown',{staticClass:\"dd-setting ml-1\",attrs:{\"right\":\"\",\"offset\":\"25\",\"no-caret\":\"\",\"variant\":\"primary\"}},[_c('template',{slot:\"button-content\"},[_c('i',{staticClass:\"tm-cog icon-2x\"})]),_vm._v(\" \"),_c('b-dropdown-item',{staticClass:\"dd-address\",attrs:{\"to\":`/voter/${_vm.account}`}},[_vm._v(\"\\n                                \"+_vm._s(_vm.truncate(_vm.account, 20))+\"\\n                            \")]),_vm._v(\" \"),_c('b-dropdown-divider'),_vm._v(\" \"),_c('b-dropdown-item',{attrs:{\"target\":\"_bank\",\"href\":\"https://howto.xinfin.org/\"}},[_vm._v(\"Help\")]),_vm._v(\" \"),_c('b-dropdown-item',{attrs:{\"to\":\"/setting\"}},[_vm._v(\"Settings/Withdraws\")]),_vm._v(\" \"),_c('b-dropdown-divider'),_vm._v(\" \"),(!_vm.mobileCheck && _vm.isXDCnet)?_c('b-dropdown-item',{attrs:{\"href\":\"/\"},on:{\"click\":_vm.signOut}},[_vm._v(\"Sign out\")]):_vm._e()],2):_vm._e()],1)],1)],1)]),_vm._v(\" \"),_c('div',[_c('router-view')],1),_vm._v(\" \"),_c('footer',{staticClass:\"XDC-footer\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-8\"},[_c('div',{staticClass:\"XDC-footer__copyright\"},[_vm._v(\"\\n                            © \"+_vm._s((new Date()).getFullYear())+\" XDC.Network All rights reserved.\\n                        \")])]),_vm._v(\" \"),_vm._m(0)])])])],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-md-4 XDC-footer__social\"},[_c('ul',{staticClass:\"list-inline\"},[_c('li',{staticClass:\"list-inline-item\"},[_c('a',{attrs:{\"href\":\"https://t.me/xinfintalk\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-telegram\"})])]),_vm._v(\" \"),_c('li',{staticClass:\"list-inline-item\"},[_c('a',{attrs:{\"href\":\"https://www.facebook.com/XinFinHybridBlockchain/\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-facebook\"})])]),_vm._v(\" \"),_c('li',{staticClass:\"list-inline-item\"},[_c('a',{attrs:{\"href\":\"https://twitter.com/XinFin_Official\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-twitter\"})])]),_vm._v(\" \"),_c('li',{staticClass:\"list-inline-item\"},[_c('a',{attrs:{\"href\":\"https://github.com/XinFinOrg\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-github\"})])]),_vm._v(\" \"),_c('li',{staticClass:\"list-inline-item\"},[_c('a',{attrs:{\"href\":\"https://www.reddit.com/r/xinfin\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-reddit\"})])])])])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Chart.vue?vue&type=template&id=7a2172e5&\"\nimport script from \"./Chart.vue?vue&type=script&lang=js&\"\nexport * from \"./Chart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('highcharts',{attrs:{\"options\":_vm.chartOptions}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div\n            v-if=\"isCandidate\"\n            class=\"XDC-header\">\n            <div class=\"container\">\n                <div class=\"XDC-header-block\">\n                    <div class=\"XDC-header-block-left\">\n                        <div>\n                            <i class=\"tm-wallet XDC-header__icon\" />\n                        </div>\n                        <div>\n                            <h4 class=\"h4 color-black\">{{ candidate.name }}\n                                <router-link\n                                    v-if=\"account === candidate.owner\"\n                                    :to=\"'/candidate/' + candidate.address + '/update'\"\n                                    class=\"edit-link\">\n                                    <i class=\"tm-edit ml-2 mr-0\" />\n                                </router-link>\n                            </h4>\n                            <p>\n                                <router-link\n                                    :to=\"'/voter/' + candidate.owner\"\n                                    class=\"text-truncate\">\n                                    {{ candidate.owner }}\n                                </router-link>\n                                <ul class=\"list-inline social-links\">\n                                    <li\n                                        v-for=\"(value, key) in candidate.socials\"\n                                        :key=\"key\"\n                                        class=\"list-inline-item social-links__item\">\n                                        <a\n                                            v-if=\"value !== ''\"\n                                            :href=\"value\"\n                                            target=\"_blank\"\n                                            class=\"social-links__link\">\n                                            <i :class=\"'social-links__icon tm-' + key\" />\n                                        </a>\n                                    </li>\n                                </ul>\n                            </p>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"main-content container\">\n            <div\n                v-if=\"!isCandidate\"\n                class=\"row\">\n                <div\n                    class=\"XDC-empty col-12\">\n                    <i class=\"tm-notice XDC-empty__icon\"/>\n                    <p class=\"XDC-empty__description\">This is not a candidate</p>\n                </div>\n            </div>\n            <div\n                v-else>\n                <b-row\n                    class=\"m-0\">\n                    <div\n                        class=\"col-12 col-md-4 col-lg-4\">\n                        <b-card\n                            :class=\"'XDC-card XDC-card--lighter XDC-card--candidate'\n                            + (loading ? ' XDC-loading' : '')\">\n                            <div class=\"XDC-detail\">\n                                <div class=\"XDC-detail-section\">\n                                    <div class=\"XDC-detail-label\">Capacity</div>\n                                    <div class=\"XDC-detail-value-big\">{{ formatCurrencySymbol(formatBigNumber(candidate.cap, 3)) }}</div>\n                                </div>\n\n                                <div class=\"XDC-detail-section\">\n                                    <div class=\"d-flex justify-content-between\">\n                                        <div>\n                                            <div class=\"XDC-detail-label\">Est. Owner ROI</div>\n                                            <div class=\"XDC-detail-value\">{{ mnROI ? mnROI + '%' : '---' }}</div>\n                                        </div>\n                                        <div>\n                                            <div class=\"XDC-detail-label text-right\">APR</div>\n                                            <div class=\"XDC-detail-value\">\n                                                {{ candidate.status === 'MASTERNODE' ? '10.00 %' : '8.00 %' }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <hr>\n                                <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">Status</div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <p\n                                            :class=\"{ 'color-cyan': candidate.status === 'MASTERNODE',\n                                                      'color-pink': candidate.status === 'SLASHED',\n                                                      'color-pink': candidate.status === 'RESIGNED' }\"\n                                            class=\"XDC-info__description\">\n                                            {{ candidate.status }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">Hardware</div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <span\n                                            :class=\"XDC-info__description\">\n                                            {{ candidate.hardwareInfo }}\n                                        </span>\n                                    </div>\n                                </div>\n                                <div\n                                    v-for=\"(value, key) in candidate.dataCenterInfo\"\n                                    :key=\"key\"\n                                    class=\"XDC-detail-section d-flex justify-content-between XDC-info\">\n                                    <div class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text XDC-detail-label\">{{ key }}</span>\n                                    </div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <span\n                                            :class=\"XDC-info__description\">\n                                            {{ value }}\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">KYC</div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <span\n                                            :class=\"XDC-info__description\">\n                                            <a\n                                                v-if=\"Boolean(KYC.status)\"\n                                                :href=\"KYC.url\"\n                                                target=\"_blank\">Check here</a>\n                                            <template v-else><a href=\"/setting\">Login to Get KYC</a></template>\n                                        </span>\n                                    </div>\n                                </div>\n                                <!-- <div\n                                    v-for=\"(value, key) in candidate.dataCenterInfo\"\n                                    :key=\"key\"\n                                    class=\"col-12 order-md-1 order-lg-0 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">{{ key }}</span>\n                                    </p>\n                                    <p class=\"XDC-info__description\">\n                                        {{ value }}\n                                    </p>\n                                </div> -->\n                                <!-- <div\n                                    v-for=\"(value, key) in candidate.dataCenterInfo\"\n                                    :key=\"key\"\n                                    class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">{{ key }}</span>\n                                    </p>\n                                    <p class=\"XDC-info__description\">\n                                        {{ value }}\n                                    </p>\n                                </div> -->\n                                <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">Latest Signed Block</div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <span\n                                            :class=\"`float-left mr-2 XDC-status-dot&#45;&#45;${getColor(\n                                            candidate.latestSignedBlock || 0, currentBlock)}`\">\n                                            {{ formatNumber(candidate.latestSignedBlock) }}\n                                        </span>\n                                    </div>\n                                </div>\n                                <!-- <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">Voters</div>\n                                    <div class=\"XDC-detail-value-small\">000</div>\n                                </div> -->\n                                <!-- <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">Location</div>\n                                    <div class=\"XDC-detail-value-small\">N/A</div>\n                                </div>\n                                <div class=\"XDC-detail-section d-flex justify-content-between\">\n                                    <div class=\"XDC-detail-label\">Since time</div>\n                                    <div class=\"XDC-detail-value-small\">2020-09-12</div>\n                                </div> -->\n                                <div class=\"XDC-detail-section\">\n                                    <div class=\"XDC-detail-label\">Owner Address</div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <router-link\n                                            :to=\"'/voter/' + candidate.owner\"\n                                            class=\"text-truncate\">\n                                            {{ candidate.owner }}\n                                        </router-link>\n                                    </div>\n                                </div>\n                                <div class=\"XDC-detail-section\">\n                                    <div class=\"XDC-detail-label\">Coinbase Address</div>\n                                    <div class=\"XDC-detail-value-small\">\n                                        <router-link\n                                            :to=\"'/candidate/' + candidate.address\"\n                                            class=\"text-truncate\">\n                                            {{ candidate.address }}\n                                        </router-link>\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"buttons text-right\">\n                                    <b-button\n                                        v-if=\"candidate.owner === account && candidate.status !== 'RESIGNED'\"\n                                        :to=\"`/resign/${candidate.address}`\"\n                                        variant=\"secondary\">Resign</b-button>\n                                <!-- <b-button\n                                    v-if=\"candidate.voted > 0\"\n                                    :to=\"`/unvoting/${candidate.address}`\"\n                                    variant=\"secondary\">Unvote</b-button>\n                                <b-button\n                                    v-if=\"candidate.status !== 'RESIGNED' && isXDCnet\"\n                                    :to=\"`/voting/${candidate.address}`\"\n                                    variant=\"primary\">Vote</b-button> -->\n                                </div>\n                            </div>\n\n                            <!-- <div class=\"section section&#45;&#45;candidate\">\n                                <div class=\"section-title\">\n                                    <span>\n                                        {{ (candidate.rank) ? `${candidate.rank}. ${candidate.name}` : candidate.name }}\n                                    </span>\n\n                                    <router-link\n                                        v-if=\"account === candidate.owner\"\n                                        :to=\"'/candidate/' + candidate.address + '/update'\"\n                                        class=\"edit-link\">\n                                        <i class=\"tm-edit ml-2 mr-0\" />\n                                    </router-link>\n                                    <span class=\"text-truncate section-title__description\">{{ candidate.address }}</span>\n                                    <ul class=\"list-inline social-links\">\n                                        <li\n                                            v-for=\"(value, key) in candidate.socials\"\n                                            :key=\"key\"\n                                            class=\"list-inline-item social-links__item\">\n                                            <a\n                                                v-if=\"value !== ''\"\n                                                :href=\"value\"\n                                                target=\"_blank\"\n                                                class=\"social-links__link\">\n                                                <i :class=\"'social-links__icon tm-' + key\" />\n                                            </a>\n                                        </li>\n                                    </ul>\n                                </div>\n                                <div class=\"row m-md-0\">\n                                    <div\n                                        class=\"col-12 XDC-info text-truncate\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">Owner</span>\n                                        </p>\n                                        <p class=\"XDC-info__description color-cyan\">\n                                            <router-link\n                                                :to=\"'/voter/' + candidate.owner\"\n                                                class=\"text-truncate\">\n                                                {{ candidate.owner }}\n                                            </router-link>\n                                        </p>\n                                    </div>\n                                    <div\n                                        v-if=\"candidate.status !== 'STANDBY'\"\n                                        class=\"col-12 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">Latest Signed Block</span>\n                                        </p>\n                                        <p class=\"XDC-info__description\">\n                                            <span\n                                                :class=\"`float-left mr-2 XDC-status-dot&#45;&#45;${getColor(\n                                                candidate.latestSignedBlock || 0, currentBlock)}`\">\n                                                {{ formatNumber(candidate.latestSignedBlock) }}\n                                            </span>\n                                        </p>\n                                    </div>\n                                    <div class=\"col-12 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">Capacity</span>\n                                        </p>\n                                        <p\n                                            id=\"XDC-info__description&#45;&#45;cap\"\n                                            class=\"XDC-info__description\">\n                                            {{ formatCurrencySymbol(formatBigNumber(candidate.cap, 3)) }}\n                                            <b-tooltip\n                                                v-if=\"checkLongNumber(candidate.cap)\"\n                                                ref=\"tooltip\"\n                                                target=\"XDC-info__description&#45;&#45;cap\">\n                                                {{ formatCurrencySymbol(formatBigNumber(candidate.cap, 6)) }}\n                                            </b-tooltip>\n                                        </p>\n                                    </div>\n                                    <div\n                                        v-if=\"isReady\"\n                                        class=\"col-12 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <i class=\"tm-arrow-up XDC-info__icon\" />\n                                            <span class=\"XDC-info__text\">You voted</span>\n                                        </p>\n                                        <p\n                                            id=\"XDC-info__description&#45;&#45;you-voted\"\n                                            class=\"XDC-info__description\">\n                                            {{ formatCurrencySymbol(formatNumber(candidate.voted)) }}\n                                            <b-tooltip\n                                                v-if=\"checkLongNumber(candidate.voted)\"\n                                                ref=\"tooltip\"\n                                                target=\"XDC-info__description&#45;&#45;you-voted\">\n                                                {{ formatCurrencySymbol(formatBigNumber(candidate.voted, 6)) }}\n                                            </b-tooltip>\n                                        </p>\n                                    </div>\n                                    <div\n                                        class=\"col-12 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span\n                                                class=\"XDC-info__text\">\n                                                Status\n                                            </span>\n                                        </p>\n                                        <p\n                                            :class=\"{ 'color-cyan': candidate.status === 'MASTERNODE',\n                                                      'color-pink': candidate.status === 'SLASHED',\n                                                      'color-pink': candidate.status === 'RESIGNED' }\"\n                                            class=\"XDC-info__description\">\n                                            {{ candidate.status }}\n                                        </p>\n                                    </div>\n                                    <div class=\"col-12 order-md-1 order-lg-0 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">Hardware</span>\n                                        </p>\n                                        <p class=\"XDC-info__description\">\n                                            {{ candidate.hardwareInfo }}\n                                        </p>\n                                    </div>\n                                    <div\n                                        v-for=\"(value, key) in candidate.dataCenterInfo\"\n                                        :key=\"key\"\n                                        class=\"col-12 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">{{ key }}</span>\n                                        </p>\n                                        <p class=\"XDC-info__description\">\n                                            {{ value }}\n                                        </p>\n                                    </div>\n                                    <div class=\"col-12 XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">Est. Staking ROI</span>\n                                        </p>\n                                        <p\n                                            id=\"XDC-info__description&#45;&#45;balance\"\n                                            class=\"XDC-info__description\">\n                                            {{ voterROI ? voterROI + '%' : '-&#45;&#45;' }}\n                                        </p>\n                                    </div>\n                                    <div class=\"col-12   XDC-info\">\n                                        <p class=\"XDC-info__title\">\n                                            <span class=\"XDC-info__text\">Est. Owner ROI</span>\n                                        </p>\n                                        <p\n                                            id=\"XDC-info__description&#45;&#45;balance\"\n                                            class=\"XDC-info__description\">\n                                            {{ mnROI ? mnROI + '%' : '-&#45;&#45;' }}\n                                        </p>\n                                    </div>\n                                </div>\n                                <div\n                                    class=\"buttons text-right\">\n                                    <b-button\n                                        v-if=\"candidate.owner === account && candidate.status !== 'RESIGNED'\"\n                                        :to=\"`/resign/${candidate.address}`\"\n                                        variant=\"secondary\">Resign</b-button>\n                                    <b-button\n                                        v-if=\"candidate.voted > 0\"\n                                        :to=\"`/unvoting/${candidate.address}`\"\n                                        variant=\"secondary\">Unvote</b-button>\n                                    <b-button\n                                        v-if=\"candidate.status !== 'RESIGNED' && isXDCnet\"\n                                        :to=\"`/voting/${candidate.address}`\"\n                                        variant=\"primary\">Vote</b-button>\n                                </div>\n                            </div> -->\n                        </b-card>\n                    </div>\n                    <div\n                        class=\"col-12 col-md-8 col-lg-8\">\n                        <b-card\n                            :class=\"'XDC-card XDC-card--lighter'\n                            + (loading ? ' XDC-loading' : '')\">\n                            <b-tabs\n                                pills\n                                card\n                                class=\"XDC-tab\">\n                                <b-tab\n                                    title=\"Staking\"\n                                    active>\n                                    <div\n                                        :class=\"'section section--txs'\n                                        + (txLoading ? ' XDC-loading' : '')\">\n                                        <b-table\n                                            :items=\"transactions\"\n                                            :fields=\"txFields\"\n                                            :per-page=\"txPerPage\"\n                                            :show-empty=\"true\"\n                                            :class=\"`XDC-table XDC-table--transactions${txLoading ? ' loading' : ''}`\"\n                                            empty-text=\"There are no transactions to show\"\n                                            stacked=\"md\"\n                                            @sort-changed=\"sortingChangeTxes\" >\n\n                                            <template\n                                                slot=\"id\"\n                                                slot-scope=\"data\">{{ data.item.id }}\n                                            </template>\n\n                                            <template\n                                                slot=\"voter\"\n                                                slot-scope=\"data\">\n                                                <router-link\n                                                    :to=\"'/voter/' + data.item.voter\"\n                                                    class=\"text-truncate\">\n                                                    {{ data.item.voter }}\n                                                </router-link>\n                                            </template>\n\n                                            <template\n                                                slot=\"event\"\n                                                slot-scope=\"data\">\n                                                <span :class=\"'fw-600 ' + getEventClass(data.item.event)\">{{ data.item.event }}</span>\n                                            </template>\n\n                                            <template\n                                                slot=\"capacity\"\n                                                slot-scope=\"data\">\n                                                {{ isNaN(data.item.cap) ? '---' : formatCurrencySymbol(data.item.cap) }}\n                                            </template>\n\n                                            <template\n                                                slot=\"createdAt\"\n                                                slot-scope=\"data\">\n                                                <span :id=\"`timestamp__${data.index}`\">{{ data.item.createdAt }}</span>\n                                                <b-tooltip :target=\"`timestamp__${data.index}`\">\n                                                    {{ data.item.dateTooltip }}\n                                                </b-tooltip>\n                                            </template>\n\n                                            <template\n                                                slot=\"action\"\n                                                slot-scope=\"data\">\n                                                <a\n                                                    v-b-tooltip.hover.right\n                                                    :href=\"`${config.explorerUrl}/txs/${data.item.tx}`\"\n                                                    title=\"View on XDCScan\"\n                                                    target=\"_blank\">\n                                                    <i class=\"tm-eye\" />\n                                                    <span>View on XDCScan</span>\n                                                </a>\n                                            </template>\n                                        </b-table>\n\n                                        <b-pagination\n                                            v-if=\"txTotalRows > 0 && txTotalRows > txPerPage\"\n                                            :total-rows=\"txTotalRows\"\n                                            :per-page=\"txPerPage\"\n                                            v-model=\"txCurrentPage\"\n                                            align=\"center\"\n                                            class=\"XDC-pagination\"\n                                            @change=\"txPageChange\"/>\n                                    </div>\n                                </b-tab>\n                                <!-- <b-tab title=\"Voters\">\n                                    <div\n                                        :class=\"'section section-voters'\n                                        + (voterLoading ? ' XDC-loading' : '')\">\n                                        <b-table\n                                            :items=\"voters\"\n                                            :fields=\"voterFields\"\n                                            :per-page=\"voterPerPage\"\n                                            :show-empty=\"true\"\n                                            :class=\"`XDC-table XDC-table--voter${voterLoading ? ' loading' : ''}`\"\n                                            empty-text=\"There are no voters to show\"\n                                            stacked=\"md\"\n                                            @sort-changed=\"sortingChangeVoters\" >\n\n                                            <template\n                                                slot=\"id\"\n                                                slot-scope=\"data\">{{ data.item.id }}\n                                            </template>\n\n                                            <template\n                                                slot=\"address\"\n                                                slot-scope=\"data\">\n                                                <router-link\n                                                    :to=\"'/voter/' + data.item.address\"\n                                                    class=\"text-truncate\">\n                                                    {{ data.item.address }}\n                                                </router-link>\n                                            </template>\n\n                                            <template\n                                                slot=\"capacityNumber\"\n                                                slot-scope=\"data\">{{ formatCurrencySymbol(formatNumber(data.item.cap)) }}\n                                            </template>\n                                        </b-table>\n\n                                        <b-pagination\n                                            v-if=\"voterTotalRows > 0 && voterTotalRows > voterPerPage\"\n                                            :total-rows=\"voterTotalRows\"\n                                            :per-page=\"voterPerPage\"\n                                            v-model=\"voterCurrentPage\"\n                                            align=\"center\"\n                                            class=\"XDC-pagination\"\n                                            @change=\"voterPageChange\" />\n                                    </div>\n                                </b-tab> -->\n                                <b-tab title=\"Rewards\">\n                                    <div\n                                        :class=\"'section section--mnrewards'\n                                        + (rewardLoading ? ' XDC-loading' : '')\">\n                                        <div class=\"row candidate-reward-bar\">\n                                            <div class=\"col-12\">\n                                                <h3 class=\"section-title\">\n                                                    <span\n                                                        v-if=\"candidate.slashedTimes\"\n                                                        class=\"text-truncate section-title__description\">\n                                                        MN was slashed for {{ candidate.slashedTimes }}\n                                                        {{ candidate.slashedTimes > 1 ? 'epochs' : 'epoch' }} over the past week </span>\n                                                    <span\n                                                        class=\"text-truncate section-title__description\">\n                                                        Slashing history:\n                                                        <a\n                                                            :class=\"currentTab === 'week' ? 'tab-active' : ''\"\n                                                            @click=\"filterSlash('week')\">1 Week</a>\n                                                        <span>|</span>\n                                                        <a\n                                                            :class=\"currentTab === 'month' ? 'tab-active' : ''\"\n                                                            @click=\"filterSlash('month')\">1 Month</a>\n                                                        <span>|</span>\n                                                        <a\n                                                            :class=\"currentTab === 'year' ? 'tab-active' : ''\"\n                                                            @click=\"filterSlash('year')\">1 Year</a>\n                                                    </span>\n                                                </h3>\n                                            </div>\n                                        </div>\n                                        <b-table\n                                            :items=\"mnRewards\"\n                                            :fields=\"mnRewardsFields\"\n                                            :sort-by.sync=\"mnRewardsSortBy\"\n                                            :sort-desc.sync=\"mnRewardsSortDesc\"\n                                            :per-page=\"mnRewardsPerPage\"\n                                            :show-empty=\"true\"\n                                            :class=\"`XDC-table XDC-table--mnrewards${rewardLoading ? ' loading' : ''}`\"\n                                            :empty-text=\"`There are no ${(currentTab !== '' ? 'records' : 'rewards')} to show`\"\n                                            stacked=\"md\" >\n\n                                            <template\n                                                slot=\"checkpoint\"\n                                                slot-scope=\"data\">{{ data.item.checkpoint }}\n                                            </template>\n\n                                            <template\n                                                slot=\"reward\"\n                                                slot-scope=\"data\">\n                                                {{ !isNaN(data.item.reward)\n                                                ? formatCurrencySymbol(formatNumber(data.item.reward)) : data.item.reward }}\n                                            </template>\n\n                                            <template\n                                                slot=\"createdAt\"\n                                                slot-scope=\"data\">\n                                                <span :id=\"`timestamp__${data.index}`\">{{ data.item.createdAt }}</span>\n                                                <b-tooltip :target=\"`timestamp__${data.index}`\">\n                                                    {{ data.item.dateTooltip }}\n                                                </b-tooltip>\n                                            </template>\n\n                                        </b-table>\n\n                                        <b-pagination\n                                            v-if=\"mnRewardsTotalRows > 0 && mnRewardsTotalRows > mnRewardsPerPage\"\n                                            :total-rows=\"mnRewardsTotalRows\"\n                                            :per-page=\"mnRewardsPerPage\"\n                                            v-model=\"mnRewardsCurrentPage\"\n                                            align=\"center\"\n                                            class=\"XDC-pagination\"\n                                            @change=\"rewardPageChange\" />\n                                    </div>\n                                </b-tab>\n                            </b-tabs>\n                            <!-- <div\n                                v-if=\"candidate.status !== 'RESIGNED' && candidate.nodeId\"\n                                class=\"container section section--hardware\">\n                                <div\n                                    class=\"row\">\n                                    <div\n                                        v-if=\"loadedCPU\"\n                                        class=\"col-12 col-lg-6\">\n                                        <h3 class=\"section-title\">\n                                            <i class=\"tm-cpu color-pink\" />\n                                            <span>CPUs</span>\n                                        </h3>\n                                        <chart\n                                            :host=\"candidate.nodeId\"\n                                            data-type=\"cpu\"\n                                            class=\"mb-5\" />\n                                    </div>\n                                    <div\n                                        v-if=\"loadedMEM\"\n                                        class=\"col-12 col-lg-6\">\n                                        <h3 class=\"section-title\">\n                                            <i class=\"tm-memory color-orange\" />\n                                            <span>Memory</span>\n                                        </h3>\n                                        <chart\n                                            :host=\"candidate.nodeId\"\n                                            data-type=\"memory\" />\n                                    </div>\n                                </div>\n                            </div> -->\n                        </b-card>\n                    </div>\n                </b-row>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport BigNumber from 'bignumber.js'\nimport Chart from '../Chart.vue'\nimport moment from 'moment'\nimport store from 'store'\n\nexport default {\n    name: 'App',\n    metaInfo: {\n        title: 'Candidate Details | XDC Network Governance DApp',\n        meta: [\n            { name: 'description', content: 'Staking XDC Network Masternode to get the reward every epochs. You can use mobile, desktop, hardware wallet - ledger nano, trezor to stake XDC Network' } // eslint-disable-line\n        ]\n    },\n    components: {\n        chart: Chart\n    },\n    data () {\n        return {\n            isReady: false,\n            account: '',\n            voteActive: false,\n            voteValue: 1,\n            unvoteValue: 1,\n            recentReward: 0,\n            config: {},\n            voters: [],\n            transactions: [],\n            mnRewards: [],\n            candidate: {\n                address: this.$route.params.address.toLowerCase(),\n                name: '',\n                balance: '',\n                status: '',\n                cap: 0,\n                latestBlock: '',\n                latestSignedBlock: 0,\n                rewarded: 0,\n                hardwareInfo: '',\n                dataCenterInfo: {},\n                socials: {},\n                voted: 0,\n                slashedTimes: 0,\n                rank: ''\n            },\n            mnRewardsFields: [\n                {\n                    key: 'epoch',\n                    label: 'Epoch',\n                    sortable: false\n                },\n                {\n                    key: 'name',\n                    label: 'Name',\n                    sortable: false\n                },\n                {\n                    key: 'signNumber',\n                    label: 'Sign Number',\n                    sortable: false\n                },\n                {\n                    key: 'status',\n                    label: 'Status',\n                    sortable: false\n                },\n                {\n                    key: 'reward',\n                    label: 'Reward',\n                    sortable: false\n                },\n                {\n                    key: 'createdAt',\n                    label: 'Age',\n                    sortable: false\n                }\n            ],\n            mnRewardsCurrentPage: 1,\n            mnRewardsSortBy: 'epoch',\n            mnRewardsPerPage: 10,\n            mnRewardsSortDesc: true,\n            mnRewardsTotalRows: 0,\n            voterFields: [\n                {\n                    key: 'address',\n                    label: 'Address',\n                    sortable: false\n                },\n                {\n                    key: 'capacityNumber',\n                    label: 'Capacity',\n                    sortable: true\n                }\n            ],\n            voterSortBy: 'capacityNumber',\n            voterSortDesc: true,\n            voterCurrentPage: 1,\n            voterPerPage: 10,\n            voterTotalRows: 0,\n            txFields: [\n                {\n                    key: 'voter',\n                    label: 'Voter',\n                    sortable: true\n                },\n                {\n                    key: 'event',\n                    label: 'Event',\n                    sortable: true\n                },\n                {\n                    key: 'capacity',\n                    label: 'Capacity',\n                    sortable: true\n                },\n                {\n                    key: 'createdAt',\n                    label: 'Age',\n                    sortable: false\n                },\n                {\n                    key: 'action',\n                    label: '',\n                    sortable: false\n                }\n            ],\n            txSortBy: 'createdAt',\n            txSortDesc: true,\n            txCurrentPage: 1,\n            txPerPage: 10,\n            txTotalRows: 0,\n            loading: false,\n            rewardLoading: false,\n            voterLoading: false,\n            txLoading: false,\n            chartLoading: false,\n            cpu0Series: [],\n            isXDCnet: false,\n            currentBlock: null,\n            loadedCPU: true,\n            loadedMEM: true,\n            isCandidate: true,\n            currentTab: '',\n            voterROI: '',\n            mnROI: '',\n            KYC: {\n                url: '',\n                status: false\n            }\n        }\n    },\n    computed: {\n        sortedVoters: function () {\n            return this.voters.slice().sort(function (a, b) {\n                return b.cap - a.cap\n            })\n        }\n    },\n    watch: {\n        $route (to, from) {\n            this.candidate.address = to.params.address.toLowerCase()\n            this.getCandidateData().then(() => {\n                this.getCandidateVoters()\n                this.getCandidateTransactions()\n                this.getCandidateRewards()\n            }).catch((error) => { console.log(error) })\n        }\n    },\n    created: async function () {\n        let self = this\n        self.config = store.get('configMaster') || await this.appConfig()\n        self.currentBlock = self.config.blockchain.blockNumber\n        self.isReady = !!self.web3\n        try {\n            if (self.isReady) {\n                let contract// = self.XDCValidator.deployed()\n                contract = self.XDCValidator\n                self.account = store.get('address') ||\n                    self.$store.state.address || await self.getAccount()\n                if (self.account.substring(0, 2) === '0x') {\n                    self.account = 'xdc' + self.account.substring(2)\n                }\n                if (await self.account && await contract) {\n                    self.isXDCnet = true\n                }\n            }\n            this.$bus.$on('CPUResult', function (res) {\n                self.loadedCPU = res\n            })\n            this.$bus.$on('MEMResult', function (res) {\n                self.loadedMEM = res\n            })\n        } catch (error) {\n            console.log(error)\n        }\n        self.getCandidateVoters()\n        self.getCandidateTransactions()\n        await self.getCandidateData()\n        self.getCandidateRewards()\n        if (self.candidate.rank) {\n            self.getAnnualReward()\n        }\n    },\n    mounted () {},\n    methods: {\n        getEventClass (event) {\n            let clazz = ''\n            if (event === 'Unvote' || event === 'Resign') {\n                clazz = 'color-pink'\n            }\n\n            return clazz\n        },\n        getDate (date) {\n            return date\n        },\n        async getCandidateData () {\n            let self = this\n\n            try {\n                let address = self.candidate.address\n\n                self.loading = true\n                const candidatePromise = axios.get(`/api/candidates/${address}`)\n\n                // Get candidate's information\n                let c = await candidatePromise\n\n                if (c.data) {\n                    let data = c.data\n                    console.log(data, 'data')\n                    self.isCandidate = data.candidate\n                    self.candidate.name = data.name ? data.name : 'XDC.Network'\n                    self.candidate.status = data.status\n                    self.candidate.nodeId = data.nodeId\n                    self.candidate.owner = data.owner\n                    self.candidate.cap = new BigNumber(data.capacity).div(10 ** 18).toNumber()\n                    self.candidate.rewarded = 0\n                    self.candidate.latestBlock = '0'\n                    self.candidate.latestSignedBlock = data.latestSignedBlock\n                    self.candidate.hardwareInfo = data.hardware || 'N/A'\n                    self.candidate.dataCenterInfo = {\n                        name: (data.dataCenter || {}).name || 'N/A',\n                        location: (data.dataCenter || {}).location || 'N/A'\n                    }\n                    self.candidate.socials = data.socials\n                    self.candidate.slashedTimes = data.slashedTimes\n                    self.candidate.rank = data.rank\n                }\n\n                if (self.web3) {\n                    let youVoted = new BigNumber(0)\n                    self.web3.eth.getBalance(self.candidate.address, function (a, b) {\n                        self.candidate.balance = new BigNumber(b).div(10 ** 18)\n                        if (a) {\n                            console.log('got an error', a)\n                        }\n                    })\n                    // let contract = self.XDCValidator\n                    // console.log('1111', '0x' + address.substring(3))\n                    // self.KYC.url = await contract.methods.getLatestKYC.call('0x' + address.substring(3))\n                    self.KYC.status = await this.getKYCStatus('0x' + self.candidate.owner.substring(3))\n                    console.log(self.KYC, 'statusstatus')\n                    if (self.KYC.status) self.KYC.url = `https://kycdocs.xinfin.network/${self.KYC.status}`\n                    if (self.account) {\n                        try {\n                            let contract// = await self.getXDCValidatorInstance()\n                            contract = self.XDCValidator\n                            // youVoted = await contract.getVoterCap(address, self.account)\n                            youVoted = await contract.methods.getVoterCap(address, self.account)\n                                .call()\n                            self.candidate.cap = await contract.methods.getCandidateCap(address)\n                                .call().div(1e18).toNumber()\n                        } catch (e) {}\n                    }\n\n                    self.candidate.voted = new BigNumber(youVoted).div(10 ** 18).toNumber()\n                }\n\n                self.loading = false\n            } catch (e) {\n                self.loading = false\n                console.log(e)\n            }\n        },\n        async getCandidateRewards () {\n            try {\n                const self = this\n                const address = self.candidate.address\n                // Masternode reward table\n                self.rewardLoading = true\n                const params = {\n                    page: self.mnRewardsCurrentPage,\n                    limit: self.mnRewardsPerPage\n                }\n                let mnRewards = await axios.get(\n                    `/api/candidates/${address}/${self.candidate.owner}/getRewards?${self.serializeQuery(params)}`\n                )\n                let items = []\n\n                mnRewards.data.items.map((r) => {\n                    const reward = !isNaN(r.masternodeReward || 0)\n                        ? new BigNumber(r.masternodeReward || 0).toFixed(6) : r.masternodeReward\n                    items.push({\n                        epoch: r.epoch,\n                        signNumber: r.signNumber ? r.signNumber : 0,\n                        reward: reward,\n                        createdAt: r.rewardTime ? moment(r.rewardTime).fromNow() : 'N/A',\n                        dateTooltip: moment(r.rewardTime).format('lll'),\n                        status: r.status,\n                        name: self.candidate.name || 'XDC.Network'\n                    })\n                })\n                self.mnRewards = items\n\n                self.mnRewardsTotalRows = mnRewards.data.total\n                self.rewardLoading = false\n            } catch (error) {\n                self.rewardLoading = false\n                console.log(error)\n            }\n        },\n        async getCandidateVoters () {\n            try {\n                const self = this\n                const address = self.candidate.address\n                self.voterLoading = true\n                const params = {\n                    page: self.voterCurrentPage,\n                    limit: self.voterPerPage,\n                    sortBy: self.voterSortBy,\n                    sortDesc: self.voterSortDesc\n                }\n                const voterPromise = axios.get(`/api/candidates/${address}/voters?${self.serializeQuery(params)}`)\n\n                // Voter table\n                let voters = await voterPromise\n                let items = []\n\n                voters.data.items.map((v, idx) => {\n                    items.push({\n                        address: v.voter,\n                        cap: new BigNumber(v.capacity).div(10 ** 18).toNumber()\n                    })\n                })\n\n                self.voters = items\n                self.voterTotalRows = voters.data.total\n                self.voterLoading = false\n            } catch (error) {\n                self.voterLoading = false\n                console.log(error)\n            }\n        },\n        async getCandidateTransactions () {\n            try {\n                const self = this\n                const address = self.candidate.address\n                self.txLoading = true\n                const params = {\n                    page: self.txCurrentPage,\n                    limit: self.txPerPage,\n                    sortBy: self.txSortBy,\n                    sortDesc: self.txSortDesc\n                }\n\n                const txPromise = axios.get(`/api/transactions/candidate/${address}?${self.serializeQuery(params)}`)\n                // Get transaction table\n                let txs = await txPromise\n                let items = []\n\n                txs.data.items.map((tx, idx) => {\n                    items.push({\n                        tx: tx.tx,\n                        voter: tx.voter,\n                        candidate: tx.candidate,\n                        event: tx.event,\n                        cap: new BigNumber(tx.capacity).div(10 ** 18).toNumber(),\n                        createdAt: moment(tx.createdAt).fromNow(),\n                        dateTooltip: moment(tx.createdAt).format('lll')\n                    })\n                })\n                self.transactions = items\n\n                self.txTotalRows = txs.data.total\n                self.txLoading = false\n            } catch (error) {\n                self.txLoading = false\n                console.log(error)\n            }\n        },\n        getColor (latestSignedBlock, currentBlock) {\n            let result\n            switch (true) {\n            case latestSignedBlock >= (currentBlock - 100):\n                result = 'cyan'\n                break\n            case latestSignedBlock < (currentBlock - 100) &&\n                latestSignedBlock >= (currentBlock - 200):\n                result = 'yellow'\n                break\n            case latestSignedBlock < (currentBlock - 200):\n                result = 'pink'\n                break\n            default:\n                result = ''\n            }\n            return result\n        },\n        txPageChange (val) {\n            if (this.txCurrentPage !== val) {\n                this.txCurrentPage = val\n                this.getCandidateTransactions()\n            }\n        },\n        voterPageChange (val) {\n            if (this.voterCurrentPage !== val) {\n                this.voterCurrentPage = val\n                this.getCandidateVoters()\n            }\n        },\n        rewardPageChange (val) {\n            if (this.mnRewardsCurrentPage !== val) {\n                this.mnRewardsCurrentPage = val\n                if (this.currentTab !== '') {\n                    this.getSlashedData(this.currentTab)\n                } else this.getCandidateRewards()\n            }\n        },\n        sortingChangeVoters (obj) {\n            this.voterSortBy = obj.sortBy\n            this.voterSortDesc = obj.sortDesc\n            this.getCandidateVoters()\n        },\n        sortingChangeTxes (obj) {\n            this.txSortBy = obj.sortBy\n            this.txSortDesc = obj.sortDesc\n            this.getCandidateTransactions()\n        },\n        filterSlash (filterName) {\n            this.mnRewardsCurrentPage = 1\n            this.$store.state.mnRewardsCurrentPage = 1\n            if (this.currentTab !== filterName) {\n                this.currentTab = filterName\n                this.getSlashedData(filterName)\n            }\n        },\n        async getSlashedData (filterName) {\n            try {\n                const self = this\n                const address = self.candidate.address\n\n                self.rewardLoading = true\n                const params = {\n                    filterBy: filterName,\n                    page: self.mnRewardsCurrentPage,\n                    limit: self.mnRewardsPerPage\n                }\n                let slashedList = await axios.get(\n                    `/api/candidates/${address}/slashedFilter?${self.serializeQuery(params)}`\n                )\n                let items = []\n\n                slashedList.data.items.map((r) => {\n                    const reward = !isNaN(r.masternodeReward || 0)\n                        ? new BigNumber(r.masternodeReward || 0).toFixed(6) : r.masternodeReward\n                    items.push({\n                        epoch: r.epoch,\n                        signNumber: r.signNumber ? r.signNumber : 0,\n                        reward: reward,\n                        createdAt: r.rewardTime ? moment(r.rewardTime).fromNow() : 'N/A',\n                        dateTooltip: moment(r.rewardTime).format('lll'),\n                        status: r.status\n                    })\n                })\n                self.mnRewards = items\n\n                self.mnRewardsTotalRows = slashedList.data.total\n                self.rewardLoading = false\n            } catch (error) {\n                self.rewardLoading = false\n                console.log(error)\n            }\n        },\n        async getAnnualReward () {\n            axios.get('/api/voters/annualReward?candidate=' + this.candidate.address)\n                .then((result) => {\n                    if (result.data && result.data.voterROI) {\n                        this.voterROI = result.data.voterROI.toFixed(2)\n                        this.mnROI = result.data.mnROI.toFixed(2)\n                    }\n                })\n                .catch(error => {\n                    console.log(error)\n                    this.$toasted.show(error, { type: 'error' })\n                })\n        },\n        async getKYCStatus (account) {\n            // let contract = await this.getXDCValidatorInstance()\n            let contract = this.XDCValidator\n            if (contract) {\n                console.log(account, 'getKYC')\n                const isHashFound = await contract.methods.getHashCount(account).call()\n                console.log(isHashFound, 'isHashFound')\n                if (new BigNumber(isHashFound).toNumber()) {\n                    const getKYC = await contract.methods.getLatestKYC(account).call()\n                    // const KYCString = await contract.KYCString.call(account)\n                    this.KYC.status = getKYC\n                    return getKYC\n                }\n            } else {\n                console.log('1111')\n            }\n        }\n    }\n}\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=7d8788c4&\"\nimport script from \"./View.vue?vue&type=script&lang=js&\"\nexport * from \"./View.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.isCandidate)?_c('div',{staticClass:\"XDC-header\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"XDC-header-block\"},[_c('div',{staticClass:\"XDC-header-block-left\"},[_vm._m(0),_vm._v(\" \"),_c('div',[_c('h4',{staticClass:\"h4 color-black\"},[_vm._v(_vm._s(_vm.candidate.name)+\"\\n                            \"),(_vm.account === _vm.candidate.owner)?_c('router-link',{staticClass:\"edit-link\",attrs:{\"to\":'/candidate/' + _vm.candidate.address + '/update'}},[_c('i',{staticClass:\"tm-edit ml-2 mr-0\"})]):_vm._e()],1),_vm._v(\" \"),_c('p',[_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":'/voter/' + _vm.candidate.owner}},[_vm._v(\"\\n                                \"+_vm._s(_vm.candidate.owner)+\"\\n                            \")]),_vm._v(\" \"),_c('ul',{staticClass:\"list-inline social-links\"},_vm._l((_vm.candidate.socials),function(value,key){return _c('li',{key:key,staticClass:\"list-inline-item social-links__item\"},[(value !== '')?_c('a',{staticClass:\"social-links__link\",attrs:{\"href\":value,\"target\":\"_blank\"}},[_c('i',{class:'social-links__icon tm-' + key})]):_vm._e()])}),0)],1)])])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"main-content container\"},[(!_vm.isCandidate)?_c('div',{staticClass:\"row\"},[_vm._m(1)]):_c('div',[_c('b-row',{staticClass:\"m-0\"},[_c('div',{staticClass:\"col-12 col-md-4 col-lg-4\"},[_c('b-card',{class:'XDC-card XDC-card--lighter XDC-card--candidate'\n                        + (_vm.loading ? ' XDC-loading' : '')},[_c('div',{staticClass:\"XDC-detail\"},[_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Capacity\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-big\"},[_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.candidate.cap, 3))))])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"d-flex justify-content-between\"},[_c('div',[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Est. Owner ROI\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value\"},[_vm._v(_vm._s(_vm.mnROI ? _vm.mnROI + '%' : '---'))])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"XDC-detail-label text-right\"},[_vm._v(\"APR\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value\"},[_vm._v(\"\\n                                            \"+_vm._s(_vm.candidate.status === 'MASTERNODE' ? '10.00 %' : '8.00 %')+\"\\n                                        \")])])])]),_vm._v(\" \"),_c('hr'),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section d-flex justify-content-between\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Status\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('p',{staticClass:\"XDC-info__description\",class:{ 'color-cyan': _vm.candidate.status === 'MASTERNODE',\n                                                  'color-pink': _vm.candidate.status === 'SLASHED',\n                                                  'color-pink': _vm.candidate.status === 'RESIGNED' }},[_vm._v(\"\\n                                        \"+_vm._s(_vm.candidate.status)+\"\\n                                    \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section d-flex justify-content-between\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Hardware\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('span',{class:_vm.XDC-_vm.info__description},[_vm._v(\"\\n                                        \"+_vm._s(_vm.candidate.hardwareInfo)+\"\\n                                    \")])])]),_vm._v(\" \"),_vm._l((_vm.candidate.dataCenterInfo),function(value,key){return _c('div',{key:key,staticClass:\"XDC-detail-section d-flex justify-content-between XDC-info\"},[_c('div',{staticClass:\"XDC-info__title\"},[_c('span',{staticClass:\"XDC-info__text XDC-detail-label\"},[_vm._v(_vm._s(key))])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('span',{class:_vm.XDC-_vm.info__description},[_vm._v(\"\\n                                        \"+_vm._s(value)+\"\\n                                    \")])])])}),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section d-flex justify-content-between\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"KYC\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('span',{class:_vm.XDC-_vm.info__description},[(Boolean(_vm.KYC.status))?_c('a',{attrs:{\"href\":_vm.KYC.url,\"target\":\"_blank\"}},[_vm._v(\"Check here\")]):[_c('a',{attrs:{\"href\":\"/setting\"}},[_vm._v(\"Login to Get KYC\")])]],2)])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section d-flex justify-content-between\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Latest Signed Block\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('span',{class:`float-left mr-2 XDC-status-dot&#45;&#45;${_vm.getColor(\n                                        _vm.candidate.latestSignedBlock || 0, _vm.currentBlock)}`},[_vm._v(\"\\n                                        \"+_vm._s(_vm.formatNumber(_vm.candidate.latestSignedBlock))+\"\\n                                    \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Owner Address\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":'/voter/' + _vm.candidate.owner}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.candidate.owner)+\"\\n                                    \")])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Coinbase Address\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":'/candidate/' + _vm.candidate.address}},[_vm._v(\"\\n                                        \"+_vm._s(_vm.candidate.address)+\"\\n                                    \")])],1)]),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[(_vm.candidate.owner === _vm.account && _vm.candidate.status !== 'RESIGNED')?_c('b-button',{attrs:{\"to\":`/resign/${_vm.candidate.address}`,\"variant\":\"secondary\"}},[_vm._v(\"Resign\")]):_vm._e()],1)],2)])],1),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-md-8 col-lg-8\"},[_c('b-card',{class:'XDC-card XDC-card--lighter'\n                        + (_vm.loading ? ' XDC-loading' : '')},[_c('b-tabs',{staticClass:\"XDC-tab\",attrs:{\"pills\":\"\",\"card\":\"\"}},[_c('b-tab',{attrs:{\"title\":\"Staking\",\"active\":\"\"}},[_c('div',{class:'section section--txs'\n                                    + (_vm.txLoading ? ' XDC-loading' : '')},[_c('b-table',{class:`XDC-table XDC-table--transactions${_vm.txLoading ? ' loading' : ''}`,attrs:{\"items\":_vm.transactions,\"fields\":_vm.txFields,\"per-page\":_vm.txPerPage,\"show-empty\":true,\"empty-text\":\"There are no transactions to show\",\"stacked\":\"md\"},on:{\"sort-changed\":_vm.sortingChangeTxes},scopedSlots:_vm._u([{key:\"id\",fn:function(data){return [_vm._v(_vm._s(data.item.id)+\"\\n                                        \")]}},{key:\"voter\",fn:function(data){return [_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":'/voter/' + data.item.voter}},[_vm._v(\"\\n                                                \"+_vm._s(data.item.voter)+\"\\n                                            \")])]}},{key:\"event\",fn:function(data){return [_c('span',{class:'fw-600 ' + _vm.getEventClass(data.item.event)},[_vm._v(_vm._s(data.item.event))])]}},{key:\"capacity\",fn:function(data){return [_vm._v(\"\\n                                            \"+_vm._s(isNaN(data.item.cap) ? '---' : _vm.formatCurrencySymbol(data.item.cap))+\"\\n                                        \")]}},{key:\"createdAt\",fn:function(data){return [_c('span',{attrs:{\"id\":`timestamp__${data.index}`}},[_vm._v(_vm._s(data.item.createdAt))]),_vm._v(\" \"),_c('b-tooltip',{attrs:{\"target\":`timestamp__${data.index}`}},[_vm._v(\"\\n                                                \"+_vm._s(data.item.dateTooltip)+\"\\n                                            \")])]}},{key:\"action\",fn:function(data){return [_c('a',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.right\",modifiers:{\"hover\":true,\"right\":true}}],attrs:{\"href\":`${_vm.config.explorerUrl}/txs/${data.item.tx}`,\"title\":\"View on XDCScan\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-eye\"}),_vm._v(\" \"),_c('span',[_vm._v(\"View on XDCScan\")])])]}}])}),_vm._v(\" \"),(_vm.txTotalRows > 0 && _vm.txTotalRows > _vm.txPerPage)?_c('b-pagination',{staticClass:\"XDC-pagination\",attrs:{\"total-rows\":_vm.txTotalRows,\"per-page\":_vm.txPerPage,\"align\":\"center\"},on:{\"change\":_vm.txPageChange},model:{value:(_vm.txCurrentPage),callback:function ($$v) {_vm.txCurrentPage=$$v},expression:\"txCurrentPage\"}}):_vm._e()],1)]),_vm._v(\" \"),_c('b-tab',{attrs:{\"title\":\"Rewards\"}},[_c('div',{class:'section section--mnrewards'\n                                    + (_vm.rewardLoading ? ' XDC-loading' : '')},[_c('div',{staticClass:\"row candidate-reward-bar\"},[_c('div',{staticClass:\"col-12\"},[_c('h3',{staticClass:\"section-title\"},[(_vm.candidate.slashedTimes)?_c('span',{staticClass:\"text-truncate section-title__description\"},[_vm._v(\"\\n                                                    MN was slashed for \"+_vm._s(_vm.candidate.slashedTimes)+\"\\n                                                    \"+_vm._s(_vm.candidate.slashedTimes > 1 ? 'epochs' : 'epoch')+\" over the past week \")]):_vm._e(),_vm._v(\" \"),_c('span',{staticClass:\"text-truncate section-title__description\"},[_vm._v(\"\\n                                                    Slashing history:\\n                                                    \"),_c('a',{class:_vm.currentTab === 'week' ? 'tab-active' : '',on:{\"click\":function($event){return _vm.filterSlash('week')}}},[_vm._v(\"1 Week\")]),_vm._v(\" \"),_c('span',[_vm._v(\"|\")]),_vm._v(\" \"),_c('a',{class:_vm.currentTab === 'month' ? 'tab-active' : '',on:{\"click\":function($event){return _vm.filterSlash('month')}}},[_vm._v(\"1 Month\")]),_vm._v(\" \"),_c('span',[_vm._v(\"|\")]),_vm._v(\" \"),_c('a',{class:_vm.currentTab === 'year' ? 'tab-active' : '',on:{\"click\":function($event){return _vm.filterSlash('year')}}},[_vm._v(\"1 Year\")])])])])]),_vm._v(\" \"),_c('b-table',{class:`XDC-table XDC-table--mnrewards${_vm.rewardLoading ? ' loading' : ''}`,attrs:{\"items\":_vm.mnRewards,\"fields\":_vm.mnRewardsFields,\"sort-by\":_vm.mnRewardsSortBy,\"sort-desc\":_vm.mnRewardsSortDesc,\"per-page\":_vm.mnRewardsPerPage,\"show-empty\":true,\"empty-text\":`There are no ${(_vm.currentTab !== '' ? 'records' : 'rewards')} to show`,\"stacked\":\"md\"},on:{\"update:sortBy\":function($event){_vm.mnRewardsSortBy=$event},\"update:sort-by\":function($event){_vm.mnRewardsSortBy=$event},\"update:sortDesc\":function($event){_vm.mnRewardsSortDesc=$event},\"update:sort-desc\":function($event){_vm.mnRewardsSortDesc=$event}},scopedSlots:_vm._u([{key:\"checkpoint\",fn:function(data){return [_vm._v(_vm._s(data.item.checkpoint)+\"\\n                                        \")]}},{key:\"reward\",fn:function(data){return [_vm._v(\"\\n                                            \"+_vm._s(!isNaN(data.item.reward)\n                                            ? _vm.formatCurrencySymbol(_vm.formatNumber(data.item.reward)) : data.item.reward)+\"\\n                                        \")]}},{key:\"createdAt\",fn:function(data){return [_c('span',{attrs:{\"id\":`timestamp__${data.index}`}},[_vm._v(_vm._s(data.item.createdAt))]),_vm._v(\" \"),_c('b-tooltip',{attrs:{\"target\":`timestamp__${data.index}`}},[_vm._v(\"\\n                                                \"+_vm._s(data.item.dateTooltip)+\"\\n                                            \")])]}}])}),_vm._v(\" \"),(_vm.mnRewardsTotalRows > 0 && _vm.mnRewardsTotalRows > _vm.mnRewardsPerPage)?_c('b-pagination',{staticClass:\"XDC-pagination\",attrs:{\"total-rows\":_vm.mnRewardsTotalRows,\"per-page\":_vm.mnRewardsPerPage,\"align\":\"center\"},on:{\"change\":_vm.rewardPageChange},model:{value:(_vm.mnRewardsCurrentPage),callback:function ($$v) {_vm.mnRewardsCurrentPage=$$v},expression:\"mnRewardsCurrentPage\"}}):_vm._e()],1)])],1)],1)],1)])],1)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('i',{staticClass:\"tm-wallet XDC-header__icon\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"XDC-empty col-12\"},[_c('i',{staticClass:\"tm-notice XDC-empty__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-empty__description\"},[_vm._v(\"This is not a candidate\")])])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=9403e4c0&\"\nimport script from \"./List.vue?vue&type=script&lang=js&\"\nexport * from \"./List.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main-content\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-lg-4\"},[_c('b-card',{staticClass:\"XDC-card\"},[_c('h6',{staticClass:\"XDC-card__title\"},[_vm._v(\"MasterNode / Total Nodes\")]),_vm._v(\" \"),_c('p',{staticClass:\"XDC-card__text\"},[_vm._v(\"\\n                        \"+_vm._s(_vm.activeCandidates)+\"/\"+_vm._s(_vm.activeCandidates+_vm.totalProposedNodes)+\"\\n                    \")])])],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-lg-4\"},[_c('b-card',{staticClass:\"XDC-card XDC-card\"},[_c('h6',{staticClass:\"XDC-card__title\"},[_vm._v(\"Staked Amount\")]),_vm._v(\" \"),_c('p',{staticClass:\"XDC-card__text\"},[_vm._v(\"\\n                        \"+_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.toXDCNumber(_vm.chainConfig.XDCStakeAmount),2)))+\"\\n                    \")])])],1),_vm._v(\" \"),_c('div',{staticClass:\"col-md-6 col-lg-4\"},[_c('b-card',{staticClass:\"XDC-card XDC-card\"},[_c('h6',{staticClass:\"XDC-card__title\"},[_vm._v(\"Epoch / Block Number\")]),_vm._v(\" \"),_c('p',{staticClass:\"XDC-card__text\"},[_vm._v(\"\\n                        \"+_vm._s(Math.floor(_vm.chainConfig.blockNumber / _vm.chainConfig.epoch) + 1)+\" / \"+_vm._s(_vm.chainConfig.blockNumber))])])],1)])]),_vm._v(\" \"),(_vm.candidates.length <= 0)?_c('div',{staticClass:\"XDC-loading\"}):_c('div',{staticClass:\"container\"},[_c('b-card',{staticClass:\"XDC-card xdc-p-none\"},[_c('div',{staticClass:\"XDC-custom-tab p-4\"},[_c('ul',[(_vm.activeCandidates !== 0)?_c('li',{class:_vm.currentTable === 'masternodes' ? 'active' : '',on:{\"click\":function($event){return _vm.changeTable('masternodes')}}},[_vm._v(\"Masternodes (\"+_vm._s(_vm.activeCandidates)+\")\")]):_vm._e(),_vm._v(\" \"),(_vm.slashedMN !== 0)?_c('li',{class:_vm.currentTable === 'slashed' ? 'active' : '',on:{\"click\":function($event){return _vm.changeTable('slashed')}}},[_vm._v(\"Slashed MNs (\"+_vm._s(_vm.slashedMN)+\")\")]):_vm._e(),_vm._v(\" \"),(_vm.totalProposedNodes !== 0)?_c('li',{class:_vm.currentTable === 'proposed' ? 'active' : '',on:{\"click\":function($event){return _vm.changeTable('proposed')}}},[_vm._v(\"Standby Nodes (\"+_vm._s(_vm.totalProposedNodes)+\")\")]):_vm._e(),_vm._v(\" \"),(_vm.resignedMN !== 0)?_c('li',{class:_vm.currentTable === 'resigned' ? 'active' : '',on:{\"click\":function($event){return _vm.changeTable('resigned')}}},[_vm._v(\"Resigned Nodes (\"+_vm._s(_vm.resignedMN)+\")\")]):_vm._e()])]),_vm._v(\" \"),(_vm.mobileCheck && _vm.totalRows > 0 && _vm.totalRows > _vm.perPage)?_c('b-pagination',{staticClass:\"XDC-pagination\",attrs:{\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"align\":\"center\"},on:{\"change\":_vm.pageChange},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}}):_vm._e(),_vm._v(\" \"),_c('b-table',{class:'XDC-table XDC-table--candidates ' + _vm.tableCssClass,attrs:{\"items\":_vm.candidates,\"fields\":_vm.fields,\"per-page\":_vm.perPage,\"empty-text\":\"There are no candidates to show\",\"stacked\":\"lg\"},on:{\"sort-changed\":_vm.sortingChange},scopedSlots:_vm._u([{key:\"address\",fn:function(data){return [_c('router-link',{attrs:{\"to\":'/candidate/' + data.item.address}},[_vm._v(\"\\n                        \"+_vm._s(_vm.truncate(data.item.address, 18))+\"\\n                    \")])]}},{key:\"name\",fn:function(data){return [_c('div',{staticClass:\"text-truncate\",attrs:{\"id\":`name_${data.index}`}},[_vm._v(\"\\n                        \"+_vm._s(data.item.name)+\"\\n                    \")]),_vm._v(\" \"),(data.item.name.length > 20)?_c('b-tooltip',{attrs:{\"target\":`name_${data.index}`}},[_vm._v(\"\\n                        \"+_vm._s(data.item.name)+\"\\n                    \")]):_vm._e()]}},{key:\"capacity\",fn:function(data){return [_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(data.item.cap, 2)))+\"\\n                \")]}},{key:\"latestSignedBlock\",fn:function(data){return [_c('div',[_c('span',{class:`float-left mr-2 ${(data.item.status !== 'STANDBY')\n                                ? ` XDC-status-dot XDC-status-dot--${_vm.getColor(\n                            data.item.latestSignedBlock || '', _vm.currentBlock)}` : '' }`},[_vm._v(\"\\n                            \"+_vm._s(data.item.latestSignedBlock)+\"\\n                        \")])])]}},{key:\"status\",fn:function(data){return [_c('div',{staticClass:\"mt-2 mt-lg-0\"},[_c('span',{class:'XDC-chip '\n                                + (data.item.status === 'STANDBY' || data.item.status === 'MASTERNODE' ?\n                            'XDC-chip--primary' : 'XDC-chip--accent')},[_vm._v(\"\\n                            \"+_vm._s(data.item.status.toUpperCase())+\"\\n                        \")])])]}}])}),_vm._v(\" \"),(_vm.totalRows > 0 && _vm.totalRows > _vm.perPage)?_c('b-pagination',{staticClass:\"XDC-pagination\",attrs:{\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"align\":\"center\"},on:{\"change\":_vm.pageChange},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}}):_vm._e()],1)],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"col-12\"},[_c('h4',{staticClass:\"h4 text-center mb-4\"},[_vm._v(\"XDC Staking\")])])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NumberInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NumberInput.vue?vue&type=script&lang=js&\"","<template>\n    <div class=\"number-input\">\n        <input\n            :disabled=\"inputDisabled\"\n            :min=\"min\"\n            :max=\"max\"\n            :step=\"step\"\n            v-model=\"currentValue\"\n            type=\"text\"\n            class=\"form-control\"\n            @blur=\"blur\"\n            @keydown.esc=\"blur\"\n            @keydown.enter=\"blur\"\n            @keydown.up.prevent=\"increment\"\n            @keydown.down.prevent=\"decrement\">\n        <button\n            :disabled=\"decrementDisabled\"\n            class=\"decrement-button\"\n            type=\"button\"\n            @click=\"decrement\">−</button>\n        <button\n            :disabled=\"incrementDisabled\"\n            class=\"increment-button\"\n            type=\"button\"\n            @click=\"increment\">+</button>\n    </div>\n</template>\n<script>\nimport BigNumber from 'bignumber.js'\nexport default {\n    props: {\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        max: {\n            type: Number,\n            default: Infinity\n        },\n        min: {\n            type: Number,\n            default: -Infinity\n        },\n        value: {\n            type: String,\n            required: true\n        },\n        step: {\n            type: Number,\n            default: 1\n        }\n    },\n\n    data () {\n        return {\n            currentValue: (this.value) ? this.value.replace(/,/g, '') : '',\n            decrementDisabled: false,\n            incrementDisabled: false,\n            inputDisabled: false\n        }\n    },\n\n    watch: {\n        value (val) {\n            this.currentValue = val\n        }\n    },\n\n    mounted () {\n        if (new BigNumber(this.value) === this.min) {\n            this.decrementDisabled = true\n        }\n    },\n\n    methods: {\n        increment () {\n            if (this.disabled || this.incrementDisabled) {\n                return\n            }\n\n            let val = new BigNumber(this.currentValue)\n            let newVal = val.plus(this.step)\n            this.decrementDisabled = false\n\n            this._updateValue(newVal.toString())\n        },\n        decrement () {\n            if (this.disabled || this.decrementDisabled) {\n                return\n            }\n\n            let val = new BigNumber(this.currentValue)\n            let newVal = val.minus(this.step)\n            this.incrementDisabled = false\n\n            this._updateValue(newVal.toString())\n        },\n        blur () {\n            this.$emit('input', this.currentValue)\n        },\n        _updateValue (newVal) {\n            const oldVal = new BigNumber(this.currentValue)\n\n            if (oldVal === newVal) {\n                return\n            }\n            if (newVal <= this.min) {\n                newVal = this.min\n                this.decrementDisabled = true\n            }\n            if (newVal >= this.max) {\n                newVal = this.max\n                this.incrementDisabled = true\n            }\n            this.currentValue = newVal.toString()\n            this.$emit('input', this.currentValue)\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./NumberInput.vue?vue&type=template&id=c89a03b2&\"\nimport script from \"./NumberInput.vue?vue&type=script&lang=js&\"\nexport * from \"./NumberInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"number-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.currentValue),expression:\"currentValue\"}],staticClass:\"form-control\",attrs:{\"disabled\":_vm.inputDisabled,\"min\":_vm.min,\"max\":_vm.max,\"step\":_vm.step,\"type\":\"text\"},domProps:{\"value\":(_vm.currentValue)},on:{\"blur\":_vm.blur,\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"]))return null;return _vm.blur.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.blur.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"]))return null;$event.preventDefault();return _vm.increment.apply(null, arguments)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"]))return null;$event.preventDefault();return _vm.decrement.apply(null, arguments)}],\"input\":function($event){if($event.target.composing)return;_vm.currentValue=$event.target.value}}}),_vm._v(\" \"),_c('button',{staticClass:\"decrement-button\",attrs:{\"disabled\":_vm.decrementDisabled,\"type\":\"button\"},on:{\"click\":_vm.decrement}},[_vm._v(\"−\")]),_vm._v(\" \"),_c('button',{staticClass:\"increment-button\",attrs:{\"disabled\":_vm.incrementDisabled,\"type\":\"button\"},on:{\"click\":_vm.increment}},[_vm._v(\"+\")])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Apply.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Apply.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Apply.vue?vue&type=template&id=1dbc1f80&\"\nimport script from \"./Apply.vue?vue&type=script&lang=js&\"\nexport * from \"./Apply.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"main-content container\"},[_c('b-row',{staticClass:\"m-0\"},[_c('div',{staticClass:\"col-12 col-md-6 col-lg-6\"},[_c('b-card',{class:'XDC-card XDC-card--lighter'\n                    + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"h4 color-black XDC-card__title\"},[_c('strong',[_vm._v(\"Become a MasterNode\")])]),_vm._v(\" \"),(!_vm.KYC.status)?[_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('div',{staticClass:\"XDC-list__text\"},[_c('p',{staticClass:\"graf graf--p graf-after--figure\"},[_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_vm._v(\" Become a MasterNode \")]),_vm._v(\"and upload the \"),_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_vm._v(\"Know Your Community (KYC) certificate\")]),_vm._v(\" in PDF format.\")]),_vm._v(\" \"),_c('p',{staticClass:\"graf graf--p graf-after--p\"},[_vm._v(\"This KYC certificate needs to be signed by one of the following personnel:\")]),_vm._v(\" \"),_c('ul',{staticClass:\"postList\"},[_c('li',[_vm._v(\"Company Secretary,\")]),_c('li',[_vm._v(\"A Notary Public,\")]),_c('li',[_vm._v(\"Chartered Secretary,\")]),_c('li',[_vm._v(\"Consulate, or\")]),_c('li',[_vm._v(\"A lawyer with Seal.\")])]),_vm._v(\" \"),_c('p',{staticClass:\"graf graf--p graf-after--li\"},[_vm._v(\"For \"),_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_vm._v(\"INDIVIDUAL format\")]),_vm._v(\", \"),_c('a',{attrs:{\"href\":\"https://docs.google.com/document/d/1Us9chjXEDYrDOpfuwWITxaQOSEYxYIpJpwWuYK0TyXY\"}},[_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_vm._v(\"click here\")])]),_vm._v(\".\")]),_vm._v(\" \"),_c('p',[_vm._v(\"For \"),_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_vm._v(\"ORGANIZATION format\")]),_vm._v(\", \"),_c('a',{attrs:{\"href\":\"https://docs.google.com/document/d/1eyjFp3DXhrpLscngELocmXFwJ_Y8H9si6n8Z2SLADhg\"}},[_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_vm._v(\"click here\")])]),_vm._v(\".\")]),_vm._v(\" \"),_c('p',[_c('em',{staticClass:\"markup--em markup--p-em\"},[_vm._v(\"Note: It’s mandatory to upload the certificate in a \")]),_c('strong',{staticClass:\"markup--strong markup--p-strong\"},[_c('em',{staticClass:\"markup--em markup--p-em\"},[_vm._v(\"PDF format\")])]),_c('em',{staticClass:\"markup--em markup--p-em\"},[_vm._v(\".\")])])])])])]:[_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC XDC-list__icon\"}),_vm._v(\" \"),_c('span',{staticClass:\"XDC-list__text\"},[_vm._v(\"You have to deposit at least 10,000,000 XDC\")])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-lock XDC-list__icon\"}),_vm._v(\" \"),_c('span',{staticClass:\"XDC-list__text\"},[_vm._v(\"Your deposit will be locked\")])])]),_vm._v(\" \"),_c('b-form',{staticClass:\"XDC-form XDC-form--apply\",attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate()}}},[_c('b-form-group',{attrs:{\"description\":`How much XDC do you want to deposit? TX fee: ${_vm.txFee} XDC`,\"label\":\"Stake\",\"label-for\":\"apply-value\"}},[_c('b-input-group',[_c('p',{staticClass:\"form-control\"},[_vm._v(_vm._s(_vm.applyValue))]),_vm._v(\" \"),_c('b-input-group-append',[_c('i',{staticClass:\"tm-XDC\"})]),_vm._v(\" \"),(_vm.$v.applyValue.$dirty && !_vm.$v.applyValue.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field\")]):(_vm.$v.applyValue.$dirty && !_vm.$v.applyValue.minValue)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Must be greater than 10,000,000 XDC\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('b-form-group',{attrs:{\"label\":\"Coinbase Address\",\"label-for\":\"coinbase\",\"description\":\"What is your node coinbase address?\"}},[_c('b-form-input',{class:_vm.getValidationClass('coinbase'),attrs:{\"name\":\"coinbase\",\"autocomplete\":\"off\",\"type\":\"text\"},model:{value:(_vm.coinbase),callback:function ($$v) {_vm.coinbase=$$v},expression:\"coinbase\"}}),_vm._v(\" \"),(_vm.$v.coinbase.$dirty && !_vm.$v.coinbase.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field\")]):(!_vm.$v.coinbase.coinbaseAddress)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Wrong coinbase address format\")]):(_vm.coinbaseError)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"\\n                                    The masternode candidate account should be different from the depositing account.\\n                                \")]):(_vm.candidateError)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"\\n                                    This coinbase address is already a candidate\\n                                \")]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":function($event){return _vm.$router.go(-1)}}},[_vm._v(\"Cancel\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Apply\")])],1)],1)]],2)],1),_vm._v(\" \"),(!_vm.KYC.status)?_c('div',{staticClass:\"col-12 col-md-6 col-lg-6\"},[_c('b-card',{class:'XDC-card XDC-card--lighter'\n                    + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"h4 color-black XDC-card__title\"},[_c('strong',[_vm._v(\"Upload KYC Document\")])]),_vm._v(\" \"),[_c('b-form',{staticClass:\"XDC-form XDC-form--apply\",attrs:{\"novalidate\":\"\",\"enctype\":\"multipart/form-data\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.uploadKYC()}}},[_c('b-form-file',{staticClass:\"z-index-0 XDC-upload\",attrs:{\"state\":Boolean(_vm.KYC.file),\"accept\":\"application/pdf\",\"placeholder\":\"Choose a file...\",\"required\":\"\"},model:{value:(_vm.KYC.file),callback:function ($$v) {_vm.$set(_vm.KYC, \"file\", $$v)},expression:\"KYC.file\"}}),_vm._v(\" \"),(_vm.KYC && !_vm.KYC.file)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field (only *.pdf allowed)\")]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[_c('b-button',{attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Upload KYC\")])],1)],1)]],2)],1):_vm._e()]),_vm._v(\" \"),_c('b-modal',{ref:\"applyModal\",staticClass:\"XDC-modal\",attrs:{\"centered\":\"\",\"title\":\"Scan this QR code by xdcwallet\",\"hide-footer\":\"\"}},[(_vm.provider === 'xdcwallet')?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"value\":_vm.qrCode,\"options\":{size: 200 }}})],1):_vm._e(),_vm._v(\" \"),_c('b-btn',{staticClass:\"mt-3\",attrs:{\"variant\":\"outline-danger\",\"block\":\"\"},on:{\"click\":_vm.hideModal}},[_vm._v(\"Close\")])],1)],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"XDC-header\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"XDC-header-block\"},[_c('div',{staticClass:\"XDC-header-block-left\"},[_c('div',[_c('i',{staticClass:\"tm-wallet XDC-header__icon\"})]),_vm._v(\" \"),_c('div',[_c('h4',{staticClass:\"h4 color-black\"},[_vm._v(\"Become a MasterNode\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                            Become a MasterNode and upload the Know Your Community (KYC) certificate in PDF format.\\n                        \")])])])])])])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Resign.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Resign.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Resign.vue?vue&type=template&id=2619d026&\"\nimport script from \"./Resign.vue?vue&type=script&lang=js&\"\nexport * from \"./Resign.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"container\"},[_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--animated p-0'\n                + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Resign\")]),_vm._v(\" \"),_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-wallet XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(_vm._s(_vm.coinbase))]),_vm._v(\" \"),_c('span',[_vm._v(\"Coinbase Address\")])])])]),_vm._v(\" \"),_c('b-card-footer',{staticClass:\"text-right\"},[(_vm.owner !== _vm.account)?_c('p',[_c('i',{staticClass:\"tm-notice\"}),_vm._v(\"\\n                        You are not an owner of this candidate\\n                    \")]):_vm._e(),_vm._v(\" \"),(_vm.owner === _vm.account)?_c('b-button',{directives:[{name:\"b-modal\",rawName:\"v-b-modal.confirmResignModal\",modifiers:{\"confirmResignModal\":true}}],attrs:{\"disabled\":_vm.loading || _vm.owner !== _vm.account,\"variant\":\"secondary\"},on:{\"click\":function($event){_vm.resignActive = true;}}},[_vm._v(\"Resign\")]):_vm._e()],1)],1)],1)],1),_vm._v(\" \"),_c('b-modal',{staticClass:\"XDC-modal\",attrs:{\"id\":\"confirmResignModal\",\"centered\":\"\",\"title\":\"Do you want to resign?\",\"ok-title\":\"Yes\",\"cancel-title\":\"No\"},on:{\"ok\":function($event){return _vm.resignValidation()}}},[_c('p',[_vm._v(\"If you resign, you will be able to withdraw all your deposit after around 30 days.\")])]),_vm._v(\" \"),_c('b-modal',{ref:\"resignModal\",staticClass:\"XDC-modal\",attrs:{\"centered\":\"\",\"title\":\"Scan this QR code by XDCWallet\",\"hide-footer\":\"\"}},[(_vm.provider === 'XDCwallet')?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"value\":_vm.qrCode,\"options\":{size: 200 }}})],1):_vm._e(),_vm._v(\" \"),_c('b-btn',{staticClass:\"mt-3\",attrs:{\"variant\":\"outline-danger\",\"block\":\"\"},on:{\"click\":_vm.hideModal}},[_vm._v(\"Close\")])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Withdraw.vue?vue&type=template&id=26d36e9c&\"\nimport script from \"./Withdraw.vue?vue&type=script&lang=js&\"\nexport * from \"./Withdraw.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"container\"},[_c('div',[_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--animated p-0'\n                    + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Withdrawal Confirmation\")]),_vm._v(\" \"),_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-wallet XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(_vm._s(_vm.coinbase))]),_vm._v(\" \"),_c('span',[_vm._v(\"Coinbase Address\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC2 XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.capacity))))]),_vm._v(\" \"),_c('span',[_vm._v(\"Capacity\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC2 XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.blockNumber))]),_vm._v(\" \"),_c('span',[_vm._v(\"Block Number\")])])])]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('div',{staticClass:\"wrapper\"},[_c('div',[_c('div',{staticClass:\"pull-right\",staticStyle:{\"margin-right\":\"-7px\",\"float\":\"right\"}})]),_vm._v(\" \"),_c('div',[(_vm.provider === 'XDCwallet')?_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"10px\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"value\":_vm.qrCode,\"options\":{size: 250 }}})],1):_vm._e()])])]),_vm._v(\" \"),_c('b-card-footer',{staticClass:\"mt-3 text-right\"},[_c('b-button',{attrs:{\"disabled\":_vm.loading,\"to\":'/setting',\"variant\":\"secondary\"}},[_vm._v(\"Back\")]),_vm._v(\" \"),(_vm.provider !== 'XDCwallet')?_c('button',{staticClass:\"btn btn-primary\",attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.withdraw(_vm.blockNumber, _vm.index)}}},[_vm._v(\"Withdraw\")]):_vm._e()],1)],1)],1)],1)]),_vm._v(\" \"),_c('b-modal',{staticClass:\"XDC-modal\",attrs:{\"id\":\"resignModal\",\"centered\":\"\",\"title\":\"Do you want to withdraw?\",\"ok-title\":\"Yes\",\"cancel-title\":\"No\"},on:{\"ok\":function($event){return _vm.withdraw()}}},[_c('p',[_vm._v(\"If you withdraw, you will receive all your deposit.\")])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Update.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Update.vue?vue&type=template&id=18397a66&\"\nimport script from \"./Update.vue?vue&type=script&lang=js&\"\nexport * from \"./Update.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main-content container\"},[(_vm.step === 1)?_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n            + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Update Candidate Information\")]),_vm._v(\" \"),_c('b-form',{staticClass:\"XDC-form XDC-form--vote\",attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate()}}},[_c('b-form-group',{attrs:{\"label\":\"Name\",\"label-for\":\"name-value\"}},[_c('b-form-input',{attrs:{\"name\":\"name-value\"},model:{value:(_vm.name),callback:function ($$v) {_vm.name=$$v},expression:\"name\"}}),_vm._v(\" \"),(_vm.$v.name.$dirty && !_vm.$v.name.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Name is required\")]):_vm._e(),_vm._v(\" \"),(_vm.$v.name.$dirty && (!_vm.$v.name.minLength || !_vm.$v.name.maxLength))?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Name must be 3 - 30 chars long\")]):_vm._e()],1),_vm._v(\" \"),_c('b-form-group',{attrs:{\"label\":\"Hardware\",\"label-for\":\"hardware-value\"}},[_c('b-form-input',{attrs:{\"name\":\"hardware-value\"},model:{value:(_vm.hardware),callback:function ($$v) {_vm.hardware=$$v},expression:\"hardware\"}}),_vm._v(\" \"),(_vm.$v.hardware.$dirty && (!_vm.$v.hardware.minLength || !_vm.$v.hardware.maxLength))?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Hardware must be 3 - 30 chars long\")]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('b-form-group',{staticClass:\"col-md-6\",attrs:{\"label\":\"Data Center Name\",\"label-for\":\"dcName-value\"}},[_c('b-form-input',{attrs:{\"name\":\"dcName-value\"},model:{value:(_vm.dcName),callback:function ($$v) {_vm.dcName=$$v},expression:\"dcName\"}}),_vm._v(\" \"),(_vm.$v.dcName.$dirty && (!_vm.$v.dcName.minLength || !_vm.$v.dcName.maxLength))?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Data Center Name must be 2 - 30 chars long\")]):_vm._e()],1),_vm._v(\" \"),_c('b-form-group',{staticClass:\"col-md-6\",attrs:{\"label\":\"Data Center Location\",\"label-for\":\"dcLocation-value\"}},[_c('b-form-input',{attrs:{\"name\":\"dcLocation-value\"},model:{value:(_vm.dcLocation),callback:function ($$v) {_vm.dcLocation=$$v},expression:\"dcLocation\"}}),_vm._v(\" \"),(_vm.$v.dcLocation.$dirty && (!_vm.$v.dcLocation.minLength || !_vm.$v.dcLocation.maxLength))?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Data Canter Location must be 2 - 30 chars long\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"row\"},[_c('b-form-group',{staticClass:\"col-md-6\",attrs:{\"label\":\"Website\",\"label-for\":\"website-value\"}},[_c('b-form-input',{attrs:{\"name\":\"website-value\",\"placeholder\":\"https://example.com\"},model:{value:(_vm.website),callback:function ($$v) {_vm.website=$$v},expression:\"website\"}}),_vm._v(\" \"),(_vm.$v.website.$dirty && !_vm.$v.website.url)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Not a url\")]):_vm._e()],1),_vm._v(\" \"),_c('b-form-group',{staticClass:\"col-md-6\",attrs:{\"label\":\"Telegram\",\"label-for\":\"telegram-value\"}},[_c('b-form-input',{attrs:{\"name\":\"telegram-value\",\"placeholder\":\"https://t.me/example\"},model:{value:(_vm.telegram),callback:function ($$v) {_vm.telegram=$$v},expression:\"telegram\"}}),_vm._v(\" \"),(_vm.$v.telegram.$dirty && !_vm.$v.telegram.url)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Not a url\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":function($event){return _vm.$router.go(-1)}}},[_vm._v(\"Cancel\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Next\")])],1)],1)],1)],1):_vm._e(),_vm._v(\" \"),(_vm.step === 2)?_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n            + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Confirmation\")]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"wrapper\"},[_c('div',{attrs:{\"id\":\"one\"}},[_c('div',[_c('textarea',{staticClass:\"sign-message\",staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"text\",\"readonly\":\"\",\"cols\":\"100\",\"rows\":\"6\"},domProps:{\"value\":_vm.candidateNewInfor}})])]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[(_vm.provider === 'XDCwallet')?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"value\":_vm.qrCode,\"options\":{size: 200 },\"tag\":\"img\"}}),_vm._v(\" \"),_c('div',{staticClass:\"mt-1\"},[_c('span',{staticClass:\"text-danger\"},[_c('b',[_vm._v(_vm._s(_vm.signHashError))])])])],1):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\",staticStyle:{\"margin-top\":\"10px\"}},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":_vm.backStep}},[_vm._v(\"Back\")]),_vm._v(\" \"),(_vm.provider !== 'XDCwallet')?_c('button',{staticClass:\"btn btn-primary\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.update}},[_vm._v(\"Submit\")]):_vm._e()],1)])])],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div\n            class=\"XDC-header\">\n            <div class=\"container\">\n                <div class=\"XDC-header-block\">\n                    <div class=\"XDC-header-block-left\">\n                        <div>\n                            <i class=\"tm-wallet XDC-header__icon\" />\n                        </div>\n                        <div>\n                            <h4 class=\"h4 color-black\">Voter</h4>\n                            <p>{{ voter }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"main-content container\">\n            <b-row\n                class=\"m-0\">\n                <div\n                    class=\"col-12 col-md-4 col-lg-4\">\n                    <b-card\n                        :class=\"'XDC-card XDC-card--lighter XDC-card--candidate'\n                        + (loading ? ' XDC-loading' : '')\">\n                        <div class=\"XDC-detail\">\n                            <div\n                                class=\"XDC-detail-section\">\n                                <div class=\"XDC-detail-label\">Voter</div>\n                                <div class=\"XDC-detail-value-small\">{{ voter }}</div>\n                            </div>\n                            <div\n                                v-if=\"isReady\"\n                                class=\"XDC-detail-section\">\n                                <div class=\"XDC-detail-label\">Balance</div>\n                                <div class=\"XDC-detail-value-big\">{{ formatCurrencySymbol(formatBigNumber(balance, 3)) }}</div>\n                            </div>\n                            <div\n                                class=\"XDC-detail-section\">\n                                <div class=\"XDC-detail-label\">Total voted</div>\n                                <div class=\"XDC-detail-value-big\">{{ formatCurrencySymbol(formatNumber(totalVoted)) }}</div>\n                            </div>\n                        </div>\n\n                        <!--<div class=\"section section&#45;&#45;candidate\">\n                            <div class=\"section-title\">\n                                <span>\n                                    {{ (candidate.rank) ? `${candidate.rank}. ${candidate.name}` : candidate.name }}\n                                </span>\n\n                                <router-link\n                                    v-if=\"account === candidate.owner\"\n                                    :to=\"'/candidate/' + candidate.address + '/update'\"\n                                    class=\"edit-link\">\n                                    <i class=\"tm-edit ml-2 mr-0\" />\n                                </router-link>\n                                <span class=\"text-truncate section-title__description\">{{ candidate.address }}</span>\n                                <ul class=\"list-inline social-links\">\n                                    <li\n                                        v-for=\"(value, key) in candidate.socials\"\n                                        :key=\"key\"\n                                        class=\"list-inline-item social-links__item\">\n                                        <a\n                                            v-if=\"value !== ''\"\n                                            :href=\"value\"\n                                            target=\"_blank\"\n                                            class=\"social-links__link\">\n                                            <i :class=\"'social-links__icon tm-' + key\" />\n                                        </a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class=\"row m-md-0\">\n                                <div\n                                    class=\"col-12 XDC-info text-truncate\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">Owner</span>\n                                    </p>\n                                    <p class=\"XDC-info__description color-cyan\">\n                                        <router-link\n                                            :to=\"'/voter/' + candidate.owner\"\n                                            class=\"text-truncate\">\n                                            {{ candidate.owner }}\n                                        </router-link>\n                                    </p>\n                                </div>\n                                <div\n                                    v-if=\"candidate.status !== 'STANDBY'\"\n                                    class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">Latest Signed Block</span>\n                                    </p>\n                                    <p class=\"XDC-info__description\">\n                                        <span\n                                            :class=\"`float-left mr-2 XDC-status-dot&#45;&#45;${getColor(\n                                            candidate.latestSignedBlock || 0, currentBlock)}`\">\n                                            {{ formatNumber(candidate.latestSignedBlock) }}\n                                        </span>\n                                    </p>\n                                </div>\n                                <div class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">Capacity</span>\n                                    </p>\n                                    <p\n                                        id=\"XDC-info__description&#45;&#45;cap\"\n                                        class=\"XDC-info__description\">\n                                        {{ formatCurrencySymbol(formatBigNumber(candidate.cap, 3)) }}\n                                        <b-tooltip\n                                            v-if=\"checkLongNumber(candidate.cap)\"\n                                            ref=\"tooltip\"\n                                            target=\"XDC-info__description&#45;&#45;cap\">\n                                            {{ formatCurrencySymbol(formatBigNumber(candidate.cap, 6)) }}\n                                        </b-tooltip>\n                                    </p>\n                                </div>\n                                <div\n                                    v-if=\"isReady\"\n                                    class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <i class=\"tm-arrow-up XDC-info__icon\" />\n                                        <span class=\"XDC-info__text\">You voted</span>\n                                    </p>\n                                    <p\n                                        id=\"XDC-info__description&#45;&#45;you-voted\"\n                                        class=\"XDC-info__description\">\n                                        {{ formatCurrencySymbol(formatNumber(candidate.voted)) }}\n                                        <b-tooltip\n                                            v-if=\"checkLongNumber(candidate.voted)\"\n                                            ref=\"tooltip\"\n                                            target=\"XDC-info__description&#45;&#45;you-voted\">\n                                            {{ formatCurrencySymbol(formatBigNumber(candidate.voted, 6)) }}\n                                        </b-tooltip>\n                                    </p>\n                                </div>\n                                <div\n                                    class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span\n                                            class=\"XDC-info__text\">\n                                            Status\n                                        </span>\n                                    </p>\n                                    <p\n                                        :class=\"{ 'color-cyan': candidate.status === 'MASTERNODE',\n                                                  'color-pink': candidate.status === 'SLASHED',\n                                                  'color-pink': candidate.status === 'RESIGNED' }\"\n                                        class=\"XDC-info__description\">\n                                        {{ candidate.status }}\n                                    </p>\n                                </div>\n                                <div class=\"col-12 order-md-1 order-lg-0 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">Hardware</span>\n                                    </p>\n                                    <p class=\"XDC-info__description\">\n                                        {{ candidate.hardwareInfo }}\n                                    </p>\n                                </div>\n                                <div\n                                    v-for=\"(value, key) in candidate.dataCenterInfo\"\n                                    :key=\"key\"\n                                    class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">{{ key }}</span>\n                                    </p>\n                                    <p class=\"XDC-info__description\">\n                                        {{ value }}\n                                    </p>\n                                </div>\n                                <div class=\"col-12 XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">Est. Staking ROI</span>\n                                    </p>\n                                    <p\n                                        id=\"XDC-info__description&#45;&#45;balance\"\n                                        class=\"XDC-info__description\">\n                                        {{ voterROI ? voterROI + '%' : '-&#45;&#45;' }}\n                                    </p>\n                                </div>\n                                <div class=\"col-12   XDC-info\">\n                                    <p class=\"XDC-info__title\">\n                                        <span class=\"XDC-info__text\">Est. Owner ROI</span>\n                                    </p>\n                                    <p\n                                        id=\"XDC-info__description&#45;&#45;balance\"\n                                        class=\"XDC-info__description\">\n                                        {{ mnROI ? mnROI + '%' : '-&#45;&#45;' }}\n                                    </p>\n                                </div>\n                            </div>\n                            <div\n                                class=\"buttons text-right\">\n                                <b-button\n                                    v-if=\"candidate.owner === account && candidate.status !== 'RESIGNED'\"\n                                    :to=\"`/resign/${candidate.address}`\"\n                                    variant=\"secondary\">Resign</b-button>\n                                <b-button\n                                    v-if=\"candidate.voted > 0\"\n                                    :to=\"`/unvoting/${candidate.address}`\"\n                                    variant=\"secondary\">Unvote</b-button>\n                                <b-button\n                                    v-if=\"candidate.status !== 'RESIGNED' && isXDCnet\"\n                                    :to=\"`/voting/${candidate.address}`\"\n                                    variant=\"primary\">Vote</b-button>\n                            </div>\n                        </div>-->\n                    </b-card>\n                </div>\n                <div\n                    class=\"col-12 col-md-8 col-lg-8\">\n                    <b-card\n                        :class=\"'XDC-card XDC-card--lighter'\n                        + (loading ? ' XDC-loading' : '')\">\n                        <b-tabs\n                            pills\n                            card\n                            class=\"XDC-tab\">\n                            <b-tab\n                                title=\"Candidates\"\n                                active>\n                                <div\n                                    :class=\"'section section--candiates'\n                                    + (loading ? ' XDC-loading' : '')\">\n                                    <b-table\n                                        :items=\"candidates\"\n                                        :fields=\"candidateFields\"\n                                        :per-page=\"perPage\"\n                                        :sort-by.sync=\"sortBy\"\n                                        :sort-desc.sync=\"sortDesc\"\n                                        :show-empty=\"true\"\n                                        :class=\"`XDC-table XDC-table--voted${loading ? ' loading' : ''}`\"\n                                        empty-text=\"There are no candidates to show\"\n                                        stacked=\"md\"\n                                        @sort-changed=\"sortingChangeCandidate\" >\n\n                                        <template\n                                            slot=\"index\"\n                                            slot-scope=\"data\">{{ data.index + 1 }}\n                                        </template>\n\n                                        <template\n                                            slot=\"address\"\n                                            slot-scope=\"data\">\n                                            <router-link\n                                                :to=\"'/candidate/' + data.item.address\"\n                                                class=\"text-truncate\">\n                                                {{ data.item.address }}\n                                            </router-link>\n                                        </template>\n\n                                        <template\n                                            slot=\"capacity\"\n                                            slot-scope=\"data\">\n                                            {{ isNaN(data.item.capacity) ? '---' : formatCurrencySymbol(data.item.capacity) }}\n                                            <span\n                                                v-if=\"data.item.owner == voter\"\n                                                :id=\"`mnowner__${data.index}`\">*</span>\n                                            <b-tooltip :target=\"`mnowner__${data.index}`\">\n                                                This voter owns this node\n                                            </b-tooltip>\n                                        </template>\n\n                                        <template\n                                            slot=\"totalCapacity\"\n                                            slot-scope=\"data\">{{ formatCurrencySymbol(formatBigNumber(data.item.totalCapacity, 3)) }}\n                                        </template>\n                                    </b-table>\n\n                                    <b-pagination\n                                        v-if=\"totalRows > 0 && totalRows > perPage\"\n                                        :total-rows=\"totalRows\"\n                                        :per-page=\"perPage\"\n                                        v-model=\"currentPage\"\n                                        align=\"center\"\n                                        class=\"XDC-pagination\"\n                                        @change=\"candidatePageChange\" />\n                                </div>\n                            </b-tab>\n                            <!-- <b-tab\n                                title=\"Voter Rewards\">\n                                <div\n                                    :class=\"'container section section--voterrewards'\n                                    + (rewardLoading ? ' XDC-loading' : '')\">\n                                    <b-table\n                                        :items=\"voterRewards\"\n                                        :fields=\"voterRewardsFields\"\n                                        :sort-by.sync=\"voterRewardsSortBy\"\n                                        :sort-desc.sync=\"voterRewardsSortDesc\"\n                                        :per-page=\"voterRewardsPerPage\"\n                                        :show-empty=\"true\"\n                                        :class=\"`XDC-table XDC-table--voterrewards${rewardLoading ? ' loading' : ''}`\"\n                                        empty-text=\"There are no rewards to show\"\n                                        stacked=\"md\" >\n\n                                        <template\n                                            slot=\"id\"\n                                            slot-scope=\"data\">{{ data.index + 1 }}\n                                        </template>\n\n                                        <template\n                                            slot=\"checkpoint\"\n                                            slot-scope=\"data\">{{ data.item.checkpoint }}\n                                        </template>\n\n                                        <template\n                                            slot=\"reward\"\n                                            slot-scope=\"data\">\n                                            {{ formatCurrencySymbol(formatNumber(data.item.reward)) }}\n                                        </template>\n\n                                        <template\n                                            slot=\"candidateName\"\n                                            slot-scope=\"data\">\n                                            <router-link\n                                                :to=\"'/candidate/' + data.item.candidate\"\n                                                class=\"text-truncate\">\n                                                {{ data.item.candidateName }}\n                                            </router-link>\n                                        </template>\n\n                                        <template\n                                            slot=\"createdAt\"\n                                            slot-scope=\"data\">\n                                            <span :id=\"`timestamp__${data.index}`\">{{ data.item.createdAt }}</span>\n                                            <b-tooltip :target=\"`timestamp__${data.index}`\">\n                                                {{ data.item.dateTooltip }}\n                                            </b-tooltip>\n                                        </template>\n\n                                    </b-table>\n\n                                    <b-pagination\n                                        v-if=\"voterRewardsTotalRows > 0 && voterRewardsTotalRows > voterRewardsPerPage\"\n                                        :total-rows=\"voterRewardsTotalRows\"\n                                        :per-page=\"voterRewardsPerPage\"\n                                        v-model=\"voterRewardsCurrentPage\"\n                                        align=\"center\"\n                                        class=\"XDC-pagination\"\n                                        @change=\"rewardPageChange\" />\n                                </div>\n                            </b-tab> -->\n                            <b-tab\n                                title=\"Transactions\">\n                                <div\n                                    :class=\"'container section section--txs'\n                                    + (txLoading ? ' XDC-loading' : '')\">\n                                    <b-table\n                                        :items=\"transactions\"\n                                        :fields=\"txFields\"\n                                        :per-page=\"txPerPage\"\n                                        :show-empty=\"true\"\n                                        :class=\"`XDC-table XDC-table--transactions-voter${txLoading ? ' loading' : ''}`\"\n                                        empty-text=\"There are no transactions to show\"\n                                        stacked=\"md\"\n                                        @sort-changed=\"sortingChangeTxes\" >\n\n                                        <template\n                                            slot=\"id\"\n                                            slot-scope=\"data\">{{ data.item.id }}\n                                        </template>\n\n                                        <template\n                                            slot=\"candidate\"\n                                            slot-scope=\"data\">\n                                            <router-link\n                                                :to=\"'/candidate/' + data.item.candidate\">\n                                                {{ truncate(data.item.candidate, 20) }}\n                                            </router-link>\n                                        </template>\n\n                                        <template\n                                            slot=\"event\"\n                                            slot-scope=\"data\">\n                                            <span :class=\"'fw-600 ' + getEventClass(data.item.event)\">{{ data.item.event }}</span>\n                                        </template>\n\n                                        <template\n                                            slot=\"capacity\"\n                                            slot-scope=\"data\">\n                                            {{ isNaN(data.item.cap) ? '---' : formatCurrencySymbol(data.item.cap) }}\n                                        </template>\n\n                                        <template\n                                            slot=\"candidateCap\"\n                                            slot-scope=\"data\">\n                                            {{ isNaN(data.item.candidateCap) ? '---' : formatCurrencySymbol(data.item.candidateCap) }}\n                                        </template>\n\n                                        <template\n                                            slot=\"tx\"\n                                            slot-scope=\"data\">\n                                            <a\n                                                v-b-tooltip.hover.right\n                                                :href=\"`${config.explorerUrl}/txs/${data.item.tx}`\"\n                                                title=\"View on XDCScan\"\n                                                target=\"_blank\">\n                                                <i class=\"tm-eye\" />\n                                                <span>View on XDCScan</span>\n                                            </a>\n                                        </template>\n                                    </b-table>\n\n                                    <b-pagination\n                                        v-if=\"txTotalRows > 0 && txTotalRows > txPerPage\"\n                                        :total-rows=\"txTotalRows\"\n                                        :per-page=\"txPerPage\"\n                                        v-model=\"txCurrentPage\"\n                                        align=\"center\"\n                                        class=\"XDC-pagination\"\n                                        @change=\"txPageChange\" />\n                                </div>\n                            </b-tab>\n                        </b-tabs>\n                    </b-card>\n                </div>\n                <!--<div class=\"section section&#45;&#45;voter\">\n                    <div class=\"row\">\n                        <div class=\"col-12\">\n                            <div class=\"section-title\">\n                                <i class=\"tm-arrow-up color-pink\" />\n                                <span>Voter</span>\n                                <span class=\"text-truncate section-title__description\">{{ voter }}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row row-grid\">\n                        <div\n                            v-if=\"isReady\"\n                            class=\"col-12 XDC-info\">\n                            <p class=\"XDC-info__title\">\n                                <i class=\"tm-dot XDC-info__icon\" />\n                                <span class=\"XDC-info__text\">Balance</span>\n                            </p>\n                            <p\n                                id=\"XDC-info__description&#45;&#45;balance\"\n                                class=\"XDC-info__description\">\n                                {{ formatCurrencySymbol(formatBigNumber(balance, 3)) }}\n                                <b-tooltip\n                                    v-if=\"checkLongNumber(balance)\"\n                                    ref=\"tooltip\"\n                                    target=\"XDC-info__description&#45;&#45;balance\">\n                                    {{ formatCurrencySymbol(formatBigNumber(balance, 6)) }}\n                                </b-tooltip>\n                            </p>\n                        </div>\n                        <div class=\"col-12 XDC-info\">\n                            <p class=\"XDC-info__title\">\n                                <i class=\"tm-dot XDC-info__icon\" />\n                                <span class=\"XDC-info__text\">Total voted</span>\n                            </p>\n                            <p\n                                id=\"XDC-info__description&#45;&#45;voted\"\n                                class=\"XDC-info__description\">\n                                {{ formatCurrencySymbol(formatNumber(totalVoted)) }}\n                                <b-tooltip\n                                    v-if=\"checkLongNumber(totalVoted)\"\n                                    ref=\"tooltip\"\n                                    target=\"XDC-info__description&#45;&#45;voted\">\n                                    {{ formatCurrencySymbol(formatBigNumber(totalVoted, 6)) }}\n                                </b-tooltip>\n                            </p>\n                        </div>\n                    </div>\n                </div>-->\n            </b-row>\n        </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport BigNumber from 'bignumber.js'\nimport moment from 'moment'\nimport store from 'store'\n\nexport default {\n    name: 'App',\n    metaInfo: {\n        title: 'Staker Details | XDC Network Governance DApp',\n        meta: [\n            { name: 'description', content: 'Staking history, Reward history, Masternode list, Transaction list. You can use mobile, desktop, hardware wallet - ledger nano, trezor to stake XDC Network' } // eslint-disable-line\n        ]\n    },\n    data () {\n        return {\n            candidateFields: [\n                {\n                    key: 'address',\n                    label: 'Address',\n                    sortable: false\n                },\n                {\n                    key: 'name',\n                    label: 'Name',\n                    sortable: false\n                },\n                {\n                    key: 'status',\n                    label: 'Status',\n                    sortable: false\n                },\n                {\n                    key: 'status',\n                    label: 'Status',\n                    sortable: false\n                },\n                {\n                    key: 'capacity',\n                    label: 'Voted Capacity',\n                    sortable: true\n                },\n                {\n                    key: 'totalCapacity',\n                    label: 'Capacity',\n                    sortable: true\n                }\n            ],\n            sortBy: 'capacity',\n            sortDesc: true,\n            isReady: !!this.web3,\n            voter: this.$route.params.address.toLowerCase(),\n            candidates: [],\n            balance: 0,\n            totalVoted: 0,\n            currentPage: 1,\n            perPage: 10,\n            totalRows: 0,\n            voterRewards: [],\n            voterRewardsFields: [\n                {\n                    key: 'epoch',\n                    label: 'Epoch',\n                    sortable: false\n                },\n                {\n                    key: 'candidateName',\n                    label: 'Masternode',\n                    sortable: false\n                },\n                {\n                    key: 'signNumber',\n                    label: 'Sign No.',\n                    sortable: false\n                },\n                {\n                    key: 'reward',\n                    label: 'Reward',\n                    sortable: false\n                },\n                {\n                    key: 'createdAt',\n                    label: 'Age',\n                    sortable: false\n                }\n            ],\n            voterRewardsCurrentPage: 1,\n            voterRewardsSortBy: 'epoch',\n            voterRewardsPerPage: 10,\n            voterRewardsSortDesc: true,\n            voterRewardsTotalRows: 0,\n            loading: false,\n            rewardLoading: false,\n            txLoading: false,\n            txFields: [\n                {\n                    key: 'candidate',\n                    label: 'Address',\n                    sortable: false\n                },\n                {\n                    key: 'name',\n                    label: 'Name',\n                    sortable: false\n                },\n                {\n                    key: 'event',\n                    label: 'Event',\n                    sortable: true\n                },\n                {\n                    key: 'capacity',\n                    label: 'Amount',\n                    sortable: true\n                },\n                {\n                    key: 'candidateCap',\n                    label: 'Capacity',\n                    sortable: true\n                },\n                {\n                    key: 'createdAt',\n                    label: 'Age',\n                    sortable: false\n                },\n                {\n                    key: 'tx',\n                    label: '',\n                    sortable: false\n                }\n            ],\n            transactions: [],\n            txCurrentPage: 1,\n            txPerPage: 10,\n            txTotalRows: 0,\n            txSortBy: 'createdAt',\n            txSortDesc: true\n        }\n    },\n    computed: { },\n    watch: {\n        $route (to, from) {\n            this.voter = to.params.address.toLowerCase()\n            this.getCandidates()\n            this.getTransactions()\n            this.getRewards()\n        }\n    },\n    update () {},\n    created: async function () {\n        let self = this\n        self.config = store.get('configMaster') || await self.appConfig()\n\n        self.getCandidates()\n        self.getRewards()\n        self.getTransactions()\n    },\n    methods: {\n        getEventClass (event) {\n            let clazz = ''\n            if (event === 'Unvote' || event === 'Resign') {\n                clazz = 'color-pink'\n            }\n\n            return clazz\n        },\n        async getCandidates () {\n            let self = this\n            try {\n                let voter = self.$route.params.address\n\n                self.loading = true\n                const params = {\n                    page: self.currentPage,\n                    limit: self.perPage,\n                    sortBy: self.sortBy,\n                    sortDesc: self.sortDesc\n                }\n                const candiatePromise = axios.get(`/api/voters/${voter}/candidates?${self.serializeQuery(params)}`)\n\n                // Candidate table\n                let candidates = await candiatePromise\n                let items = []\n\n                candidates.data.items.map(async (c) => {\n                    items.push({\n                        address: c.candidate,\n                        name: c.candidateName,\n                        status: c.status,\n                        owner: c.owner,\n                        capacity: new BigNumber(c.capacity).div(10 ** 18).toNumber(),\n                        totalCapacity: new BigNumber(c.totalCapacity).div(10 ** 18).toNumber()\n                    })\n                })\n\n                self.totalVoted = candidates.data.totalVoted\n                self.candidates = items\n\n                self.totalRows = candidates.data.total\n\n                if (typeof self.web3 !== 'undefined') {\n                    self.web3.eth.getBalance(voter, function (a, b) {\n                        self.balance = new BigNumber(b).div(10 ** 18).toNumber()\n                        if (a) {\n                            throw Error(a)\n                        }\n                    })\n                }\n\n                self.loading = false\n            } catch (e) {\n                self.loading = false\n                console.log(e)\n            }\n        },\n        async getTransactions () {\n            try {\n                const self = this\n                const voter = self.$route.params.address\n                self.txLoading = true\n                const params = {\n                    page: self.txCurrentPage,\n                    limit: self.txPerPage,\n                    sortBy: self.txSortBy,\n                    sortDesc: self.txSortDesc\n                }\n\n                const txPromise = axios.get(`/api/transactions/voter/${voter}?${self.serializeQuery(params)}`)\n\n                // transaction table\n                let txs = await txPromise\n                let items = []\n\n                txs.data.items.map((tx, idx) => {\n                    items.push({\n                        tx: tx.tx,\n                        voter: tx.voter,\n                        candidate: tx.candidate,\n                        event: tx.event,\n                        cap: new BigNumber(tx.capacity).div(10 ** 18).toNumber(),\n                        createdAt: moment(tx.createdAt).fromNow(),\n                        name: tx.name || '---',\n                        candidateCap: (new BigNumber(tx.currentCandidateCap).div(10 ** 18).toNumber()) || '---'\n                    })\n                })\n                self.transactions = items\n\n                self.txTotalRows = txs.data.total\n                self.txLoading = false\n            } catch (error) {\n                self.txLoading = false\n                console.log(error)\n            }\n        },\n        async getRewards () {\n            try {\n                const self = this\n                const voter = self.$route.params.address\n                self.rewardLoading = true\n\n                const params = {\n                    page: self.voterRewardsCurrentPage,\n                    limit: self.voterRewardsPerPage\n                }\n\n                const rewardPromise = axios.get(`/api/voters/${voter}/rewards?${self.serializeQuery(params)}`)\n\n                // voter reward table\n                let voterRewards = await rewardPromise\n                let items = []\n\n                voterRewards.data.items.map((r) => {\n                    items.push({\n                        epoch: r.epoch,\n                        candidate: r.validator,\n                        candidateName: r.candidateName,\n                        startBlockNumber: r.startBlockNumber,\n                        endBlockNumber: r.endBlockNumber,\n                        signNumber: r.signNumber,\n                        reward: new BigNumber(r.reward).toFixed(6),\n                        createdAt: moment(r.rewardTime).fromNow(),\n                        dateTooltip: moment(r.rewardTime).format('lll')\n                    })\n                })\n                self.voterRewards = items\n\n                self.voterRewardsTotalRows = voterRewards.data.total\n                self.rewardLoading = false\n            } catch (error) {\n                self.rewardLoading = false\n                console.log(error)\n            }\n        },\n        txPageChange (val) {\n            if (this.txCurrentPage !== val) {\n                this.txCurrentPage = val\n                this.getTransactions()\n            }\n        },\n        rewardPageChange (val) {\n            if (this.voterRewardsCurrentPage !== val) {\n                this.voterRewardsCurrentPage = val\n                this.getRewards()\n            }\n        },\n        candidatePageChange (val) {\n            if (this.currentPage !== val) {\n                this.currentPage = val\n                this.getCandidates()\n            }\n        },\n        sortingChangeCandidate (obj) {\n            if (obj.sortBy === 'totalCapacity') {\n                return this.candidates.slice().sort(function (a, b) {\n                    return b.totalCapacity - a.totaCapacity\n                })\n            }\n            this.sortBy = obj.sortBy\n            this.sortDesc = obj.sortDesc\n            this.getCandidates()\n        },\n        sortingChangeTxes (obj) {\n            this.txSortBy = obj.sortBy\n            this.txSortDesc = obj.sortDesc\n            this.getTransactions()\n        }\n    }\n}\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./View.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./View.vue?vue&type=template&id=2cb7266e&\"\nimport script from \"./View.vue?vue&type=script&lang=js&\"\nexport * from \"./View.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('div',{staticClass:\"XDC-header\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"XDC-header-block\"},[_c('div',{staticClass:\"XDC-header-block-left\"},[_vm._m(0),_vm._v(\" \"),_c('div',[_c('h4',{staticClass:\"h4 color-black\"},[_vm._v(\"Voter\")]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.voter))])])])])])]),_vm._v(\" \"),_c('div',{staticClass:\"main-content container\"},[_c('b-row',{staticClass:\"m-0\"},[_c('div',{staticClass:\"col-12 col-md-4 col-lg-4\"},[_c('b-card',{class:'XDC-card XDC-card--lighter XDC-card--candidate'\n                    + (_vm.loading ? ' XDC-loading' : '')},[_c('div',{staticClass:\"XDC-detail\"},[_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Voter\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-small\"},[_vm._v(_vm._s(_vm.voter))])]),_vm._v(\" \"),(_vm.isReady)?_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Balance\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-big\"},[_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(_vm.balance, 3))))])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-section\"},[_c('div',{staticClass:\"XDC-detail-label\"},[_vm._v(\"Total voted\")]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-detail-value-big\"},[_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.totalVoted))))])])])])],1),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-md-8 col-lg-8\"},[_c('b-card',{class:'XDC-card XDC-card--lighter'\n                    + (_vm.loading ? ' XDC-loading' : '')},[_c('b-tabs',{staticClass:\"XDC-tab\",attrs:{\"pills\":\"\",\"card\":\"\"}},[_c('b-tab',{attrs:{\"title\":\"Candidates\",\"active\":\"\"}},[_c('div',{class:'section section--candiates'\n                                + (_vm.loading ? ' XDC-loading' : '')},[_c('b-table',{class:`XDC-table XDC-table--voted${_vm.loading ? ' loading' : ''}`,attrs:{\"items\":_vm.candidates,\"fields\":_vm.candidateFields,\"per-page\":_vm.perPage,\"sort-by\":_vm.sortBy,\"sort-desc\":_vm.sortDesc,\"show-empty\":true,\"empty-text\":\"There are no candidates to show\",\"stacked\":\"md\"},on:{\"update:sortBy\":function($event){_vm.sortBy=$event},\"update:sort-by\":function($event){_vm.sortBy=$event},\"update:sortDesc\":function($event){_vm.sortDesc=$event},\"update:sort-desc\":function($event){_vm.sortDesc=$event},\"sort-changed\":_vm.sortingChangeCandidate},scopedSlots:_vm._u([{key:\"index\",fn:function(data){return [_vm._v(_vm._s(data.index + 1)+\"\\n                                    \")]}},{key:\"address\",fn:function(data){return [_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":'/candidate/' + data.item.address}},[_vm._v(\"\\n                                            \"+_vm._s(data.item.address)+\"\\n                                        \")])]}},{key:\"capacity\",fn:function(data){return [_vm._v(\"\\n                                        \"+_vm._s(isNaN(data.item.capacity) ? '---' : _vm.formatCurrencySymbol(data.item.capacity))+\"\\n                                        \"),(data.item.owner == _vm.voter)?_c('span',{attrs:{\"id\":`mnowner__${data.index}`}},[_vm._v(\"*\")]):_vm._e(),_vm._v(\" \"),_c('b-tooltip',{attrs:{\"target\":`mnowner__${data.index}`}},[_vm._v(\"\\n                                            This voter owns this node\\n                                        \")])]}},{key:\"totalCapacity\",fn:function(data){return [_vm._v(_vm._s(_vm.formatCurrencySymbol(_vm.formatBigNumber(data.item.totalCapacity, 3)))+\"\\n                                    \")]}}])}),_vm._v(\" \"),(_vm.totalRows > 0 && _vm.totalRows > _vm.perPage)?_c('b-pagination',{staticClass:\"XDC-pagination\",attrs:{\"total-rows\":_vm.totalRows,\"per-page\":_vm.perPage,\"align\":\"center\"},on:{\"change\":_vm.candidatePageChange},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}}):_vm._e()],1)]),_vm._v(\" \"),_c('b-tab',{attrs:{\"title\":\"Transactions\"}},[_c('div',{class:'container section section--txs'\n                                + (_vm.txLoading ? ' XDC-loading' : '')},[_c('b-table',{class:`XDC-table XDC-table--transactions-voter${_vm.txLoading ? ' loading' : ''}`,attrs:{\"items\":_vm.transactions,\"fields\":_vm.txFields,\"per-page\":_vm.txPerPage,\"show-empty\":true,\"empty-text\":\"There are no transactions to show\",\"stacked\":\"md\"},on:{\"sort-changed\":_vm.sortingChangeTxes},scopedSlots:_vm._u([{key:\"id\",fn:function(data){return [_vm._v(_vm._s(data.item.id)+\"\\n                                    \")]}},{key:\"candidate\",fn:function(data){return [_c('router-link',{attrs:{\"to\":'/candidate/' + data.item.candidate}},[_vm._v(\"\\n                                            \"+_vm._s(_vm.truncate(data.item.candidate, 20))+\"\\n                                        \")])]}},{key:\"event\",fn:function(data){return [_c('span',{class:'fw-600 ' + _vm.getEventClass(data.item.event)},[_vm._v(_vm._s(data.item.event))])]}},{key:\"capacity\",fn:function(data){return [_vm._v(\"\\n                                        \"+_vm._s(isNaN(data.item.cap) ? '---' : _vm.formatCurrencySymbol(data.item.cap))+\"\\n                                    \")]}},{key:\"candidateCap\",fn:function(data){return [_vm._v(\"\\n                                        \"+_vm._s(isNaN(data.item.candidateCap) ? '---' : _vm.formatCurrencySymbol(data.item.candidateCap))+\"\\n                                    \")]}},{key:\"tx\",fn:function(data){return [_c('a',{directives:[{name:\"b-tooltip\",rawName:\"v-b-tooltip.hover.right\",modifiers:{\"hover\":true,\"right\":true}}],attrs:{\"href\":`${_vm.config.explorerUrl}/txs/${data.item.tx}`,\"title\":\"View on XDCScan\",\"target\":\"_blank\"}},[_c('i',{staticClass:\"tm-eye\"}),_vm._v(\" \"),_c('span',[_vm._v(\"View on XDCScan\")])])]}}])}),_vm._v(\" \"),(_vm.txTotalRows > 0 && _vm.txTotalRows > _vm.txPerPage)?_c('b-pagination',{staticClass:\"XDC-pagination\",attrs:{\"total-rows\":_vm.txTotalRows,\"per-page\":_vm.txPerPage,\"align\":\"center\"},on:{\"change\":_vm.txPageChange},model:{value:(_vm.txCurrentPage),callback:function ($$v) {_vm.txCurrentPage=$$v},expression:\"txCurrentPage\"}}):_vm._e()],1)])],1)],1)],1)])],1)])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('i',{staticClass:\"tm-wallet XDC-header__icon\"})])\n}]\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EstimateReward.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./EstimateReward.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EstimateReward.vue?vue&type=template&id=9b141a1c&\"\nimport script from \"./EstimateReward.vue?vue&type=script&lang=js&\"\nexport * from \"./EstimateReward.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.estimatedReward !== 'N/A')?_c('div',{staticClass:\"float-left\"},[_vm._v(\"\\n    Est. Daily Reward: \"+_vm._s(_vm.estimatedReward)+\" XDC\\n\")]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Voting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Voting.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Voting.vue?vue&type=template&id=2c1e497e&\"\nimport script from \"./Voting.vue?vue&type=script&lang=js&\"\nexport * from \"./Voting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[(_vm.step === 1)?_c('div',[_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Vote\")]),_vm._v(\" \"),_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC2 XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_c('router-link',{attrs:{\"to\":`/voter/${_vm.voter}`}},[_vm._v(_vm._s(_vm.voter))])],1),_vm._v(\" \"),_c('span',[_vm._v(\"Voter\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-profile XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_c('router-link',{attrs:{\"to\":`/candidate/${_vm.candidate}`}},[_vm._v(_vm._s(_vm.candidate))])],1),_vm._v(\" \"),_c('span',[_vm._v(\"Candidate\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC2 XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.balance))))]),_vm._v(\" \"),_c('span',[_vm._v(\"Balance\")])])])]),_vm._v(\" \"),_c('b-form',{staticClass:\"XDC-form XDC-form--vote\",attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate()}}},[_c('b-form-group',{attrs:{\"description\":`How much XDC would you like to vote for this candidate?\n                        TX fee: ${_vm.txFee} XDC`,\"label\":\"Vote\",\"label-for\":\"vote-value\"}},[_c('b-input-group',[_c('number-input',{class:_vm.getValidationClass('voteValue'),attrs:{\"min\":10,\"step\":10,\"name\":\"vote-value\"},model:{value:(_vm.voteValue),callback:function ($$v) {_vm.voteValue=$$v},expression:\"voteValue\"}}),_vm._v(\" \"),_c('b-input-group-append',[_c('i',{staticClass:\"tm-XDC2\"})]),_vm._v(\" \"),(_vm.$v.voteValue.$dirty && !_vm.$v.voteValue.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field\")]):(_vm.$v.voteValue.$dirty && !_vm.$v.voteValue.minValue)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Minimum of voting is 100 XDC\")]):(_vm.votingError)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Not enough XDC\")]):_vm._e()],1)],1),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"row float-left col-12 mb-2\"},[_c('estimate-reward',{staticClass:\"estimate-reward\",attrs:{\"value\":_vm.voteValue,\"candidate\":_vm.candidate}})],1),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":function($event){return _vm.$router.go(-1)}}},[_vm._v(\"Cancel\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Next\")])],1)])],1)],1)],1)],1):_vm._e(),_vm._v(\" \"),(_vm.step === 2)?_c('div',[_c('b-row',{attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Confirmation\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('div',{staticClass:\"wrapper\"},[_c('div',{attrs:{\"id\":\"one\"}},[_c('label',[_c('b',[_vm._v(\"Voting information\")])]),_vm._v(\" \"),_c('label',{staticStyle:{\"margin-top\":\"5px\"}},[_c('textarea',{staticClass:\"sign-message\",staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"text\",\"disabled\":\"\",\"cols\":\"100\",\"rows\":\"4\"},domProps:{\"value\":_vm.message}})])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"pull-right\",staticStyle:{\"margin-right\":\"-7px\",\"float\":\"right\"}})]),_vm._v(\" \"),_c('div',[(_vm.provider === 'XDCwallet')?_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"10px\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"value\":_vm.qrCode,\"options\":{size: 250 }}})],1):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\",staticStyle:{\"margin-top\":\"5px\"}},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":_vm.backStep}},[_vm._v(\"Back\")]),_vm._v(\" \"),(_vm.provider !== 'XDCwallet')?_c('button',{staticClass:\"btn btn-primary\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.vote}},[_vm._v(\"Submit\")]):_vm._e()],1)])])],1)],1):_vm._e()])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Unvoting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Unvoting.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Unvoting.vue?vue&type=template&id=01ce7da8&\"\nimport script from \"./Unvoting.vue?vue&type=script&lang=js&\"\nexport * from \"./Unvoting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.loadingPage)?_c('div',{staticClass:\"XDC-loading\"}):_c('div',[_c('div',{staticClass:\"container\"},[(_vm.voted === 0)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"XDC-empty col-12\"},[_c('i',{staticClass:\"tm-notice XDC-empty__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-empty__description\"},[_vm._v(\"You have not voted for this candidate, so you can't unvote.\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"to\":`/voting/${_vm.candidate}`,\"variant\":\"primary\"}},[_vm._v(\"Vote\")])],1)]):_c('div',[(_vm.step === 1)?_c('div',[(_vm.voted)?_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                        + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Unvote\\n                            \"),_c('span',{staticClass:\"XDC-card__subtitle\"},[_vm._v(\"\\n                                Your XDC will be locked in a duration after unvoting\")])]),_vm._v(\" \"),_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-wallet XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_c('router-link',{attrs:{\"to\":`/voter/${_vm.voter}`}},[_vm._v(_vm._s(_vm.voter))])],1),_vm._v(\" \"),_c('span',[_vm._v(\"Voter\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-profile XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_c('router-link',{attrs:{\"to\":`/candidate/${_vm.candidate}`}},[_vm._v(\"\\n                                            \"+_vm._s(_vm.candidate)+\"\\n                                        \")])],1),_vm._v(\" \"),_c('span',[_vm._v(\"Candidate\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC2 XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('span',[_vm._v(\" \"+_vm._s(_vm.formatCurrencySymbol(_vm.formatNumber(_vm.voted)))+\"\\n                                        - \"),_c('a',{attrs:{\"href\":\"javascript:\"},on:{\"click\":_vm.unvoteAll}},[_vm._v(\"All\")])]),_vm._v(\" \"),_c('span',[_vm._v(\"You voted\")])])])]),_vm._v(\" \"),_c('b-form',{staticClass:\"XDC-form XDC-form--unvote\",attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate()}}},[_c('b-form-group',{attrs:{\"description\":`The amount of XDC to unvote. TX fee: ${_vm.txFee} XDC`,\"label\":\"Amount\",\"label-for\":\"unvote-value\"}},[_c('b-input-group',[_c('number-input',{class:_vm.getValidationClass('unvoteValue'),attrs:{\"min\":10,\"step\":10,\"name\":\"vote-value\"},on:{\"input\":_vm.onChange},model:{value:(_vm.unvoteValue),callback:function ($$v) {_vm.unvoteValue=$$v},expression:\"unvoteValue\"}}),_vm._v(\" \"),_c('b-input-group-append',[_c('i',{staticClass:\"tm-XDC2\"})]),_vm._v(\" \"),(_vm.$v.unvoteValue.$dirty && !_vm.$v.unvoteValue.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field \")]):(!_vm.isNumeric)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Must be number \")]):(_vm.isMax)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"\\n                                        Must be less than \"+_vm._s(_vm.limitedUnvote)+\" XDC \")]):(!_vm.isEnoughXDC)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Voted amount left should not less than 100 XDC \")]):_vm._e()],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":function($event){return _vm.$router.go(-1)}}},[_vm._v(\"Cancel\")]),_vm._v(\" \"),_c('b-button',{attrs:{\"id\":\"nextBtn\",\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Next\")])],1)],1)],1)],1):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.step === 2)?_c('div',[_c('b-row',{attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{class:'col-12 col-md-8 col-lg-6 XDC-card XDC-card--lighter p-0'\n                        + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Confirmation\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"20px\"}},[_c('div',{staticClass:\"wrapper\"},[_c('div',{attrs:{\"id\":\"one\"}},[_c('label',[_c('b',[_vm._v(\"Unvoting information\")])]),_vm._v(\" \"),_c('label',{staticStyle:{\"margin-top\":\"5px\"}},[_c('textarea',{staticClass:\"sign-message\",staticStyle:{\"width\":\"100%\"},attrs:{\"type\":\"text\",\"disabled\":\"\",\"cols\":\"100\",\"rows\":\"4\"},domProps:{\"value\":_vm.message}})])]),_vm._v(\" \"),_c('div',[_c('div',{staticClass:\"pull-right\",staticStyle:{\"margin-right\":\"-7px\",\"float\":\"right\"}})]),_vm._v(\" \"),_c('div',[(_vm.provider === 'XDCwallet')?_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"10px\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"value\":_vm.qrCode,\"options\":{size: 250 }}})],1):_vm._e()])]),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\",staticStyle:{\"margin-top\":\"5px\"}},[_c('b-button',{attrs:{\"type\":\"button\",\"variant\":\"secondary\"},on:{\"click\":_vm.backStep}},[_vm._v(\"Back\")]),_vm._v(\" \"),(_vm.provider !== 'XDCwallet')?_c('button',{staticClass:\"btn btn-primary\",attrs:{\"variant\":\"primary\"},on:{\"click\":_vm.unvote}},[_vm._v(\"Submit\")]):_vm._e()],1)])])],1)],1):_vm._e()])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"container\">\n        <b-row\n            align-v=\"center\"\n            align-h=\"center\"\n            class=\"m-0\">\n            <b-card\n                class=\"col-12 col-md-8 col-lg-6 XDC-card XDC-card--animated p-0\">\n                <h4 class=\" color-white XDC-card__title XDC-card__title--big\">\n                    <i :class=\"`tm-${icon}`\"/>\n                    {{ title }}\n                </h4>\n                <p class=\"md-content\">\n                    You have {{ event }}\n                    <span class=\"color-white\">{{ amount }} XDC</span> for candidate\n                    <router-link :to=\"`/candidate/${candidate}`\">\n                    {{ truncate(candidate, 20) }}</router-link> successfully.\n                    <br ><br >\n                    Transaction Hash:\n                    <a\n                        :href=\"txUrl\"\n                        target=\"_blank\">{{ truncate(tx, 30) }}</a>\n                </p>\n                <p\n                    class=\"md-content\"\n                    v-html=\"description\"/>\n\n                <div class=\"buttons text-right\">\n                    <b-button\n                        to=\"/\"\n                        type=\"button\"\n                        variant=\"primary\">{{ buttonText }}</b-button>\n                </div>\n            </b-card>\n        </b-row>\n    </div>\n</template>\n<script>\nimport axios from 'axios'\nimport BigNumber from 'bignumber.js'\nimport urljoin from 'url-join'\nimport store from 'store'\nexport default {\n    name: 'App',\n    data () {\n        return {\n            config: {},\n            tx: this.$route.params.transaction,\n            status: 'fail',\n            icon: '',\n            title: '',\n            description: '',\n            buttonText: '',\n            event: '',\n            amount: '',\n            candidate: '',\n            txUrl: ''\n        }\n    },\n    computed: {},\n    watch: {},\n    updated () {},\n    created: async function () {\n        let self = this\n        self.config = store.get('configMaster') || await self.appConfig()\n\n        axios.get(`/api/transactions/${self.tx}`).then(function (response) {\n            if (response.data == null) {\n                self.$router.push({ path: '/' })\n            } else {\n                let transaction = response.data\n\n                self.web3.eth.getTransaction(self.tx, function (err, result) {\n                    if (!err) {\n                        self.status = result == null ? 'fail' : 'success'\n                    } else {\n                        self.status = 'fail'\n                        console.log(err)\n                    }\n\n                    if (self.status === 'success') {\n                        self.amount = new BigNumber(transaction.capacity).div(10 ** 18).toString(10)\n                        self.icon = 'checkmark'\n                        self.title = 'Success'\n                        self.event = transaction.event === 'Vote' ? 'voted' : 'unvoted'\n                        self.candidate = transaction.candidate\n                        self.txUrl = urljoin(self.config.explorerUrl, `/txs/${self.tx}`)\n                        // self.description = `You have ${event}\n                        // <span class=\"color-white\">${amount} XDC</span> for candidate\n                        // <router-link to=\"/candidate/${transaction.candidate}\">${transaction.candidate}</router-link>\n                        // successfully.\n                        // <br/><br/>\n                        // Transaction Hash: <a href=\"${self.config.explorerUrl}/txs/${self.tx}\"\n                        // target=\"_blank\">${self.tx}</a>`\n                        self.buttonText = 'View all Candidates'\n                    } else {\n                        self.icon = 'notice'\n                        self.title = 'Transaction Failed'\n                        self.description = 'You have voted unsuccessfully'\n                        self.buttonText = 'Try Again'\n                    }\n                })\n            }\n        }).catch((e) => {\n            console.log(e)\n        })\n    },\n    mounted () {},\n    methods: {}\n}\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Confirm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Confirm.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Confirm.vue?vue&type=template&id=0f673b24&\"\nimport script from \"./Confirm.vue?vue&type=script&lang=js&\"\nexport * from \"./Confirm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('b-row',{staticClass:\"m-0\",attrs:{\"align-v\":\"center\",\"align-h\":\"center\"}},[_c('b-card',{staticClass:\"col-12 col-md-8 col-lg-6 XDC-card XDC-card--animated p-0\"},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_c('i',{class:`tm-${_vm.icon}`}),_vm._v(\"\\n                \"+_vm._s(_vm.title)+\"\\n            \")]),_vm._v(\" \"),_c('p',{staticClass:\"md-content\"},[_vm._v(\"\\n                You have \"+_vm._s(_vm.event)+\"\\n                \"),_c('span',{staticClass:\"color-white\"},[_vm._v(_vm._s(_vm.amount)+\" XDC\")]),_vm._v(\" for candidate\\n                \"),_c('router-link',{attrs:{\"to\":`/candidate/${_vm.candidate}`}},[_vm._v(\"\\n                \"+_vm._s(_vm.truncate(_vm.candidate, 20)))]),_vm._v(\" successfully.\\n                \"),_c('br'),_c('br'),_vm._v(\"\\n                Transaction Hash:\\n                \"),_c('a',{attrs:{\"href\":_vm.txUrl,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.truncate(_vm.tx, 30)))])],1),_vm._v(\" \"),_c('p',{staticClass:\"md-content\",domProps:{\"innerHTML\":_vm._s(_vm.description)}}),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[_c('b-button',{attrs:{\"to\":\"/\",\"type\":\"button\",\"variant\":\"primary\"}},[_vm._v(_vm._s(_vm.buttonText))])],1)])],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import BigNumber from 'bignumber.js'\nimport XDCValidatorArtifacts from '../build/contracts/XDCValidator.json'\n\nconst Helper = {\n    getCurrencySymbol () {\n        return 'XDC'\n    },\n    formatCurrencySymbol (number) {\n        let unit = this.getCurrencySymbol()\n\n        if (unit === null) {\n            unit = 'XDC'\n        }\n        return `${number} ${unit}`\n    },\n    getDefaultState () {\n        return {\n            items: [],\n            status: 'empty'\n        }\n    },\n    truncate (fullStr, strLen) {\n        if (fullStr.length <= strLen) return fullStr\n\n        const separator = '...'\n\n        let sepLen = separator.length\n        let charsToShow = strLen - sepLen\n        let frontChars = Math.ceil(charsToShow / 2)\n        let backChars = Math.floor(charsToShow / 2)\n\n        return fullStr.substr(0, frontChars) +\n               separator +\n               fullStr.substr(fullStr.length - backChars)\n    },\n    serializeQuery (params, prefix) {\n        const query = Object.keys(params).map((key) => {\n            const value = params[key]\n\n            if (params.constructor === Array) {\n                key = `${prefix}[]`\n            } else {\n                if (params.constructor === Object) {\n                    key = (prefix ? `${prefix}[${key}]` : key)\n                }\n            }\n\n            return value === 'object' ? this.serializeQuery(value, key) : `${key}=${encodeURIComponent(value)}`\n        })\n\n        return [].concat.apply([], query).join('&')\n    },\n    getSecondsToHms  (number) {\n        number = parseInt(number, 10)\n        if (number < 0) {\n            return 'Available to withdraw'\n        }\n\n        number = number * 2\n\n        let h = Math.floor(number / 3600)\n        let m = Math.floor(number % 3600 / 60)\n        let s = Math.floor(number % 3600 % 60)\n\n        if (h < 10) { h = '0' + h }\n        if (m < 10) { m = '0' + m }\n        if (s < 10) { s = '0' + s }\n\n        return `${h}:${m}:${s}`\n    },\n    checkLongNumber (num) {\n        let str = num.toString().split('.')\n\n        return (typeof str[1] !== 'undefined' && str[1].length > 3)\n    },\n    formatNumber (number) {\n        let seps = (number || 0).toString().split('.')\n        seps[0] = seps[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n\n        return seps.join('.')\n    },\n    formatBigNumber (num, dp) {\n        if (this.checkLongNumber(num)) {\n            return new BigNumber(num).toFormat(dp)\n        }\n\n        return this.formatNumber(num)\n    },\n    XDCValidatorArtifacts\n}\n\nexport default Helper\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Setting.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-1.use!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Setting.vue?vue&type=script&lang=js&\"","import CandidateView from './components/candidates/View.vue'\nimport CandidateList from './components/candidates/List.vue'\nimport CandidateApply from './components/candidates/Apply.vue'\nimport CandidateResign from './components/candidates/Resign.vue'\nimport CandidateWithdraw from './components/candidates/Withdraw.vue'\nimport CandidateUpdate from './components/candidates/Update.vue'\nimport VoterView from './components/voters/View'\nimport VotingView from './components/voters/Voting'\nimport UnvotingView from './components/voters/Unvoting'\nimport ConfirmView from './components/voters/Confirm'\nimport Setting from './components/Setting.vue'\nimport PrivacyPolicy from './components/PrivacyPolicy.vue'\nimport TermsOfService from './components/TermsOfService.vue'\n\nconst routes = [\n    {\n        path: '/', component: CandidateList\n    },\n    {\n        path: '/apply', component: CandidateApply\n    },\n    {\n        path: '/resign', component: CandidateResign\n    },\n    {\n        path: '/resign/:address', component: CandidateResign\n    },\n    {\n        path: '/withdraw', component: CandidateWithdraw, name: 'CandidateWithdraw'\n    },\n    {\n        path: '/withdraw/:address', component: CandidateWithdraw\n    },\n    {\n        path: '/candidates', component: CandidateList\n    },\n    {\n        path: '/candidate/:address', component: CandidateView\n    },\n    {\n        path: '/candidate/:address/update', component: CandidateUpdate\n    },\n    {\n        path: '/voter/:address', component: VoterView\n    },\n    {\n        path: '/voting/:candidate', component: VotingView\n    },\n    {\n        path: '/unvoting/:candidate', component: UnvotingView\n    },\n    {\n        path: '/confirm/:transaction', component: ConfirmView\n    },\n    {\n        path: '/setting', component: Setting\n    },\n    {\n        path: '/privacyPolicy', component: PrivacyPolicy\n    },\n    {\n        path: '/terms', component: TermsOfService\n    }\n]\n\nexport default routes\n","import { render, staticRenderFns } from \"./Setting.vue?vue&type=template&id=63d3bb8a&\"\nimport script from \"./Setting.vue?vue&type=script&lang=js&\"\nexport * from \"./Setting.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[(_vm.address)?_c('div',{staticClass:\"XDC-header\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"XDC-header-block\"},[_c('div',{staticClass:\"XDC-header-block-left\"},[_vm._m(0),_vm._v(\" \"),_c('div',[_c('h4',{staticClass:\"h4 color-black\"},[_vm._v(\"Address\")]),_vm._v(\" \"),_c('p',[_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":`/voter/xdc${_vm.address.substring(2)}`}},[_vm._v(\"\\n                                \"+_vm._s('xdc' + _vm.address.substring(2))+\"\\n                            \")])],1)])])])])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"main-content container\"},[(!_vm.address)?_c('div',[_c('b-row',{staticClass:\"m-0\"},[_c('div',{staticClass:\"col-12 col-md-2 col-lg-2\"}),_vm._v(\" \"),(!_vm.address)?_c('b-card',{class:'col-12 col-md-8 col-lg-8 XDC-card XDC-card--lighter'\n                    + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"color-white XDC-card__title XDC-card__title--big\"},[_vm._v(\"Login\")]),_vm._v(\" \"),_c('b-form',{staticClass:\"XDC-form XDC-form--setting\",attrs:{\"novalidate\":\"\"},on:{\"submit\":function($event){$event.preventDefault();return _vm.validate()}}},[_c('b-form-group',{staticClass:\"mb-4\",attrs:{\"label\":\"Network Provider\",\"label-for\":\"provider\"}},[_c('b-input-group',[_c('b-form-select',{staticClass:\"form-control\",attrs:{\"id\":\"provider\"},on:{\"change\":_vm.onChangeSelect},model:{value:(_vm.provider),callback:function ($$v) {_vm.provider=$$v},expression:\"provider\"}},[(!_vm.isElectron)?_c('option',{attrs:{\"value\":\"metamask\"}},[_vm._v(\"XDCPay\")]):_vm._e(),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"connect-wallet\"}},[_vm._v(\"WalletConnect v2\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"custom\"}},[_vm._v(\"PrivateKey/MNEMONIC\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"ledger\"}},[_vm._v(\"Ledger Wallet\")]),_vm._v(\" \"),_c('option',{attrs:{\"value\":\"trezor\"}},[_vm._v(\"Trezor Wallet\")])]),_vm._v(\" \"),(_vm.provider !== 'metamask' && _vm.provider !== 'xinpay')?_c('small',{staticClass:\"form-text text-muted\"},[_vm._v(\"Using node at \"+_vm._s(_vm.chainConfig.rpc)+\".\")]):_vm._e()],1)],1),_vm._v(\" \"),(_vm.provider === 'custom')?_c('b-form-group',{staticClass:\"mb-4\",attrs:{\"label\":\"Privatekey/MNEMONIC\",\"label-for\":\"mnemonic\"}},[_c('b-form-input',{class:_vm.getValidationClass('mnemonic'),attrs:{\"autocomplete\":\"off\",\"type\":\"text\"},model:{value:(_vm.mnemonic),callback:function ($$v) {_vm.mnemonic=$$v},expression:\"mnemonic\"}}),_vm._v(\" \"),(_vm.$v.mnemonic.$dirty && !_vm.$v.mnemonic.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field\")]):_vm._e()],1):_vm._e(),_vm._v(\" \"),(_vm.provider === 'custom')?_c('b-form-group',{staticClass:\"mb-4\",attrs:{\"label\":\"Select HD derivation path(MNEMONIC)\",\"label-for\":\"hdPath\"}},[_c('b-form-input',{class:_vm.getValidationClass('hdPath'),attrs:{\"value\":_vm.hdPath,\"type\":\"text\"},model:{value:(_vm.hdPath),callback:function ($$v) {_vm.hdPath=$$v},expression:\"hdPath\"}}),_vm._v(\" \"),(_vm.$v.hdPath.$dirty && !_vm.$v.hdPath.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field\")]):_vm._e(),_vm._v(\" \"),_c('small',{staticClass:\"form-text text-muted\"},[_vm._v(\"To unlock the wallet, try paths\\n                                \"),_c('code',{staticClass:\"hd-path\",on:{\"click\":function($event){return _vm.changePath(`m/44'/60'/0'/0`)}}},[_vm._v(\"m/44'/60'/0'/0\")]),_vm._v(\" or\\n                                \"),_c('code',{staticClass:\"hd-path\",on:{\"click\":function($event){return _vm.changePath(`m/44'/60'/0'`)}}},[_vm._v(\"m/44'/60'/0'\")]),_vm._v(\" or\\n                                \"),_c('code',{staticClass:\"hd-path\",on:{\"click\":function($event){return _vm.changePath(`m/44'/551'/0'/0`)}}},[_vm._v(\"m/44'/551'/0'/0\")])])],1):_vm._e(),_vm._v(\" \"),(_vm.provider === 'XDCwallet')?_c('b-form-group',{staticClass:\"mb-4\",staticStyle:{\"text-align\":\"center\"}},[_c('vue-qrcode',{staticClass:\"img-fluid text-center text-lg-right\",attrs:{\"options\":{size: 250 },\"value\":_vm.qrCode}}),_vm._v(\" \"),(_vm.mobileCheck)?_c('div',[_c('b-button',{attrs:{\"href\":_vm.qrCodeApp,\"variant\":\"primary\"}},[_vm._v(\"\\n                                    Open in App\\n                                \")])],1):_vm._e(),_vm._v(\" \"),_c('div',[_c('b',[_vm._v(\"In case you do not have XDCWallet, download here\")])]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"5px\"}},[_c('a',{staticClass:\"social-links__link\",attrs:{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://goo.gl/MvE1GV\"}},[_c('img',{attrs:{\"src\":\"/app/assets/img/appstore.png\"}})]),_vm._v(\" \"),_c('a',{staticClass:\"social-links__link\",attrs:{\"target\":\"_blank\",\"rel\":\"noopener noreferrer\",\"href\":\"https://goo.gl/4tFQzY\"}},[_c('img',{attrs:{\"src\":\"/app/assets/img/googleplay.png\"}})])])],1):_vm._e(),_vm._v(\" \"),(_vm.provider === 'ledger')?_c('b-form-group',{staticClass:\"mb-4\",attrs:{\"label\":\"Select HD derivation path\",\"label-for\":\"hdPath\"}},[_c('b-form-input',{class:_vm.getValidationClass('hdPath'),attrs:{\"value\":_vm.hdPath,\"type\":\"text\"},model:{value:(_vm.hdPath),callback:function ($$v) {_vm.hdPath=$$v},expression:\"hdPath\"}}),_vm._v(\" \"),(_vm.$v.hdPath.$dirty && !_vm.$v.hdPath.required)?_c('span',{staticClass:\"text-danger\"},[_vm._v(\"Required field\")]):_vm._e(),_vm._v(\" \"),_c('small',{staticClass:\"form-text text-muted\"},[_vm._v(\"To unlock the wallet, try paths\\n                                \"),_c('code',{staticClass:\"hd-path\",on:{\"click\":function($event){return _vm.changePath(`m/44'/60'/0'`)}}},[_vm._v(\"m/44'/60'/0'\")]),_vm._v(\"\\n                                or \"),_c('code',{staticClass:\"hd-path\",on:{\"click\":function($event){return _vm.changePath(`m/44'/60'/0'/0`)}}},[_vm._v(\"m/44'/60'/0'/0\")]),_vm._v(\"\\n                                with Ethereum App,\"),_c('br'),_vm._v(\"\\n                                or try path \"),_c('code',{staticClass:\"hd-path\",on:{\"click\":function($event){return _vm.changePath(`m/44'/551'/0'/0`)}}},[_vm._v(\"m/44'/551'/0'/0\")]),_vm._v(\"\\n                                with XDC Network App (on Ledger).\")])],1):_vm._e(),_vm._v(\" \"),(_vm.provider === 'trezor')?_c('b-form-group',{staticClass:\"mb-4\",attrs:{\"label-for\":\"hdPath\"}},[_c('span',[_vm._v(\"HD derivation path: \")]),_vm._v(\" \"),_c('label',{staticClass:\"ml-1\"},[_c('b',[_vm._v(\"m/44'/60'/0'/0\")])])]):_vm._e(),_vm._v(\" \"),(!_vm.isReady && _vm.provider === 'metamask')?_c('div',[_c('p',[_vm._v(\"Please install & login\\n                                \"),_c('a',{attrs:{\"href\":\"https://chrome.google.com/webstore/detail/xdcpay/bocpokimicclpaiekenaeelehdjllofo/\",\"target\":\"_blank\"}},[_vm._v(\"XDCPay Extension\")]),_vm._v(\"\\n                                then connect it to XDC Network Mainnet or Apothem Testnet.\")])]):_vm._e(),_vm._v(\" \"),(!_vm.isReady && _vm.provider === 'xinpay')?_c('div',[_c('p',[_vm._v(\"Please install & login\\n                                \"),_c('a',{attrs:{\"href\":\"https://xinpay.io/\",\"target\":\"_blank\"}},[_vm._v(\"XinPay Extension\")]),_vm._v(\"\\n                                then connect it to XDC Network Mainnet or Testnet.\")])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"buttons text-right\"},[(_vm.provider !== 'XDCwallet')?_c('b-button',{attrs:{\"type\":\"submit\",\"variant\":\"primary\"}},[_vm._v(\"Save\")]):_vm._e()],1)],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-md-2 col-lg-2\"})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.address)?_c('div',[_c('b-row',{staticClass:\"m-0\"},[_c('div',{staticClass:\"col-12 col-md-6 col-lg-6\"},[(_vm.address)?_c('b-card',{class:'XDC-card XDC-card--lighter'\n                        + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"h4 XDC-card__title color-black\"},[_vm._v(\"\\n                            Account Information\")]),_vm._v(\" \"),_c('ul',{staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-wallet XDC-list__icon\"}),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"},[_c('router-link',{staticClass:\"text-truncate\",attrs:{\"to\":`/voter/xdc${_vm.address.substring(2)}`}},[_vm._v(\"\\n                                        \"+_vm._s('xdc' + _vm.address.substring(2))+\"\\n                                    \")]),_vm._v(\" \"),_c('span',[_vm._v(\"Address\")])],1)]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC2 XDC-list__icon\"}),_vm._v(\" \"),_c('div',{staticClass:\"XDC-list__text\"},[_c('p',{staticClass:\"color-white mb-0\"},[_vm._v(_vm._s(_vm.formatNumber(_vm.balance))+\"\\n                                    \"),_c('span',{staticClass:\"text-muted\"},[_vm._v(_vm._s(_vm.getCurrencySymbol()))])]),_vm._v(\" \"),_c('span',[_vm._v(\"Balance\")])])]),_vm._v(\" \"),_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC XDC-list__icon\"}),_vm._v(\" \"),_c('div',{staticClass:\"XDC-list__text\"},[_c('p',{staticClass:\"color-white mb-0\"},[_c('span',{staticClass:\"text-muted\"},[_vm._v(_vm._s(Boolean(_vm.KYCStatus)))])]),_vm._v(\" \"),_c('span',[_vm._v(\"KYC\")])])]),_vm._v(\" \"),(_vm.KYCStatus)?_c('li',{staticClass:\"XDC-list__item\"},[_c('i',{staticClass:\"tm-XDC XDC-list__icon\"}),_vm._v(\" \"),_c('div',{staticClass:\"XDC-list__text\"},[_c('p',{staticClass:\"color-white mb-0\"},[_c('span',{staticClass:\"text-muted\"},[_c('a',{attrs:{\"href\":`https://kycdocs.xinfin.network/${_vm.KYCStatus}`,\"target\":\"_blank\"}},[_vm._v(\"\\n                                                Check here\\n                                            \")])])]),_vm._v(\" \"),_c('span',[_vm._v(\"KYC\")])])]):_vm._e()])]):_vm._e()],1),_vm._v(\" \"),_c('div',{staticClass:\"col-12 col-md-6 col-lg-6\"},[(_vm.isReady && (_vm.aw || (_vm.wh.length > 0)))?_c('b-card',{class:'XDC-card XDC-card--lighter'\n                        + (_vm.loading ? ' XDC-loading' : '')},[_c('h4',{staticClass:\"h4 XDC-card__title color-black\"},[_vm._v(\"\\n                            Withdrawals\")]),_vm._v(\" \"),_vm._l((_vm.withdraws),function(w,k,index){return _c('ul',{key:index,staticClass:\"XDC-list list-unstyled\"},[(w.blockNumber !== '0' && w.cap !== '0')?_c('li',{staticClass:\"XDC-list__item\"},[_c('p',{staticClass:\"XDC-list__text\"},[_c('a',{attrs:{\"href\":`${_vm.config.explorerUrl}/blocks/${w.blockNumber}`}},[_vm._v(\"\\n                                        \"+_vm._s(w.blockNumber))]),_vm._v(\" \"),_c('span',[_vm._v(\"Withdrawal Block Number\")])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-list__text\"},[_c('p',{staticClass:\"color-white mb-0\"},[_vm._v(_vm._s(w.cap)+\"\\n                                    \"),_c('span',{staticClass:\"text-muted\"},[_vm._v(_vm._s(_vm.getCurrencySymbol()))])]),_vm._v(\" \"),_c('span',[_vm._v(\"Capacity\")])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-list__text\"},[_c('b-button',{staticClass:\"float-right\",attrs:{\"disabled\":w.blockNumber > _vm.chainConfig.blockNumber,\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.changeView(w, k)}}},[_vm._v(\"Withdraw\")])],1)]):_vm._e()])}),_vm._v(\" \"),_vm._l((_vm.wh),function(w,k,index){return _c('ul',{key:index,staticClass:\"XDC-list list-unstyled\"},[_c('li',{staticClass:\"XDC-list__item\"},[_c('p',{staticClass:\"XDC-list__text\"},[_c('a',{attrs:{\"href\":`${_vm.config.explorerUrl}/txs/${w.tx}`}},[_vm._v(\"\\n                                        \"+_vm._s((w.tx || '').substring(0,8)))]),_vm._v(\" \"),_c('span',[_vm._v(\"Transaction\")])]),_vm._v(\" \"),_c('div',{staticClass:\"XDC-list__text\"},[_c('p',{staticClass:\"color-white mb-0\"},[_vm._v(_vm._s(w.cap)+\"\\n                                    \"),_c('span',{staticClass:\"text-muted\"},[_vm._v(_vm._s(_vm.getCurrencySymbol()))])]),_vm._v(\" \"),_c('span',[_vm._v(\"Capacity\")])]),_vm._v(\" \"),_c('p',{staticClass:\"XDC-list__text\"})])])})],2):_vm._e()],1)])],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"XDC-modal-light\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"hdwalletModal\"}},[_c('div',{staticClass:\"modal-backdrop\"},[_c('div',{staticClass:\"modal\"},[_c('header',{staticClass:\"modal-header\"},[_vm._t(\"header\",function(){return [_vm._v(\"\\n                            Please select the address you would like to interact with\\n                            \"),_c('button',{staticClass:\"close\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closeModal}},[_vm._v(\"\\n                                x\\n                            \")])]})],2),_vm._v(\" \"),_c('section',{staticClass:\"modal-body\"},[_vm._t(\"hdAddress\",function(){return [_vm._l((_vm.hdWallets),function(hdwallet,index){return _c('div',{key:index},[_c('label',{staticStyle:{\"width\":\"100%\",\"margin-bottom\":\"5px\",\"line-height\":\"16px\",\"cursor\":\"pointer\"}},[_c('input',{staticStyle:{\"width\":\"5%\",\"float\":\"left\"},attrs:{\"name\":\"hdWallet\",\"type\":\"radio\",\"autocomplete\":\"off\"},domProps:{\"value\":index}}),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"70%\",\"float\":\"left\"}},[_vm._v(\"\\n                                        \"+_vm._s(hdwallet.address)+\"\\n                                    \")]),_vm._v(\" \"),_c('div',{staticStyle:{\"width\":\"20%\",\"margin-left\":\"2%\",\"float\":\"left\"}},[_vm._v(\"\\n                                        \"+_vm._s(hdwallet.balance)+\" \"+_vm._s(_vm.getCurrencySymbol())+\"\\n                                    \")])])])}),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-top\":\"10px\",\"cursor\":\"pointer\"},attrs:{\"id\":\"moreHdAddresses\"},on:{\"click\":_vm.moreHdAddresses}},[_vm._v(\"\\n                                More Addresses\\n                            \")])]})],2),_vm._v(\" \"),_c('footer',{staticClass:\"modal-footer\"},[_vm._t(\"footer\",function(){return [_c('button',{staticClass:\"btn btn-secondary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.closeModal}},[_vm._v(\"\\n                                Cancel\\n                            \")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-primary\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.setHdPath}},[_vm._v(\"\\n                                Unlock your wallet\\n                            \")])]})],2)])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',[_c('i',{staticClass:\"tm-wallet XDC-header__icon\"})])\n}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./PrivacyPolicy.vue?vue&type=template&id=1fdc14fb&\"\nimport script from \"./PrivacyPolicy.vue?vue&type=script&lang=js&\"\nexport * from \"./PrivacyPolicy.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div class=\"container\">\n        <div class=\"row\">\n            <b-card class=\"XDC-card\">\n                <div class=\"col-12\">\n                    <h1\n                        style=\"text-align: center\">\n                        PRIVACY POLICY\n                    </h1>\n                </div>\n                <div class=\"container\">\n                    <p>\n                        Last updated: November, 2018\n                    </p>\n                    <h3 style=\"text-align: center\">INTRODUCTION</h3>\n                    <p>\n                        Welcome to XDC Network Governance DApp, a free, open-source, client-side tool for interacting with the\n                        blockchain. XDC Network values privacy and we make a concerted effort to minimize and,\n                        to the extent possible, eliminate the exposure of personal data during the use of our\n                        interface. XDC Network Governance DApp does not collect, hold, or store keys, account information,\n                        or passwords. We do not collect data passively, do not monetize the collection of data,\n                        and do not use your data for marketing or advertising.\n                    </p>\n                    <p>\n                        To the extent we collect any personal information, this privacy policy (“Policy”)\n                        describes how XDC Network Governance DApp collects, uses, and shares personal information of people who visit\n                        our website (the “Site”), use our mobile application, XDC Network Governance DApp (the “App”),\n                        or otherwise use our services (collectively, the “Services”).\n                    </p>\n                    <p>\n                        This Policy applies to anyone who accesses the Services. Please read the Policy carefully to\n                        understand our practices regarding your information and how we will treat it.\n                        By visiting the Site, App, and/or using the Services, you acknowledge that the collection,\n                        use, and sharing of your information will take place as described in this Policy.\n                    </p>\n                    <p>\n                        So that we are clear about the terminology we are using, when we use the phrase\n                        “Personal Information” in this Privacy Policy, we mean information about an individual that\n                        (either by itself or when combined with information from other available sources) allows that\n                        individual to be identified, including, the individual’s name,\n                        telephone number, or e-mail address.\n                    </p>\n                    <h3\n                        style=\"text-align: center\">\n                        THE BLOCKCHAIN</h3>\n                    <p>\n                        Due to the inherent transparency of many blockchains, including the XDC Network Blockchain,\n                        transactions that individuals broadcast via XDC Network Governance DApp may be publicly accessible.\n                        This includes, but is not limited to, your public sending address, the public address of the\n                        receiver, the amount sent or received, and any other data a user has chosen to include in a\n                        given transaction. Information stored on a blockchain may be public, immutable, and difficult or\n                        even impossible to remove or delete. Transactions and addresses may reveal information\n                        about the user’s identity and information can potentially be correlated now or in the future\n                        by any party who chooses to do so, including law enforcement. Users are encouraged\n                        to review how privacy and transparency on the blockchain works.\n                    </p>\n                    <h3 style=\"text-align: center\">WHAT WE COLLECT</h3>\n                    <p>\n                        We collect information about you as described below.\n                        We use this information to enhance your experience with our Services.\n                    </p>\n                    <h5>Information You Provide</h5>\n                    <p>\n                        We may collect Personal Information you choose to provide to us. For example,\n                        when you contact us for support through the Services, you give us with your e-mail address and\n                        any other information that you choose to provide. Also, if you participate in a\n                        XDC Network Governance DApp offer, give-away, or promotion (“Promotion”), you provide your name,\n                        e-mail address, and mailing address.\n                    </p>\n                    <h5>California Do Not Track Disclosures</h5>\n                    <p>\n                        XDC Network Governance DApp does not track users over time and across third party websites to provide targeted\n                        advertising and therefore does not respond to Do Not Track (DNT) signals.\n                    </p>\n                    <h3 style=\"text-align: center\">USE OF INFORMATION</h3>\n                    <p>\n                        We use the information that we have about you to provide support and certain Services to you.\n                    </p>\n                    <p>\n                        We may use the Personal Information we collect from and about you to (1) provide you with\n                        information or services that you request from us, including to respond to your comments,\n                        questions, and/or provide customer service; (2) monitor and analyze usage and trends and\n                        personalize and improve the Services and your experience using the Services; and (3) for any\n                        other purpose with your consent.\n                    </p>\n                    <h3 style=\"text-align: center\">SHARING OF PERSONAL INFORMATION</h3>\n                    <p>\n                        We will not disclose your Personal Information other than as described below, and we do\n                        not and will not sell your Personal Information to anyone.\n                    </p>\n                    <p>\n                        We may share the Personal Information we collect from and about you (1) to fulfill the\n                        purpose for which you provided it; (2) with your consent; (3) for legal, protection, and\n                        safety purposes; (4) to comply with any court order, law, or legal process, including to respond\n                        to any government or regulatory request; (5) to protect the rights of XDC Network Governance DApp, our agents,\n                        customers, and others, including by enforcing our agreements, policies, and terms of service;\n                        and (6) with those who need it to do work for us (our Service Providers, as defined below).\n                    </p>\n                    <h5>Service providers</h5>\n                    <p>\n                        We may contract with third parties to perform functions related to the Services\n                        (“Service Providers”). In general, Service Providers will have access to your\n                        Personal Information only to the extent needed to perform their business functions but\n                        may not use or share that personal information for purposes outside the scope of\n                        their functions related to the Services.\n                    </p>\n                    <h3 style=\"text-align: center\">LINKS TO OTHER SITES</h3>\n                    <p>\n                        The Services contain links to other third-party websites or applications.\n                        Once you click on such a link and leave the Site or are redirected to a third-party website\n                        or application, you are no longer governed by this Policy. Any information you provide on\n                        those sites is subject to that third party’s privacy policy and we are not responsible for the\n                        privacy and security practices and policies of those third-party sites or applications.\n                    </p>\n                    <h3 style=\"text-align: center\">OUR COMMITMENT TOWARDS CHILDREN'S PRIVACY</h3>\n                    <p>\n                        We do not direct the Services to, nor do we knowingly collect any Personal Information\n                        from children under 13. Children under 13 are not eligible to use the Services. If we learn that\n                        someone using our Services is under 13 years of age, we will take steps to remove any Personal\n                        Information from our database and to prevent them from utilizing the Services.\n                    </p>\n                    <h3 style=\"text-align: center\">SECURITY OF YOUR PERSONAL INFORMATION & RIGHTS</h3>\n                    <p>\n                        We are committed to protecting the security of Personal Information. We have taken certain\n                        physical, administrative, and technical steps to help safeguard the information we collect\n                        from and about you. While we take steps to help ensure the integrity and security of our network\n                        and systems, we cannot guarantee our security measures.\n                    </p>\n                    <p>\n                        In certain circumstances, you will also have the following rights:\n                    </p>\n                    <ol>\n                        <li>\n                            Right to access: the right to request certain information about, access to and copies of any\n                            Personal Information about you that we are holding (please note that you are entitled to\n                            request one copy of the Personal Information that we hold about you at no cost, but for any\n                            further copies, we reservethe right to charge a reasonable fee based on\n                            administration costs);\n                        </li>\n                        <li>\n                            Right to rectification: the right to have your\n                            Personal Information rectified if it is inaccurate or incomplete;\n                        </li>\n                        <li>\n                            Right to erasure/“right to be forgotten”: where the processing of your information is based\n                            on your consent, the right to withdraw that consent and the right to request that we delete\n                            or erase your Personal Information from our systems (however, this will not apply if we are\n                            required to hold on to the information for compliance with any legal obligation, or if we\n                            require the information to establish or defend any legal claim);\n                        </li>\n                        <li>\n                            Right to restriction of use of your information: the right to stop us from using your\n                            Personal Information or limit the way in which we can use it;\n                        </li>\n                        <li>\n                            Right to data portability: the right to request that we return any information you have\n                            provided in a structured, commonly used, and machine-readable format, or that we send it\n                            directly to another company, where technically feasible; and\n                        </li>\n                        <li>\n                            Right to object: the right to object to our use of your Personal Information including\n                            where we use it for our legitimate interests.\n                        </li>\n                    </ol>\n                    <p>\n                        Requests in relation to the above rights should be sent to:\n                        <a :href=\"`mail:to${email}`\">{{ email }}</a>\n                    </p>\n                    <h5>Legal Basis for Processing</h5>\n                    <p>\n                        The following legal bases apply to the ways in which we use and share an individual’s\n                        Personal Information:\n                    </p>\n                    <ol>\n                        <li>\n                            We rely on an individual’s consent to process Personal Information to provide support\n                            and/or carry out Promotions. This consent can be withdrawn at any time.\n                        </li>\n                        <li>\n                            We also process the information provided by an individual in our legitimate interests\n                            in ensuring our business is conducted legitimately and to a high standard.\n                        </li>\n                    </ol>\n                    <h3 style=\"text-align: center\">RETENTION</h3>\n                    <p>\n                        We will retain the information you provide in order to process your request, provide\n                        support, and/or carry out and fulfill our Promotions. If you request support, we will retain\n                        your information for no longer than six (6) months. If you participate in a Promotion, we will\n                        retain your information until the Promotion is carried out and ninety (90) days after any\n                        prize, reward, or offer is fulfilled. Your Personal Information will then be deleted.\n                    </p>\n                    <h3 style=\"text-align: center\">CONTACT INFORMATION</h3>\n                    <p>\n                        We welcome your comments or questions about this Policy. You may contact us at\n                        <a :href=\"`mail:to${email}`\">{{ email }}</a>\n                    </p>\n                    <h3 style=\"text-align: center\">CHANGES TO PRIVACY POLICY</h3>\n                    <p>\n                        We may modify this Policy from time to time. If we make any changes, we will change the\n                        Last Updated date above. We also may provide additional notice, as applicable, depending on\n                        the type of change. If you object to any changes, you may stop using the Services. Your\n                        continued use of the Services after we publish or otherwise provide notice about our changes\n                        to the Policy means that you are consenting to the updated Policy.\n                    </p>\n                </div>\n            </b-card>\n        </div>\n    </div>\n</template>\n<script>\nexport default {\n    data: () => {\n        return {\n            email: 'admin@xinfin.network'\n        }\n    }\n}\n</script>\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row\"},[_c('b-card',{staticClass:\"XDC-card\"},[_c('div',{staticClass:\"col-12\"},[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"\\n                    PRIVACY POLICY\\n                \")])]),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('p',[_vm._v(\"\\n                    Last updated: November, 2018\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"INTRODUCTION\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    Welcome to XDC Network Governance DApp, a free, open-source, client-side tool for interacting with the\\n                    blockchain. XDC Network values privacy and we make a concerted effort to minimize and,\\n                    to the extent possible, eliminate the exposure of personal data during the use of our\\n                    interface. XDC Network Governance DApp does not collect, hold, or store keys, account information,\\n                    or passwords. We do not collect data passively, do not monetize the collection of data,\\n                    and do not use your data for marketing or advertising.\\n                \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    To the extent we collect any personal information, this privacy policy (“Policy”)\\n                    describes how XDC Network Governance DApp collects, uses, and shares personal information of people who visit\\n                    our website (the “Site”), use our mobile application, XDC Network Governance DApp (the “App”),\\n                    or otherwise use our services (collectively, the “Services”).\\n                \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    This Policy applies to anyone who accesses the Services. Please read the Policy carefully to\\n                    understand our practices regarding your information and how we will treat it.\\n                    By visiting the Site, App, and/or using the Services, you acknowledge that the collection,\\n                    use, and sharing of your information will take place as described in this Policy.\\n                \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    So that we are clear about the terminology we are using, when we use the phrase\\n                    “Personal Information” in this Privacy Policy, we mean information about an individual that\\n                    (either by itself or when combined with information from other available sources) allows that\\n                    individual to be identified, including, the individual’s name,\\n                    telephone number, or e-mail address.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"\\n                    THE BLOCKCHAIN\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    Due to the inherent transparency of many blockchains, including the XDC Network Blockchain,\\n                    transactions that individuals broadcast via XDC Network Governance DApp may be publicly accessible.\\n                    This includes, but is not limited to, your public sending address, the public address of the\\n                    receiver, the amount sent or received, and any other data a user has chosen to include in a\\n                    given transaction. Information stored on a blockchain may be public, immutable, and difficult or\\n                    even impossible to remove or delete. Transactions and addresses may reveal information\\n                    about the user’s identity and information can potentially be correlated now or in the future\\n                    by any party who chooses to do so, including law enforcement. Users are encouraged\\n                    to review how privacy and transparency on the blockchain works.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"WHAT WE COLLECT\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We collect information about you as described below.\\n                    We use this information to enhance your experience with our Services.\\n                \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"Information You Provide\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We may collect Personal Information you choose to provide to us. For example,\\n                    when you contact us for support through the Services, you give us with your e-mail address and\\n                    any other information that you choose to provide. Also, if you participate in a\\n                    XDC Network Governance DApp offer, give-away, or promotion (“Promotion”), you provide your name,\\n                    e-mail address, and mailing address.\\n                \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"California Do Not Track Disclosures\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    XDC Network Governance DApp does not track users over time and across third party websites to provide targeted\\n                    advertising and therefore does not respond to Do Not Track (DNT) signals.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"USE OF INFORMATION\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We use the information that we have about you to provide support and certain Services to you.\\n                \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We may use the Personal Information we collect from and about you to (1) provide you with\\n                    information or services that you request from us, including to respond to your comments,\\n                    questions, and/or provide customer service; (2) monitor and analyze usage and trends and\\n                    personalize and improve the Services and your experience using the Services; and (3) for any\\n                    other purpose with your consent.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"SHARING OF PERSONAL INFORMATION\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We will not disclose your Personal Information other than as described below, and we do\\n                    not and will not sell your Personal Information to anyone.\\n                \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We may share the Personal Information we collect from and about you (1) to fulfill the\\n                    purpose for which you provided it; (2) with your consent; (3) for legal, protection, and\\n                    safety purposes; (4) to comply with any court order, law, or legal process, including to respond\\n                    to any government or regulatory request; (5) to protect the rights of XDC Network Governance DApp, our agents,\\n                    customers, and others, including by enforcing our agreements, policies, and terms of service;\\n                    and (6) with those who need it to do work for us (our Service Providers, as defined below).\\n                \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"Service providers\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We may contract with third parties to perform functions related to the Services\\n                    (“Service Providers”). In general, Service Providers will have access to your\\n                    Personal Information only to the extent needed to perform their business functions but\\n                    may not use or share that personal information for purposes outside the scope of\\n                    their functions related to the Services.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"LINKS TO OTHER SITES\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    The Services contain links to other third-party websites or applications.\\n                    Once you click on such a link and leave the Site or are redirected to a third-party website\\n                    or application, you are no longer governed by this Policy. Any information you provide on\\n                    those sites is subject to that third party’s privacy policy and we are not responsible for the\\n                    privacy and security practices and policies of those third-party sites or applications.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"OUR COMMITMENT TOWARDS CHILDREN'S PRIVACY\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We do not direct the Services to, nor do we knowingly collect any Personal Information\\n                    from children under 13. Children under 13 are not eligible to use the Services. If we learn that\\n                    someone using our Services is under 13 years of age, we will take steps to remove any Personal\\n                    Information from our database and to prevent them from utilizing the Services.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"SECURITY OF YOUR PERSONAL INFORMATION & RIGHTS\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We are committed to protecting the security of Personal Information. We have taken certain\\n                    physical, administrative, and technical steps to help safeguard the information we collect\\n                    from and about you. While we take steps to help ensure the integrity and security of our network\\n                    and systems, we cannot guarantee our security measures.\\n                \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    In certain circumstances, you will also have the following rights:\\n                \")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"\\n                        Right to access: the right to request certain information about, access to and copies of any\\n                        Personal Information about you that we are holding (please note that you are entitled to\\n                        request one copy of the Personal Information that we hold about you at no cost, but for any\\n                        further copies, we reservethe right to charge a reasonable fee based on\\n                        administration costs);\\n                    \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                        Right to rectification: the right to have your\\n                        Personal Information rectified if it is inaccurate or incomplete;\\n                    \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                        Right to erasure/“right to be forgotten”: where the processing of your information is based\\n                        on your consent, the right to withdraw that consent and the right to request that we delete\\n                        or erase your Personal Information from our systems (however, this will not apply if we are\\n                        required to hold on to the information for compliance with any legal obligation, or if we\\n                        require the information to establish or defend any legal claim);\\n                    \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                        Right to restriction of use of your information: the right to stop us from using your\\n                        Personal Information or limit the way in which we can use it;\\n                    \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                        Right to data portability: the right to request that we return any information you have\\n                        provided in a structured, commonly used, and machine-readable format, or that we send it\\n                        directly to another company, where technically feasible; and\\n                    \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                        Right to object: the right to object to our use of your Personal Information including\\n                        where we use it for our legitimate interests.\\n                    \")])]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    Requests in relation to the above rights should be sent to:\\n                    \"),_c('a',{attrs:{\"href\":`mail:to${_vm.email}`}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('h5',[_vm._v(\"Legal Basis for Processing\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    The following legal bases apply to the ways in which we use and share an individual’s\\n                    Personal Information:\\n                \")]),_vm._v(\" \"),_c('ol',[_c('li',[_vm._v(\"\\n                        We rely on an individual’s consent to process Personal Information to provide support\\n                        and/or carry out Promotions. This consent can be withdrawn at any time.\\n                    \")]),_vm._v(\" \"),_c('li',[_vm._v(\"\\n                        We also process the information provided by an individual in our legitimate interests\\n                        in ensuring our business is conducted legitimately and to a high standard.\\n                    \")])]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"RETENTION\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We will retain the information you provide in order to process your request, provide\\n                    support, and/or carry out and fulfill our Promotions. If you request support, we will retain\\n                    your information for no longer than six (6) months. If you participate in a Promotion, we will\\n                    retain your information until the Promotion is carried out and ninety (90) days after any\\n                    prize, reward, or offer is fulfilled. Your Personal Information will then be deleted.\\n                \")]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"CONTACT INFORMATION\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We welcome your comments or questions about this Policy. You may contact us at\\n                    \"),_c('a',{attrs:{\"href\":`mail:to${_vm.email}`}},[_vm._v(_vm._s(_vm.email))])]),_vm._v(\" \"),_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"CHANGES TO PRIVACY POLICY\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                    We may modify this Policy from time to time. If we make any changes, we will change the\\n                    Last Updated date above. We also may provide additional notice, as applicable, depending on\\n                    the type of change. If you object to any changes, you may stop using the Services. Your\\n                    continued use of the Services after we publish or otherwise provide notice about our changes\\n                    to the Policy means that you are consenting to the updated Policy.\\n                \")])])])],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./TermsOfService.vue?vue&type=template&id=3c315ed9&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"container\"},[_c('b-card',{staticClass:\"XDC-card\"},[_c('h1',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"\\n            Terms Of Service\\n        \")]),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('h3',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(\"LEGAL DISCLAIMER\")]),_vm._v(\" \"),_c('h5',[_vm._v(\"1. Risks related to the use of XDC Network Governance DApp \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                XDC Network Governance DApp will not be responsible for any losses, damages or claims arising from\\n                events falling within the scope of the following five categories:\\n            \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                (1) Mistakes made by the user of any cryptocurrency-related software or service,\\n                e.g., forgotten passwords, and payments sent to wrong coin addresses.\\n            \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                (2) Software problems of XDC Network Governance DApp and/or any cryptocurrency-related software\\n                or service, e.g., corrupted wallet file, incorrectly constructed transactions,\\n                unsafe cryptographic libraries, malware affecting the wallet and/or any\\n                cryptocurrency-related software or service.\\n            \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                (3) Technical failures in the hardware of the user of any cryptocurrency-related\\n                software or service, e.g., data loss due to a faulty or damaged storage device.\\n            \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                (4) Security problems experienced by the user of any cryptocurrency-related\\n                software or service, e.g., unauthorized access to users' wallets and/or accounts.\\n            \")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                (5) Actions or inactions of third parties and/or events experienced by third\\n                parties, e.g., bankruptcy of service providers, information security attacks\\n                on service providers, and fraud conducted by third parties.\\n            \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"2. Trading and Investment risks\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                There is considerable exposure to risk in any crypto-currency exchange transaction.\\n                Any transaction involving currencies involves risks including, but not limited to,\\n                the potential for changing economic conditions that may substantially affect the price\\n                or liquidity of a currency. Investments in crypto-currency exchange speculation may also\\n                be susceptible to sharp rises and falls as the relevant market values fluctuate. It is for\\n                this reason that when speculating in such markets it is advisable to use only risk capital.\\n            \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"3. Compliance with tax obligations\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                The users of XDC Network Governance DApp are solely responsible to determinate what, if any, taxes apply\\n                to their crypto-currency transactions. The owners of, or contributors to, XDC Network Governance DApp are NOT\\n                responsible for determining the taxes that apply to crypto-currency transactions.\\n            \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"4. Limitation of liability\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                Unless otherwise required by law, in no event shall the owners of, or contributors to,\\n                the wallet be liable for any damages of any kind, including, but not limited to, loss of use,\\n                loss of profits, or loss of data arising out of or in any way connected with the use of the wallet.\\n                In no way are the owners of, or contributors to, the wallet responsible for the actions, decisions,\\n                or other behavior taken or not taken by you in reliance upon the wallet.\\n            \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"5. Arbitration\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                The user of XDC Network Governance DApp agrees to arbitrate any dispute arising from or in connection with\\n                the service or this disclaimer, except for disputes related to copyrights, logos, trademarks,\\n                trade names, trade secrets or patents.\\n            \")]),_vm._v(\" \"),_c('h5',[_vm._v(\"6. Last amendment\")]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n                This disclaimer was amended for the last time on November 22nd, 2018.\\n            \")])])])],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport VueAnalytics from 'vue-analytics'\nimport App from './App.vue'\nimport routes from './routes'\n\nimport BootstrapVue from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport Web3 from 'xdc3'\nimport { EthereumProvider } from '@walletconnect/ethereum-provider'\n// import { default as contract } from 'truffle-contract'\n// import XDCValidatorArtifacts from '../build/contracts/XDCValidator.json'\nimport Toasted from 'vue-toasted'\nimport axios from 'axios'\n// import BigNumber from 'bignumber.js'\n// import HighchartsVue from 'highcharts-vue'\n// import Highcharts from 'highcharts'\n// import stockInit from 'highcharts/modules/stock'\nimport VueClipboards from 'vue-clipboards'\nimport Vuex from 'vuex'\n// import HDWalletProvider from 'truffle-hdwallet-provider'\nimport { HDWalletProvider } from '../helpers.js'\nimport localStorage from 'store'\n// Libusb is included as a submodule.\n// On Linux, you'll need libudev to build libusb.\n// On Ubuntu/Debian: sudo apt-get install build-essential libudev-dev\n// import Transport from '@ledgerhq/hw-transport-node-hid'\n\n// import Transport from '@ledgerhq/hw-transport-u2f' // for browser\nimport TransportWebUSB from '@ledgerhq/hw-transport-webusb'\nimport Eth from '@ledgerhq/hw-app-eth'\nimport TrezorConnect from 'trezor-connect'\nimport Transaction from 'ethereumjs-tx'\nimport * as HDKey from 'hdkey'\nimport * as ethUtils from 'ethereumjs-util'\nimport Meta from 'vue-meta'\nimport Helper from './utils'\n\nVue.use(Meta)\nVue.use(BootstrapVue)\nVue.use(VueClipboards)\n\nVue.use(Toasted, {\n    position: 'bottom-right',\n    theme: 'bubble',\n    duration: 4000,\n    action : {\n        text : 'Dismiss',\n        onClick : (e, toastObject) => {\n            toastObject.goAway(0)\n        }\n    },\n    singleton: true\n})\n\n// set trezor's manifest\nTrezorConnect.manifest({\n    email: 'admin@xinfin.network',\n    appUrl: 'https://master.xinfin.network'\n})\n\n// stockInit(Highcharts)\n// Vue.use(HighchartsVue)\n\n// Vue.prototype.XDCValidator = contract(XDCValidatorArtifacts)\nVue.prototype.isElectron = !!(window && window.process && window.process.type)\n\nconst ethereumProvider = async (showQrModal, blockchain) => {\n    const walletConnectProvider = await EthereumProvider.init({\n        projectId: blockchain.walletconnectProjectId,\n        showQrModal: showQrModal,\n        qrModalOptions: { themeMode: 'light' },\n        chains: [50],\n        optionalChains:[1, 51],\n        methods: ['eth_sendTransaction', 'personal_sign'],\n        rpcMap:{\n            [blockchain.networkId]:blockchain.rpc,\n            51 :'https://rpc.apothem.network/'\n        },\n        metadata: {\n            name: 'XDC Network Governance Dapp',\n            description: 'Providing a professional UI which allows coin-holders to stake for masternodes, decentralized governance and explore masternode performance statistics',\n            url: 'https://master.xinfin.network/',\n            icons: ['https://master.xinfin.network/app/assets/img/logo.svg']\n        }\n    })\n    return walletConnectProvider\n}\n// wallet-connect global provider\nVue.prototype.walletConnectProvider = async (projectId) => {\n    return ethereumProvider(true, projectId)\n}\n\nVue.prototype.setupProvider = async function (provider, wjs) {\n    Vue.prototype.NetworkProvider = provider\n    if (wjs instanceof Web3) {\n        const config = await getConfig()\n        localStorage.set('configMaster', config)\n        Vue.prototype.web3 = wjs\n        Vue.prototype.XDCValidator = new wjs.eth.Contract(\n            Helper.XDCValidatorArtifacts.abi,\n            config.blockchain.validatorAddress\n        )\n    }\n}\n\nVue.prototype.getAccount = async function () {\n    const provider = Vue.prototype.NetworkProvider || ''\n    const wjs = Vue.prototype.web3\n    let account\n    switch (provider) {\n    case 'connect-wallet':\n        account = (await wjs.eth.getAccounts())[0]\n        break\n    case 'metamask':\n        // Request account access if needed - for metamask\n        if (window.ethereum) {\n            await window.ethereum.enable()\n            // await window.ethereum.request({ method: 'eth_requestAccounts' })\n        }\n        account = (await wjs.eth.getAccounts())[0]\n        break\n    case 'xinpay':\n        // Request account access if needed - for metamask\n        if (window.xdcchain) {\n            await window.xdcchain.enable()\n        }\n        account = (await wjs.eth.getAccounts())[0]\n        break\n    case 'XDCwalletDapp':\n        account = (await wjs.eth.getAccounts())[0]\n        break\n    case 'XDCwallet':\n        account = this.$store.state.address\n        break\n    case 'custom':\n        account = (await wjs.eth.getAccounts())[0]\n        break\n    case 'ledger':\n        try {\n            if (!Vue.prototype.appEth) {\n                // let transport = await new Transport()\n                let transport = await TransportWebUSB.create()\n                Vue.prototype.appEth = await new Eth(transport)\n            }\n            let ethAppConfig = await Vue.prototype.appEth.getAppConfiguration()\n            if (!ethAppConfig.arbitraryDataEnabled) {\n                throw new Error(`Please go to App Setting\n                    to enable contract data and display data on your device!`)\n            }\n            let result = await Vue.prototype.appEth.getAddress(\n                localStorage.get('hdDerivationPath')\n            )\n            account = result.address\n        } catch (error) {\n            console.log(error)\n            throw error\n        }\n        break\n    case 'trezor':\n        const payload = Vue.prototype.trezorPayload || localStorage.get('trezorPayload')\n        const offset = localStorage.get('offset')\n        account = Vue.prototype.HDWalletCreate(\n            payload,\n            offset\n        )\n        localStorage.set('trezorPayload', { xpub: payload.xpub })\n        break\n    default:\n        break\n    }\n    if (!account || account.length <= 0) {\n        console.log(`Couldn't get any accounts! Make sure\n            your Ethereum client is configured correctly.`)\n    }\n    return account\n}\n\nVue.prototype.loadMultipleLedgerWallets = async function (offset, limit) {\n    // let u2fSupported = await Transport.isSupported()\n    let u2fSupported = await TransportWebUSB.isSupported()\n    if (!u2fSupported) {\n        throw new Error(`U2F not supported in this browser. \n                Please try using Google Chrome with a secure (SSL / HTTPS) connection!`)\n    }\n    await Vue.prototype.detectNetwork('ledger')\n    if (!Vue.prototype.appEth) {\n        let transport = await TransportWebUSB.create()\n        Vue.prototype.appEth = await new Eth(transport)\n    }\n    const payload = Vue.prototype.ledgerPayload\n    let web3 = Vue.prototype.web3\n    let balance = 0\n    let convertedAddress\n    let wallets = {}\n\n    for (let i = offset; i < (offset + limit); i++) {\n        convertedAddress = Vue.prototype.HDWalletCreate(payload, i)\n        balance = await web3.eth.getBalance(convertedAddress)\n        wallets[i] = {\n            address: convertedAddress,\n            balance: parseFloat(web3.utils.fromWei(balance, 'ether')).toFixed(2)\n        }\n    }\n    Vue.prototype.ledgerPayload = ''\n    return wallets\n}\n\nVue.prototype.unlockTrezor = async () => {\n    try {\n        const result = await TrezorConnect.getPublicKey({\n            path: localStorage.get('hdDerivationPath')\n        })\n        Vue.prototype.trezorPayload = result.payload\n    } catch (error) {\n        console.log(error)\n        throw error\n    }\n}\n\nVue.prototype.unlockLedger = async () => {\n    try {\n        if (!Vue.prototype.appEth) {\n            // let transport = await Transport.create()\n            let transport = await TransportWebUSB.create()\n            Vue.prototype.appEth = await new Eth(transport)\n        }\n        const path = localStorage.get('hdDerivationPath')\n\n        const result = await Vue.prototype.appEth.getAddress(\n            path,\n            false,\n            true\n        )\n        Vue.prototype.ledgerPayload = result\n    } catch (error) {\n        console.log(error)\n        throw error\n    }\n}\n\nVue.prototype.HDWalletCreate = (payload, index) => {\n    const provider = Vue.prototype.NetworkProvider\n    let derivedKey\n    if (provider === 'trezor') {\n        const xpub = payload.xpub\n        const hdWallet = HDKey.fromExtendedKey(xpub)\n        derivedKey = hdWallet.derive('m/' + index)\n    } else {\n        const pubKey = payload.publicKey\n        const chainCode = payload.chainCode\n        const hdkey = new HDKey()\n        hdkey.publicKey = Buffer.from(pubKey, 'hex')\n        hdkey.chainCode = Buffer.from(chainCode, 'hex')\n        derivedKey = hdkey.derive('m/' + index)\n    }\n    let pubKey = ethUtils.bufferToHex(derivedKey.publicKey)\n    const buff = ethUtils.publicToAddress(pubKey, true)\n\n    return ethUtils.bufferToHex(buff)\n}\n\nVue.prototype.loadTrezorWallets = async (offset, limit) => {\n    try {\n        const wallets = {}\n        const payload = Vue.prototype.trezorPayload\n        if (payload && !payload.error) {\n            let convertedAddress\n            let balance\n            let web3\n            if (!Vue.prototype.web3) {\n                await Vue.prototype.detectNetwork('trezor')\n            }\n            web3 = Vue.prototype.web3\n            for (let i = offset; i < (offset + limit); i++) {\n                convertedAddress = Vue.prototype.HDWalletCreate(payload, i)\n                balance = await web3.eth.getBalance(convertedAddress)\n                wallets[i] = {\n                    address: convertedAddress,\n                    balance: parseFloat(web3.utils.fromWei(balance, 'ether')).toFixed(2)\n                }\n            }\n            return wallets\n        } else {\n            throw payload.error || 'Something went wrong'\n        }\n    } catch (error) {\n        console.log(error)\n        throw error\n    }\n}\n\nVue.prototype.formatNumber = Helper.formatNumber\n\nVue.prototype.formatCurrencySymbol = Helper.formatCurrencySymbol\n\nVue.prototype.getCurrencySymbol = Helper.getCurrencySymbol\n\nVue.prototype.checkLongNumber = Helper.checkLongNumber\n\nVue.prototype.formatBigNumber = Helper.formatBigNumber\n\nconst getConfig = Vue.prototype.appConfig = async function () {\n    let config = await axios.get('/api/config')\n    return config.data\n}\n\nVue.prototype.getSecondsToHms = Helper.getSecondsToHms\n\nVue.prototype.serializeQuery = Helper.serializeQuery\n\nVue.prototype.truncate = Helper.truncate\n\nVue.use(VueRouter)\n\nconst router = new VueRouter({\n    mode: 'history',\n    routes\n})\n\nrouter.beforeEach(async (to, from, next) => {\n    const provider = Vue.prototype.NetworkProvider || localStorage.get('network') || null\n    await Vue.prototype.detectNetwork(provider)\n    next()\n})\n\ngetConfig().then((config) => {\n    // let provider = 'XDCwallet'\n    // var web3js = new Web3(new Web3.providers.HttpProvider(config.blockchain.internalRpc))\n    // Vue.prototype.setupProvider(provider, web3js)\n    localStorage.set('configMaster', config)\n    Vue.use(VueAnalytics, {\n        id: config.GA,\n        linkers: ['master.xinfin.network'],\n        router,\n        autoTraking: {\n            screenView: true\n        }\n    })\n}).catch(e => {\n    console.log(e)\n    throw e\n})\n\nVue.use(Vuex)\n\nconst store = new Vuex.Store({\n    state: {\n        address: null\n    }\n})\nVue.prototype.detectNetwork = async function (provider) {\n    try {\n        const config = localStorage.get('configMaster') || await getConfig()\n        let wjs = this.web3\n        const ewjs = await ethereumProvider(false, config.blockchain)\n        const chainConfig = config.blockchain\n        if (!wjs) {\n            switch (provider) {\n            case 'connect-wallet':\n                if (ewjs.connected) {\n                    ewjs.on('disconnect', (code, reason) => {\n                        console.log('Disconnected!')\n                        localStorage.clearAll()\n                        Object.assign(store.state, Helper.getDefaultState())\n                        router.go({\n                            path: '/'\n                        })\n                    })\n\n                    let p = ewjs\n                    wjs = new Web3(p)\n                }\n                break\n            case 'metamask':\n                if (window.ethereum) {\n                    let p = window.ethereum\n                    wjs = new Web3(p)\n                }\n                break\n            case 'XDCwalletDapp':\n                if (window.web3) {\n                    if (window.web3.currentProvider) {\n                        let p = window.web3.currentProvider\n                        wjs = new Web3(p)\n                    } else {\n                        wjs = window.web3\n                    }\n                }\n                break\n            case 'xinpay':\n                if (window.XDCWeb3) {\n                    if (window.XDCWeb3.currentProvider) {\n                        let pp = window.XDCWeb3.currentProvider\n                        wjs = new Web3(pp)\n                    } else {\n                        wjs = window.XDCWeb3\n                    }\n                }\n                break\n            case 'XDCwallet':\n                wjs = new Web3(new HDWalletProvider(\n                    '',\n                    chainConfig.rpc, 0, 1, true))\n                break\n            case 'trezor':\n            case 'ledger':\n                // wjs = new Web3(new Web3.providers.WebsocketProvider(chainConfig.ws))\n                wjs = new Web3(new Web3.providers.HttpProvider(chainConfig.rpc))\n                break\n            default:\n                break\n            }\n            await this.setupProvider(provider, await wjs)\n        }\n    } catch (error) {\n        console.log(error)\n    }\n}\n\n/**\n * @return XDCValidator contract instance\n */\nVue.prototype.getXDCValidatorInstance = async function () {\n    // workaround for web3 version 1.0.0\n    // @link https://github.com/trufflesuite/truffle-contract/issues/57#issuecomment-331300494\n    if (typeof Vue.prototype.XDCValidator.currentProvider.sendAsync !== 'function') {\n        Vue.prototype.XDCValidator.currentProvider.sendAsync = function () {\n            return Vue.prototype.XDCValidator.currentProvider.send.apply(\n                Vue.prototype.XDCValidator.currentProvider,\n                arguments\n            )\n        }\n    }\n    let instance = await Vue.prototype.XDCValidator.deployed()\n    return instance\n}\n\n/**\n * @param object txParams\n * @return object signature {r, s, v}\n */\nVue.prototype.signTransaction = async function (txParams) {\n    const path = localStorage.get('hdDerivationPath')\n    const provider = Vue.prototype.NetworkProvider\n    let signature\n    if (provider === 'ledger') {\n        const config = localStorage.get('configMaster') || await getConfig()\n        const chainConfig = config.blockchain\n        const rawTx = new Transaction(txParams)\n        rawTx.v = Buffer.from([chainConfig.networkId])\n        const serializedRawTx = rawTx.serialize().toString('hex')\n        signature = await Vue.prototype.appEth.signTransaction(\n            path,\n            serializedRawTx\n        )\n    }\n    if (provider === 'trezor') {\n        try {\n            const result = await TrezorConnect.ethereumSignTransaction({\n                path,\n                transaction: txParams\n            })\n            signature = result.payload\n        } catch (error) {\n            console.log(error)\n            throw error\n        }\n    }\n    return signature\n}\n\n/**\n * @param object txParams\n * @param object signature {r,s,v}\n * @return transactionReceipt\n */\nVue.prototype.sendSignedTransaction = function (txParams, signature) {\n    return new Promise((resolve, reject) => {\n        try {\n            // \"hexify\" the keys\n            Object.keys(signature).map((key, _) => {\n                if (signature[key].startsWith('0x')) {\n                    return signature[key]\n                } else signature[key] = '0x' + signature[key]\n            })\n            let txObj = Object.assign({}, txParams, signature)\n            let tx = new Transaction(txObj)\n            let serializedTx = '0x' + tx.serialize().toString('hex')\n            // web3 v0.2, method name is sendRawTransaction\n            // You are using web3 v1.0. The method was renamed to sendSignedTransaction.\n            Vue.prototype.web3.eth.sendSignedTransaction(\n                serializedTx\n            ).on('transactionHash', txHash => resolve(txHash))\n                .catch(error => reject(error))\n        } catch (error) {\n            reject(error)\n        }\n    })\n}\n\nVue.prototype.signMessage = async function (message) {\n    try {\n        const path = localStorage.get('hdDerivationPath')\n        const provider = Vue.prototype.NetworkProvider\n        let result\n        switch (provider) {\n        case 'ledger':\n            const signature = await Vue.prototype.appEth.signPersonalMessage(\n                path,\n                Buffer.from(message).toString('hex')\n            )\n            let v = signature['v'] - 27\n            v = v.toString(16)\n            if (v.length < 2) {\n                v = '0' + v\n            }\n            result = '0x' + signature['r'] + signature['s'] + v\n            break\n        case 'trezor':\n            const sig = await TrezorConnect.ethereumSignMessage({\n                path,\n                message\n            })\n            result = '0x' + sig.payload.signature || ''\n            break\n        default:\n            break\n        }\n        return result\n    } catch (error) {\n        console.log(error)\n        throw error\n    }\n}\n\nconst EventBus = new Vue()\n\nVue.prototype.$bus = EventBus\n\nnew Vue({ // eslint-disable-line no-new\n    el: '#app',\n    store,\n    router: router,\n    components: { App },\n    template: '<App/>'\n})\n","const bip39 = require('bip39')\r\n// const hdkey = require('ethereumjs-wallet/hdkey')\r\nconst { hdkey } = require('ethereumjs-wallet')\r\nconst ProviderEngine = require('web3-provider-engine')\r\nconst FiltersSubprovider = require('web3-provider-engine/subproviders/filters.js')\r\nconst HookedSubprovider = require('web3-provider-engine/subproviders/hooked-wallet.js')\r\nconst RpcSubprovider = require('web3-provider-engine/subproviders/rpc.js')\r\n// const ProviderSubprovider = require('web3-provider-engine/subproviders/provider.js')\r\n// const Web3 = require('xdc3')\r\nconst Transaction = require('ethereumjs-tx')\r\nconst ethUtil = require('ethereumjs-util')\r\n\r\n/* eslint-disable */\r\n\r\nfunction HDWalletProvider (\r\n    mnemonic,\r\n    provider_url,\r\n    address_index = 0,\r\n    num_addresses = 1,\r\n    wallet_hdpath = \"m/44'/551'/0'/0/\"\r\n  ) {\r\n    this.mnemonic = mnemonic\r\n    this.hdwallet = hdkey.fromMasterSeed(bip39.mnemonicToSeed(mnemonic))\r\n    this.wallet_hdpath = wallet_hdpath\r\n    this.wallets = {}\r\n    this.addresses = []\r\n    for (let i = address_index; i < address_index + num_addresses; i++) {\r\n        const wallet = this.hdwallet.derivePath(this.wallet_hdpath + '/' + i).getWallet()\r\n        const addr = 'xdc' + wallet.getAddress().toString('hex')\r\n        this.addresses.push(addr)\r\n        this.wallets[addr] = wallet\r\n    }\r\n\r\n    const tmp_accounts = this.addresses\r\n    const tmp_wallets = this.wallets\r\n\r\n    this.engine = new ProviderEngine()\r\n    this.engine.addProvider(new HookedSubprovider({\r\n        getAccounts: function (cb) { cb(null, tmp_accounts) },\r\n        getPrivateKey: function (address, cb) {\r\n            if (!tmp_wallets[address]) { return cb('Account not found') }\r\n            else { cb(null, tmp_wallets[address].getPrivateKey().toString('hex')) }\r\n        },\r\n        signTransaction: function (txParams, cb) {\r\n            let pkey\r\n            if (tmp_wallets[txParams.from]) { pkey = tmp_wallets[txParams.from].getPrivateKey() }\r\n            else { cb('Account not found') }\r\n            const tx = new Transaction(txParams)\r\n            tx.sign(pkey)\r\n            const rawTx = 'xdc' + tx.serialize().toString('hex')\r\n            cb(null, rawTx)\r\n\t\t},\r\n\t\tsignMessage(message, cb) {\r\n\t\t\tconst dataIfExists = message.data;\r\n\t\t\tif (!dataIfExists) {\r\n\t\t\t  cb('No data to sign');\r\n\t\t\t}\r\n\t\t\tif (!tmp_wallets[message.from]) {\r\n\t\t\t  cb('Account not found');\r\n\t\t\t}\r\n\t\t\tlet pkey = tmp_wallets[message.from].getPrivateKey();\r\n\t\t\tconst dataBuff = ethUtil.toBuffer(dataIfExists);\r\n\t\t\tconst msgHashBuff = ethUtil.hashPersonalMessage(dataBuff);\r\n\t\t\tconst sig = ethUtil.ecsign(msgHashBuff, pkey);\r\n\t\t\tconst rpcSig = ethUtil.toRpcSig(sig.v, sig.r, sig.s);\r\n\t\t\tcb(null, rpcSig);\r\n\t\t}\t\r\n    }))\r\n    this.engine.addProvider(new FiltersSubprovider())\r\n    // Web3.providers.HttpProvider.prototype.sendAsync = Web3.providers.HttpProvider.prototype.send\r\n    // this.engine.addProvider(new ProviderSubprovider(new Web3.providers.HttpProvider(provider_url)))\r\n    this.engine.addProvider(new RpcSubprovider({\r\n      rpcUrl: provider_url,\r\n    }))\r\n    this.engine.start() // Required by the provider engine.\r\n}\r\n\r\n    HDWalletProvider.prototype.sendAsync = function () {\r\n      this.engine.sendAsync.apply(this.engine, arguments)\r\n    }\r\n\r\n    HDWalletProvider.prototype.send = function () {\r\n      return this.engine.send.apply(this.engine, arguments)\r\n    }\r\n\r\n  // returns the address of the given address_index, first checking the cache\r\n  HDWalletProvider.prototype.getAddress = function (idx) {\r\n    if (!idx) { return this.addresses[0] }\r\n    else { return this.addresses[idx] }\r\n  }\r\n\r\n  // returns the addresses cache\r\nHDWalletProvider.prototype.getAddresses = function () {\r\n  return this.addresses\r\n}\r\n\r\nmodule.exports = { HDWalletProvider }\r\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n})\n\nvar _common = require('vuelidate/lib/validators/common')\n\nvar coinbaseRegex = /^xdc[a-fA-F0-9]{40}$/\n\nexports.default = (0, _common.regex)('coinbase', coinbaseRegex)\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":["_search","_created","_fetchData","_mounted","_host","_watch","_apply","_validate","_resign","_withdraw","_update","_value","_vote","_unvote","_save","_selectHdPath","name","props","items","type","Array","required","default","isAsync","Boolean","data","isOpen","results","search","arrowCounter","watch","_asyncToGenerator","_regeneratorRuntime","_callee","newValue","oldValue","_context","prev","next","doSearch","stop","_x","_x2","apply","arguments","mounted","document","addEventListener","handleClickOutside","destroyed","removeEventListener","methods","onChange","$emit","isLoading","filterResults","length","_this","filter","item","found","toLowerCase","indexOf","candidate","slice","formatResult","str","replace","RegExp","match","concat","setResult","result","$router","push","path","onArrowDown","onArrowUp","onEnter","getElementById","blur","onEsc","evt","$el","contains","target","_this2","_callee2","_yield$axios$get","_context2","axios","sent","component","_vm","this","_c","_self","staticClass","directives","rawName","value","expression","attrs","domProps","on","$event","composing","_k","keyCode","key","_v","_l","i","class","_s","rank","status","_e","metaInfo","title","meta","content","components","AutoComplete","isReady","web3","showProgressBar","selectedCandidate","isXDCnet","version","account","statusClass","interval","notifications","readNoti","needHelpLink","computed","mobileCheck","isAndroid","navigator","userAgent","isIOS","updated","checkNetworkAndLogin","clearInterval","created","_callee6","self","_context6","NetworkProvider","Error","$bus","$on","_callee3","_context3","setTimeout","getNotification","_callee4","_context4","setInterval","_callee5","_context5","t0","console","log","searchCandidate","e","_this3","preventDefault","to","trim","test","then","response","Object","keys","voter","$toasted","show","catch","goPage","s","_this4","_callee8","_context8","_callee7","contract","_context7","XDCValidator","store","$store","state","address","getAccount","substring","t1","signOut","assign","getDefaultState","go","readClick","_this5","_callee9","_context9","_this6","_callee10","_context10","map","d","isRead","event","createdAt","moment","fromNow","candidateName","markReadAll","_this7","_callee11","_context11","n","model","callback","$$v","slot","truncate","Date","getFullYear","_m","host","String","dataType","config","chartOptions","chart","backgroundColor","linearGradient","x1","x2","y2","stops","borderRadius","resetZoomButton","theme","fill","stroke","style","color","states","hover","relativeTo","spacing","zoomType","credits","enabled","text","xAxis","crosshair","gridLineColor","gridLineWidth","labels","lineColor","tickWidth","yAxis","max","tickInterval","plotOptions","areaspline","marker","radius","lineWidth","threshold","tooltip","crosshairs","shared","series","query","buildQuery","fetchData","bindDataToChart","colors","fillColor","appConfig","y1","lodashGet","db","epoch","chartData","chartLoading","error","abrupt","_x3","_x4","_x5","chartSeries","zIndex","r","idx","columns","_data","values","alias","encodeURI","Chart","voteActive","voteValue","unvoteValue","recentReward","voters","transactions","mnRewards","$route","params","balance","cap","latestBlock","latestSignedBlock","rewarded","hardwareInfo","dataCenterInfo","socials","voted","slashedTimes","mnRewardsFields","label","sortable","mnRewardsCurrentPage","mnRewardsSortBy","mnRewardsPerPage","mnRewardsSortDesc","mnRewardsTotalRows","voterFields","voterSortBy","voterSortDesc","voterCurrentPage","voterPerPage","voterTotalRows","txFields","txSortBy","txSortDesc","txCurrentPage","txPerPage","txTotalRows","loading","rewardLoading","voterLoading","txLoading","cpu0Series","currentBlock","loadedCPU","loadedMEM","isCandidate","currentTab","voterROI","mnROI","KYC","url","sortedVoters","sort","a","b","from","getCandidateData","getCandidateVoters","getCandidateTransactions","getCandidateRewards","blockchain","blockNumber","t2","res","t3","getAnnualReward","getEventClass","clazz","getDate","date","candidatePromise","c","youVoted","nodeId","owner","BigNumber","capacity","div","Math","pow","toNumber","hardware","dataCenter","location","eth","getBalance","getKYCStatus","getVoterCap","call","getCandidateCap","page","limit","serializeQuery","reward","isNaN","masternodeReward","toFixed","signNumber","rewardTime","dateTooltip","format","total","_self2","voterPromise","sortBy","sortDesc","v","_self3","txPromise","txs","tx","getColor","txPageChange","val","voterPageChange","rewardPageChange","getSlashedData","sortingChangeVoters","obj","sortingChangeTxes","filterSlash","filterName","_self4","slashedList","filterBy","_this8","isHashFound","getKYC","getHashCount","getLatestKYC","formatCurrencySymbol","formatBigNumber","_defineProperty","XDC","info__description","formatNumber","scopedSlots","_u","fn","id","index","modifiers","explorerUrl","checkpoint","chainConfig","fields","candidates","currentPage","perPage","totalRows","tableCssClass","hasProposed","hasResigned","activeCandidates","resignedMN","slashedMN","totalProposedNodes","currentTable","averageStakingROI","averageOwnerROI","wjs","XDCStakeAmount","window","currentProvider","isXDCWallet","Web3","setupProvider","getDataFromApi","getXDCValidatorInstance","allEvents","fromBlock","toBlock","err","args","getTableCssClass","cssClass","onRowClick","delay","toXDCNumber","wei","EXPONENTIAL_AT","weiNumber","toString","divided","dividedBy","_ref","isMasternode","isPenalty","totalResigned","totalProposed","totalSlashed","pageChange","loadDataTables","scrollTo","sortingChange","getSlashedMNs","_ref2","getProposedMNs","_ref3","_x6","getResignedMNs","_ref4","_x7","_x8","changeTable","tableName","averageroi","floor","toUpperCase","disabled","Number","Infinity","min","step","currentValue","decrementDisabled","incrementDisabled","inputDisabled","increment","newVal","plus","_updateValue","decrement","minus","NumberInput","VueQrcode","vueDropzone","vue2Dropzone","mixins","validationMixin","applyValue","coinbase","coinbaseError","provider","showQR","qrCode","candidateError","txFee","gasPrice","transactionHash","toastMessage","toastMessageError","file","dropzoneOptions","acceptedFiles","validations","minValue","coinbaseAddress","beforeDestroy","getGasPrice","gas","duration","action","onClick","toastObject","getValidationClass","fieldName","field","$v","$error","validate","balanc","convertedAmount","$touch","$invalid","isLessThan","generateQR","$refs","applyModal","txParams","nonce","dataTx","signature","txHash","check","utils","toHex","multipliedBy","gasLimit","chainId","networkId","getTransactionCount","propose","encodeABI","validatorAddress","signTransaction","sendSignedTransaction","getTransactionReceipt","send","hideModal","hide","amount","body","_yield$axios$post","message","verifyScannedQR","_yield$axios$get2","uploadKYC","formData","_yield$axios$post2","FormData","append","hash","$dirty","$set","ref","staticStyle","size","resignActive","resign","resignModal","resignValidation","generatedMess","withdrawActive","processing","Networkprovider","withdraw","receipt","onChangeWithdraw","checked","dcName","dcLocation","signHash","signHashError","website","telegram","maxLength","minLength","nextStep","update","sign","personal","signMessage","updateCandidateInfo","candidateNewInfor","backStep","copyTextArea","select","execCommand","_yield$axios$put","signedMessage","signData","candidateFields","totalVoted","voterRewards","voterRewardsFields","voterRewardsCurrentPage","voterRewardsSortBy","voterRewardsPerPage","voterRewardsSortDesc","voterRewardsTotalRows","getCandidates","getTransactions","getRewards","candiatePromise","totalCapacity","candidateCap","currentCandidateCap","rewardPromise","validator","startBlockNumber","endBlockNumber","candidatePageChange","sortingChangeCandidate","totaCapacity","estimatedReward","oldVal","calculateRewards","EstimateReward","votingError","isGreaterThanOrEqualTo","vote","onSuccess","onChangeVoting","loadingPage","NeworkProvider","isMin","isMax","isNumeric","isEnoughXDC","maxValue","converted","isOwner","limitedUnvote","isOwnerPromise","votedCap","validateMaxAmount","validateNumeric","validateXDCLeft","unvote","validateMinAmount","votedValue","isGreaterThan","acceptedValue","votedValueLeft","isUnvoteAll","isEqualTo","unvoteAll","btn","transaction","icon","description","buttonText","txUrl","getTransaction","urljoin","getCurrencySymbol","number","unit","fullStr","strLen","charsToShow","separator","frontChars","ceil","backChars","substr","prefix","constructor","encodeURIComponent","join","getSecondsToHms","parseInt","h","m","checkLongNumber","num","split","seps","dp","toFormat","XDCValidatorArtifacts","HDWalletProvider","require","PrivateKeyProvider","mnemonic","hdPath","hdWallets","withdraws","wh","aw","networks","rpc","XDCwallet","qrCodeApp","KYCStatus","hasQRCOde","setupAccount","whPromise","blksPromise","blks","balanceBN","getWithdrawBlockNumbers","Promise","all","it","blk","wd","getWithdrawCap","estimatedTime","setKYCStatus","forEach","w","loginByQRCode","getLoginResult","save","selectHdPath","offset","wallets","_args5","undefined","unlockTrezor","loadTrezorWallets","unlockLedger","loadMultipleLedgerWallets","display","ethereumProvider","p","pp","walletProvider","walletConnectProvider","connect","accounts","code","reason","Helper","XDCWeb3","HttpProvider","querySelector","getAccountInfo","user","onChangeSelect","_callee12","_context12","_ref5","changeView","k","closeModal","setHdPath","_callee13","_context13","moreHdAddresses","_callee14","_context14","cursor","defaultWalletNumber","_this9","_callee15","_context15","changePath","CandidateList","CandidateApply","CandidateResign","CandidateWithdraw","CandidateView","CandidateUpdate","VoterView","VotingView","UnvotingView","ConfirmView","isElectron","_t","hdwallet","email","Vue","use","Meta","BootstrapVue","VueClipboards","Toasted","position","goAway","singleton","TrezorConnect","appUrl","prototype","process","showQrModal","_rpcMap","EthereumProvider","init","projectId","walletconnectProjectId","qrModalOptions","themeMode","chains","optionalChains","rpcMap","metadata","icons","getConfig","localStorage","Contract","abi","transport","payload","getAccounts","ethereum","enable","xdcchain","appEth","TransportWebUSB","create","Eth","getAppConfiguration","arbitraryDataEnabled","getAddress","trezorPayload","HDWalletCreate","xpub","convertedAddress","isSupported","detectNetwork","ledgerPayload","parseFloat","fromWei","derivedKey","HDKey","derive","_pubKey","publicKey","chainCode","hdkey","Buffer","pubKey","ethUtils","buff","_ref8","_x9","VueRouter","router","mode","routes","beforeEach","_ref10","_x10","_x11","_x12","VueAnalytics","GA","linkers","autoTraking","screenView","Vuex","_ref11","ewjs","_p","_p2","connected","t4","t5","_x13","instance","sendAsync","deployed","_ref13","rawTx","serializedRawTx","Transaction","serialize","_x14","resolve","reject","_","startsWith","txObj","serializedTx","_ref14","sig","signPersonalMessage","_x15","EventBus","el","App","template","bip39","ProviderEngine","FiltersSubprovider","HookedSubprovider","RpcSubprovider","ethUtil","provider_url","address_index","num_addresses","wallet_hdpath","fromMasterSeed","mnemonicToSeed","addresses","wallet","derivePath","getWallet","addr","tmp_accounts","tmp_wallets","engine","addProvider","cb","getPrivateKey","pkey","dataIfExists","dataBuff","toBuffer","msgHashBuff","hashPersonalMessage","ecsign","toRpcSig","rpcUrl","start","getAddresses","module","exports","_common","regex","webpackContext","req","webpackContextResolve","__webpack_require__","o"],"sourceRoot":""}